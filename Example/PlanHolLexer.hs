module ALPHA2.PlanHolLexer where

import ALPHA2.Header
import qualified Control.Monad.Trans.State.Strict as XState
import qualified Data.Functor.Identity as XIdentity
import qualified Data.Map.Strict as XMap
import qualified Data.Set as XSet

data Token
    = T_dot SLoc
    | T_arrow SLoc
    | T_lparen SLoc
    | T_rparen SLoc
    | T_lbracket SLoc
    | T_rbracket SLoc
    | T_quest SLoc
    | T_if SLoc
    | T_comma SLoc
    | T_semicolon SLoc
    | T_fatarrow SLoc
    | T_succ SLoc
    | T_eq SLoc
    | T_le SLoc
    | T_lt SLoc
    | T_gt SLoc
    | T_ge SLoc
    | T_plus SLoc
    | T_minus SLoc
    | T_star SLoc
    | T_slash SLoc
    | T_pi SLoc
    | T_sigma SLoc
    | T_cut SLoc
    | T_true SLoc
    | T_fail SLoc
    | T_is SLoc
    | T_debug SLoc
    | T_bslash SLoc
    | T_cons SLoc
    | T_kind SLoc
    | T_type SLoc
    | T_smallid SLoc SmallId
    | T_largeid SLoc LargeId
    | T_nat_lit SLoc Integer
    | T_chr_lit SLoc Char
    | T_str_lit SLoc String
    deriving (Show)

data TermRep
    = RVar SLoc LargeId
    | RCon SLoc DataConstructor
    | RApp SLoc TermRep TermRep
    | RAbs SLoc LargeId TermRep
    | RPrn SLoc TermRep
    deriving (Show)

data TypeRep
    = RTyVar SLoc LargeId
    | RTyCon SLoc TypeConstructor
    | RTyApp SLoc TypeRep TypeRep
    | RTyPrn SLoc TypeRep
    deriving (Show)

data KindRep
    = RStar SLoc
    | RKArr SLoc KindRep KindRep
    | RKPrn SLoc KindRep
    deriving (Show)

data DeclRep
    = RKindDecl SLoc TypeConstructor KindRep
    | RTypeDecl SLoc DataConstructor TypeRep
    | RFactDecl SLoc TermRep
    deriving (Show)

instance HasSLoc Token where
    getSLoc token = case token of
        T_dot loc -> loc
        T_arrow loc -> loc
        T_lparen loc -> loc
        T_rparen loc -> loc
        T_lbracket loc -> loc
        T_rbracket loc -> loc
        T_if loc -> loc
        T_quest loc -> loc
        T_comma loc -> loc
        T_semicolon loc -> loc
        T_fatarrow loc -> loc
        T_succ loc -> loc
        T_eq loc -> loc
        T_le loc -> loc
        T_lt loc -> loc
        T_gt loc -> loc
        T_ge loc -> loc
        T_plus loc -> loc
        T_minus loc -> loc
        T_star loc -> loc
        T_slash loc -> loc
        T_pi loc -> loc
        T_sigma loc -> loc
        T_cut loc -> loc
        T_true loc -> loc
        T_fail loc -> loc
        T_is loc -> loc
        T_debug loc -> loc
        T_bslash loc -> loc
        T_cons loc -> loc
        T_kind loc -> loc
        T_type loc -> loc
        T_smallid loc _ -> loc
        T_largeid loc _ -> loc
        T_nat_lit loc _ -> loc
        T_chr_lit loc _ -> loc
        T_str_lit loc _ -> loc

instance HasSLoc TermRep where
    getSLoc term_rep = case term_rep of
        RVar loc _ -> loc
        RCon loc _ -> loc
        RApp loc _ _ -> loc
        RAbs loc _ _ -> loc
        RPrn loc _ -> loc

instance HasSLoc TypeRep where
    getSLoc type_rep = case type_rep of
        RTyVar loc _ -> loc
        RTyCon loc _ -> loc
        RTyApp loc _ _ -> loc
        RTyPrn loc _ -> loc

instance HasSLoc KindRep where
    getSLoc kind_rep = case kind_rep of
        RStar loc -> loc
        RKArr loc _ _ -> loc
        RKPrn loc _ -> loc

mkNatLit :: SLoc -> Integer -> TermRep
mkNatLit loc nat = RCon loc (DC_NatL nat)

mkChrLit :: SLoc -> Char -> TermRep
mkChrLit loc chr = RCon loc (DC_ChrL chr)

mkStrLit :: SLoc -> String -> TermRep
mkStrLit loc str = foldr (\ch -> \acc -> RApp loc (RApp loc (RCon loc DC_Cons) (RCon loc (DC_ChrL ch))) acc) (RCon loc DC_Nil) str

-- the following codes are generated by LGS.

data DFA
    = DFA
        { getInitialQOfDFA :: Int
        , getFinalQsOfDFA :: XMap.Map Int Int
        , getTransitionsOfDFA :: XMap.Map (Int, Char) Int
        , getMarkedQsOfDFA :: XMap.Map Int (Bool, XSet.Set Int)
        , getPseudoFinalsOfDFA :: XSet.Set Int
        }
    deriving ()

runHolLexer :: String -> Either (Int, Int) [Token]
runHolLexer = runHolLexer_this . addLoc 1 1 where
    theDFA :: DFA
    theDFA = DFA
        { getInitialQOfDFA = 10
        , getFinalQsOfDFA = XMap.fromAscList [(11, 1), (12, 2), (13, 3), (14, 4), (15, 5), (16, 6), (17, 7), (18, 8), (19, 9), (20, 11), (21, 12), (22, 13), (23, 14), (24, 15), (25, 16), (26, 17), (27, 18), (28, 19), (29, 20), (30, 21), (31, 22), (32, 23), (33, 24), (34, 25), (35, 26), (36, 27), (37, 28), (38, 29), (39, 30), (40, 31), (41, 32), (42, 33), (43, 34), (44, 34), (45, 34), (46, 34), (47, 34), (48, 34), (49, 34), (50, 34), (51, 34), (52, 34), (53, 34), (54, 34), (55, 34), (56, 34), (57, 34), (58, 34), (59, 34), (60, 34), (61, 34), (62, 34), (63, 34), (64, 35), (65, 35), (66, 36), (67, 37), (68, 38), (69, 39), (70, 40), (71, 41)]
        , getTransitionsOfDFA = XMap.fromAscList 
            [ ((1, '\n'), 1), ((1, ' '), 1), ((1, '!'), 1), ((1, '"'), 1), ((1, '#'), 1), ((1, '$'), 1), ((1, '%'), 1), ((1, '&'), 1), ((1, '\''), 1), ((1, '('), 1), ((1, ')'), 1), ((1, '*'), 7), ((1, '+'), 1), ((1, ','), 1), ((1, '-'), 1), ((1, '.'), 1), ((1, '/'), 1), ((1, '0'), 1), ((1, '1'), 1), ((1, '2'), 1), ((1, '3'), 1), ((1, '4'), 1), ((1, '5'), 1), ((1, '6'), 1), ((1, '7'), 1), ((1, '8'), 1), ((1, '9'), 1), ((1, ':'), 1), ((1, ';'), 1), ((1, '<'), 1), ((1, '='), 1), ((1, '>'), 1), ((1, '?'), 1), ((1, '@'), 1), ((1, 'A'), 1), ((1, 'B'), 1), ((1, 'C'), 1), ((1, 'D'), 1), ((1, 'E'), 1), ((1, 'F'), 1), ((1, 'G'), 1), ((1, 'H'), 1), ((1, 'I'), 1), ((1, 'J'), 1), ((1, 'K'), 1), ((1, 'L'), 1), ((1, 'M'), 1), ((1, 'N'), 1), ((1, 'O'), 1), ((1, 'P'), 1), ((1, 'Q'), 1), ((1, 'R'), 1), ((1, 'S'), 1), ((1, 'T'), 1), ((1, 'U'), 1), ((1, 'V'), 1), ((1, 'W'), 1), ((1, 'X'), 1), ((1, 'Y'), 1), ((1, 'Z'), 1), ((1, '['), 1), ((1, '\\'), 1), ((1, ']'), 1), ((1, '^'), 1), ((1, '_'), 1), ((1, '`'), 1), ((1, 'a'), 1), ((1, 'b'), 1), ((1, 'c'), 1), ((1, 'd'), 1), ((1, 'e'), 1), ((1, 'f'), 1), ((1, 'g'), 1), ((1, 'h'), 1), ((1, 'i'), 1), ((1, 'j'), 1), ((1, 'k'), 1), ((1, 'l'), 1), ((1, 'm'), 1), ((1, 'n'), 1), ((1, 'o'), 1), ((1, 'p'), 1), ((1, 'q'), 1), ((1, 'r'), 1), ((1, 's'), 1), ((1, 't'), 1), ((1, 'u'), 1), ((1, 'v'), 1), ((1, 'w'), 1), ((1, 'x'), 1), ((1, 'y'), 1), ((1, 'z'), 1), ((1, '{'), 1), ((1, '|'), 1), ((1, '}'), 1), ((1, '~'), 1)
            , ((2, '"'), 6), ((2, '\''), 6), ((2, '\\'), 6), ((2, 'n'), 6), ((2, 't'), 6)
            , ((3, '"'), 5), ((3, '\''), 5), ((3, '\\'), 5), ((3, 'n'), 5), ((3, 't'), 5)
            , ((4, ' '), 6), ((4, '!'), 6), ((4, '#'), 6), ((4, '$'), 6), ((4, '%'), 6), ((4, '&'), 6), ((4, '\''), 6), ((4, '('), 6), ((4, ')'), 6), ((4, '*'), 6), ((4, '+'), 6), ((4, ','), 6), ((4, '-'), 6), ((4, '.'), 6), ((4, '/'), 6), ((4, '0'), 6), ((4, '1'), 6), ((4, '2'), 6), ((4, '3'), 6), ((4, '4'), 6), ((4, '5'), 6), ((4, '6'), 6), ((4, '7'), 6), ((4, '8'), 6), ((4, '9'), 6), ((4, ':'), 6), ((4, ';'), 6), ((4, '<'), 6), ((4, '='), 6), ((4, '>'), 6), ((4, '?'), 6), ((4, '@'), 6), ((4, 'A'), 6), ((4, 'B'), 6), ((4, 'C'), 6), ((4, 'D'), 6), ((4, 'E'), 6), ((4, 'F'), 6), ((4, 'G'), 6), ((4, 'H'), 6), ((4, 'I'), 6), ((4, 'J'), 6), ((4, 'K'), 6), ((4, 'L'), 6), ((4, 'M'), 6), ((4, 'N'), 6), ((4, 'O'), 6), ((4, 'P'), 6), ((4, 'Q'), 6), ((4, 'R'), 6), ((4, 'S'), 6), ((4, 'T'), 6), ((4, 'U'), 6), ((4, 'V'), 6), ((4, 'W'), 6), ((4, 'X'), 6), ((4, 'Y'), 6), ((4, 'Z'), 6), ((4, '['), 6), ((4, '\\'), 2), ((4, ']'), 6), ((4, '^'), 6), ((4, '_'), 6), ((4, '`'), 6), ((4, 'a'), 6), ((4, 'b'), 6), ((4, 'c'), 6), ((4, 'd'), 6), ((4, 'e'), 6), ((4, 'f'), 6), ((4, 'g'), 6), ((4, 'h'), 6), ((4, 'i'), 6), ((4, 'j'), 6), ((4, 'k'), 6), ((4, 'l'), 6), ((4, 'm'), 6), ((4, 'n'), 6), ((4, 'o'), 6), ((4, 'p'), 6), ((4, 'q'), 6), ((4, 'r'), 6), ((4, 's'), 6), ((4, 't'), 6), ((4, 'u'), 6), ((4, 'v'), 6), ((4, 'w'), 6), ((4, 'x'), 6), ((4, 'y'), 6), ((4, 'z'), 6), ((4, '{'), 6), ((4, '|'), 6), ((4, '}'), 6), ((4, '~'), 6)
            , ((5, ' '), 5), ((5, '!'), 5), ((5, '"'), 67), ((5, '#'), 5), ((5, '$'), 5), ((5, '%'), 5), ((5, '&'), 5), ((5, '\''), 5), ((5, '('), 5), ((5, ')'), 5), ((5, '*'), 5), ((5, '+'), 5), ((5, ','), 5), ((5, '-'), 5), ((5, '.'), 5), ((5, '/'), 5), ((5, '0'), 5), ((5, '1'), 5), ((5, '2'), 5), ((5, '3'), 5), ((5, '4'), 5), ((5, '5'), 5), ((5, '6'), 5), ((5, '7'), 5), ((5, '8'), 5), ((5, '9'), 5), ((5, ':'), 5), ((5, ';'), 5), ((5, '<'), 5), ((5, '='), 5), ((5, '>'), 5), ((5, '?'), 5), ((5, '@'), 5), ((5, 'A'), 5), ((5, 'B'), 5), ((5, 'C'), 5), ((5, 'D'), 5), ((5, 'E'), 5), ((5, 'F'), 5), ((5, 'G'), 5), ((5, 'H'), 5), ((5, 'I'), 5), ((5, 'J'), 5), ((5, 'K'), 5), ((5, 'L'), 5), ((5, 'M'), 5), ((5, 'N'), 5), ((5, 'O'), 5), ((5, 'P'), 5), ((5, 'Q'), 5), ((5, 'R'), 5), ((5, 'S'), 5), ((5, 'T'), 5), ((5, 'U'), 5), ((5, 'V'), 5), ((5, 'W'), 5), ((5, 'X'), 5), ((5, 'Y'), 5), ((5, 'Z'), 5), ((5, '['), 5), ((5, '\\'), 3), ((5, ']'), 5), ((5, '^'), 5), ((5, '_'), 5), ((5, '`'), 5), ((5, 'a'), 5), ((5, 'b'), 5), ((5, 'c'), 5), ((5, 'd'), 5), ((5, 'e'), 5), ((5, 'f'), 5), ((5, 'g'), 5), ((5, 'h'), 5), ((5, 'i'), 5), ((5, 'j'), 5), ((5, 'k'), 5), ((5, 'l'), 5), ((5, 'm'), 5), ((5, 'n'), 5), ((5, 'o'), 5), ((5, 'p'), 5), ((5, 'q'), 5), ((5, 'r'), 5), ((5, 's'), 5), ((5, 't'), 5), ((5, 'u'), 5), ((5, 'v'), 5), ((5, 'w'), 5), ((5, 'x'), 5), ((5, 'y'), 5), ((5, 'z'), 5), ((5, '{'), 5), ((5, '|'), 5), ((5, '}'), 5), ((5, '~'), 5)
            , ((6, '\''), 68)
            , ((7, '\n'), 1), ((7, ' '), 1), ((7, '!'), 1), ((7, '"'), 1), ((7, '#'), 1), ((7, '$'), 1), ((7, '%'), 1), ((7, '&'), 1), ((7, '\''), 1), ((7, '('), 1), ((7, ')'), 71), ((7, '*'), 1), ((7, '+'), 1), ((7, ','), 1), ((7, '-'), 1), ((7, '.'), 1), ((7, '/'), 1), ((7, '0'), 1), ((7, '1'), 1), ((7, '2'), 1), ((7, '3'), 1), ((7, '4'), 1), ((7, '5'), 1), ((7, '6'), 1), ((7, '7'), 1), ((7, '8'), 1), ((7, '9'), 1), ((7, ':'), 1), ((7, ';'), 1), ((7, '<'), 1), ((7, '='), 1), ((7, '>'), 1), ((7, '?'), 1), ((7, '@'), 1), ((7, 'A'), 1), ((7, 'B'), 1), ((7, 'C'), 1), ((7, 'D'), 1), ((7, 'E'), 1), ((7, 'F'), 1), ((7, 'G'), 1), ((7, 'H'), 1), ((7, 'I'), 1), ((7, 'J'), 1), ((7, 'K'), 1), ((7, 'L'), 1), ((7, 'M'), 1), ((7, 'N'), 1), ((7, 'O'), 1), ((7, 'P'), 1), ((7, 'Q'), 1), ((7, 'R'), 1), ((7, 'S'), 1), ((7, 'T'), 1), ((7, 'U'), 1), ((7, 'V'), 1), ((7, 'W'), 1), ((7, 'X'), 1), ((7, 'Y'), 1), ((7, 'Z'), 1), ((7, '['), 1), ((7, '\\'), 1), ((7, ']'), 1), ((7, '^'), 1), ((7, '_'), 1), ((7, '`'), 1), ((7, 'a'), 1), ((7, 'b'), 1), ((7, 'c'), 1), ((7, 'd'), 1), ((7, 'e'), 1), ((7, 'f'), 1), ((7, 'g'), 1), ((7, 'h'), 1), ((7, 'i'), 1), ((7, 'j'), 1), ((7, 'k'), 1), ((7, 'l'), 1), ((7, 'm'), 1), ((7, 'n'), 1), ((7, 'o'), 1), ((7, 'p'), 1), ((7, 'q'), 1), ((7, 'r'), 1), ((7, 's'), 1), ((7, 't'), 1), ((7, 'u'), 1), ((7, 'v'), 1), ((7, 'w'), 1), ((7, 'x'), 1), ((7, 'y'), 1), ((7, 'z'), 1), ((7, '{'), 1), ((7, '|'), 1), ((7, '}'), 1), ((7, '~'), 1)
            , ((8, '-'), 18)
            , ((9, '-'), 20), ((9, ':'), 40)
            , ((10, '\n'), 69), ((10, ' '), 69), ((10, '!'), 34), ((10, '"'), 5), ((10, '%'), 70), ((10, '\''), 4), ((10, '('), 14), ((10, ')'), 15), ((10, '*'), 29), ((10, '+'), 27), ((10, ','), 19), ((10, '-'), 28), ((10, '.'), 11), ((10, '/'), 30), ((10, '0'), 66), ((10, '1'), 66), ((10, '2'), 66), ((10, '3'), 66), ((10, '4'), 66), ((10, '5'), 66), ((10, '6'), 66), ((10, '7'), 66), ((10, '8'), 66), ((10, '9'), 66), ((10, ':'), 9), ((10, ';'), 33), ((10, '<'), 24), ((10, '='), 22), ((10, '>'), 26), ((10, '?'), 8), ((10, 'A'), 65), ((10, 'B'), 65), ((10, 'C'), 65), ((10, 'D'), 65), ((10, 'E'), 65), ((10, 'F'), 65), ((10, 'G'), 65), ((10, 'H'), 65), ((10, 'I'), 65), ((10, 'J'), 65), ((10, 'K'), 65), ((10, 'L'), 65), ((10, 'M'), 65), ((10, 'N'), 65), ((10, 'O'), 65), ((10, 'P'), 65), ((10, 'Q'), 65), ((10, 'R'), 65), ((10, 'S'), 65), ((10, 'T'), 65), ((10, 'U'), 65), ((10, 'V'), 65), ((10, 'W'), 65), ((10, 'X'), 65), ((10, 'Y'), 65), ((10, 'Z'), 65), ((10, '['), 16), ((10, '\\'), 39), ((10, ']'), 17), ((10, '_'), 64), ((10, 'a'), 56), ((10, 'b'), 56), ((10, 'c'), 56), ((10, 'd'), 53), ((10, 'e'), 56), ((10, 'f'), 55), ((10, 'g'), 56), ((10, 'h'), 56), ((10, 'i'), 63), ((10, 'j'), 56), ((10, 'k'), 47), ((10, 'l'), 56), ((10, 'm'), 56), ((10, 'n'), 56), ((10, 'o'), 56), ((10, 'p'), 43), ((10, 'q'), 56), ((10, 'r'), 56), ((10, 's'), 21), ((10, 't'), 50), ((10, 'u'), 56), ((10, 'v'), 56), ((10, 'w'), 56), ((10, 'x'), 56), ((10, 'y'), 56), ((10, 'z'), 56)
            , ((14, '*'), 1)
            , ((21, '0'), 56), ((21, '1'), 56), ((21, '2'), 56), ((21, '3'), 56), ((21, '4'), 56), ((21, '5'), 56), ((21, '6'), 56), ((21, '7'), 56), ((21, '8'), 56), ((21, '9'), 56), ((21, 'A'), 56), ((21, 'B'), 56), ((21, 'C'), 56), ((21, 'D'), 56), ((21, 'E'), 56), ((21, 'F'), 56), ((21, 'G'), 56), ((21, 'H'), 56), ((21, 'I'), 56), ((21, 'J'), 56), ((21, 'K'), 56), ((21, 'L'), 56), ((21, 'M'), 56), ((21, 'N'), 56), ((21, 'O'), 56), ((21, 'P'), 56), ((21, 'Q'), 56), ((21, 'R'), 56), ((21, 'S'), 56), ((21, 'T'), 56), ((21, 'U'), 56), ((21, 'V'), 56), ((21, 'W'), 56), ((21, 'X'), 56), ((21, 'Y'), 56), ((21, 'Z'), 56), ((21, '_'), 56), ((21, 'a'), 56), ((21, 'b'), 56), ((21, 'c'), 56), ((21, 'd'), 56), ((21, 'e'), 56), ((21, 'f'), 56), ((21, 'g'), 56), ((21, 'h'), 56), ((21, 'i'), 45), ((21, 'j'), 56), ((21, 'k'), 56), ((21, 'l'), 56), ((21, 'm'), 56), ((21, 'n'), 56), ((21, 'o'), 56), ((21, 'p'), 56), ((21, 'q'), 56), ((21, 'r'), 56), ((21, 's'), 56), ((21, 't'), 56), ((21, 'u'), 56), ((21, 'v'), 56), ((21, 'w'), 56), ((21, 'x'), 56), ((21, 'y'), 56), ((21, 'z'), 56)
            , ((22, '<'), 23), ((22, '>'), 13)
            , ((26, '='), 25)
            , ((28, '>'), 12)
            , ((31, '0'), 56), ((31, '1'), 56), ((31, '2'), 56), ((31, '3'), 56), ((31, '4'), 56), ((31, '5'), 56), ((31, '6'), 56), ((31, '7'), 56), ((31, '8'), 56), ((31, '9'), 56), ((31, 'A'), 56), ((31, 'B'), 56), ((31, 'C'), 56), ((31, 'D'), 56), ((31, 'E'), 56), ((31, 'F'), 56), ((31, 'G'), 56), ((31, 'H'), 56), ((31, 'I'), 56), ((31, 'J'), 56), ((31, 'K'), 56), ((31, 'L'), 56), ((31, 'M'), 56), ((31, 'N'), 56), ((31, 'O'), 56), ((31, 'P'), 56), ((31, 'Q'), 56), ((31, 'R'), 56), ((31, 'S'), 56), ((31, 'T'), 56), ((31, 'U'), 56), ((31, 'V'), 56), ((31, 'W'), 56), ((31, 'X'), 56), ((31, 'Y'), 56), ((31, 'Z'), 56), ((31, '_'), 56), ((31, 'a'), 56), ((31, 'b'), 56), ((31, 'c'), 56), ((31, 'd'), 56), ((31, 'e'), 56), ((31, 'f'), 56), ((31, 'g'), 56), ((31, 'h'), 56), ((31, 'i'), 56), ((31, 'j'), 56), ((31, 'k'), 56), ((31, 'l'), 56), ((31, 'm'), 56), ((31, 'n'), 56), ((31, 'o'), 56), ((31, 'p'), 56), ((31, 'q'), 56), ((31, 'r'), 56), ((31, 's'), 56), ((31, 't'), 56), ((31, 'u'), 56), ((31, 'v'), 56), ((31, 'w'), 56), ((31, 'x'), 56), ((31, 'y'), 56), ((31, 'z'), 56)
            , ((32, '0'), 56), ((32, '1'), 56), ((32, '2'), 56), ((32, '3'), 56), ((32, '4'), 56), ((32, '5'), 56), ((32, '6'), 56), ((32, '7'), 56), ((32, '8'), 56), ((32, '9'), 56), ((32, 'A'), 56), ((32, 'B'), 56), ((32, 'C'), 56), ((32, 'D'), 56), ((32, 'E'), 56), ((32, 'F'), 56), ((32, 'G'), 56), ((32, 'H'), 56), ((32, 'I'), 56), ((32, 'J'), 56), ((32, 'K'), 56), ((32, 'L'), 56), ((32, 'M'), 56), ((32, 'N'), 56), ((32, 'O'), 56), ((32, 'P'), 56), ((32, 'Q'), 56), ((32, 'R'), 56), ((32, 'S'), 56), ((32, 'T'), 56), ((32, 'U'), 56), ((32, 'V'), 56), ((32, 'W'), 56), ((32, 'X'), 56), ((32, 'Y'), 56), ((32, 'Z'), 56), ((32, '_'), 56), ((32, 'a'), 56), ((32, 'b'), 56), ((32, 'c'), 56), ((32, 'd'), 56), ((32, 'e'), 56), ((32, 'f'), 56), ((32, 'g'), 56), ((32, 'h'), 56), ((32, 'i'), 56), ((32, 'j'), 56), ((32, 'k'), 56), ((32, 'l'), 56), ((32, 'm'), 56), ((32, 'n'), 56), ((32, 'o'), 56), ((32, 'p'), 56), ((32, 'q'), 56), ((32, 'r'), 56), ((32, 's'), 56), ((32, 't'), 56), ((32, 'u'), 56), ((32, 'v'), 56), ((32, 'w'), 56), ((32, 'x'), 56), ((32, 'y'), 56), ((32, 'z'), 56)
            , ((35, '0'), 56), ((35, '1'), 56), ((35, '2'), 56), ((35, '3'), 56), ((35, '4'), 56), ((35, '5'), 56), ((35, '6'), 56), ((35, '7'), 56), ((35, '8'), 56), ((35, '9'), 56), ((35, 'A'), 56), ((35, 'B'), 56), ((35, 'C'), 56), ((35, 'D'), 56), ((35, 'E'), 56), ((35, 'F'), 56), ((35, 'G'), 56), ((35, 'H'), 56), ((35, 'I'), 56), ((35, 'J'), 56), ((35, 'K'), 56), ((35, 'L'), 56), ((35, 'M'), 56), ((35, 'N'), 56), ((35, 'O'), 56), ((35, 'P'), 56), ((35, 'Q'), 56), ((35, 'R'), 56), ((35, 'S'), 56), ((35, 'T'), 56), ((35, 'U'), 56), ((35, 'V'), 56), ((35, 'W'), 56), ((35, 'X'), 56), ((35, 'Y'), 56), ((35, 'Z'), 56), ((35, '_'), 56), ((35, 'a'), 56), ((35, 'b'), 56), ((35, 'c'), 56), ((35, 'd'), 56), ((35, 'e'), 56), ((35, 'f'), 56), ((35, 'g'), 56), ((35, 'h'), 56), ((35, 'i'), 56), ((35, 'j'), 56), ((35, 'k'), 56), ((35, 'l'), 56), ((35, 'm'), 56), ((35, 'n'), 56), ((35, 'o'), 56), ((35, 'p'), 56), ((35, 'q'), 56), ((35, 'r'), 56), ((35, 's'), 56), ((35, 't'), 56), ((35, 'u'), 56), ((35, 'v'), 56), ((35, 'w'), 56), ((35, 'x'), 56), ((35, 'y'), 56), ((35, 'z'), 56)
            , ((36, '0'), 56), ((36, '1'), 56), ((36, '2'), 56), ((36, '3'), 56), ((36, '4'), 56), ((36, '5'), 56), ((36, '6'), 56), ((36, '7'), 56), ((36, '8'), 56), ((36, '9'), 56), ((36, 'A'), 56), ((36, 'B'), 56), ((36, 'C'), 56), ((36, 'D'), 56), ((36, 'E'), 56), ((36, 'F'), 56), ((36, 'G'), 56), ((36, 'H'), 56), ((36, 'I'), 56), ((36, 'J'), 56), ((36, 'K'), 56), ((36, 'L'), 56), ((36, 'M'), 56), ((36, 'N'), 56), ((36, 'O'), 56), ((36, 'P'), 56), ((36, 'Q'), 56), ((36, 'R'), 56), ((36, 'S'), 56), ((36, 'T'), 56), ((36, 'U'), 56), ((36, 'V'), 56), ((36, 'W'), 56), ((36, 'X'), 56), ((36, 'Y'), 56), ((36, 'Z'), 56), ((36, '_'), 56), ((36, 'a'), 56), ((36, 'b'), 56), ((36, 'c'), 56), ((36, 'd'), 56), ((36, 'e'), 56), ((36, 'f'), 56), ((36, 'g'), 56), ((36, 'h'), 56), ((36, 'i'), 56), ((36, 'j'), 56), ((36, 'k'), 56), ((36, 'l'), 56), ((36, 'm'), 56), ((36, 'n'), 56), ((36, 'o'), 56), ((36, 'p'), 56), ((36, 'q'), 56), ((36, 'r'), 56), ((36, 's'), 56), ((36, 't'), 56), ((36, 'u'), 56), ((36, 'v'), 56), ((36, 'w'), 56), ((36, 'x'), 56), ((36, 'y'), 56), ((36, 'z'), 56)
            , ((37, '0'), 56), ((37, '1'), 56), ((37, '2'), 56), ((37, '3'), 56), ((37, '4'), 56), ((37, '5'), 56), ((37, '6'), 56), ((37, '7'), 56), ((37, '8'), 56), ((37, '9'), 56), ((37, 'A'), 56), ((37, 'B'), 56), ((37, 'C'), 56), ((37, 'D'), 56), ((37, 'E'), 56), ((37, 'F'), 56), ((37, 'G'), 56), ((37, 'H'), 56), ((37, 'I'), 56), ((37, 'J'), 56), ((37, 'K'), 56), ((37, 'L'), 56), ((37, 'M'), 56), ((37, 'N'), 56), ((37, 'O'), 56), ((37, 'P'), 56), ((37, 'Q'), 56), ((37, 'R'), 56), ((37, 'S'), 56), ((37, 'T'), 56), ((37, 'U'), 56), ((37, 'V'), 56), ((37, 'W'), 56), ((37, 'X'), 56), ((37, 'Y'), 56), ((37, 'Z'), 56), ((37, '_'), 56), ((37, 'a'), 56), ((37, 'b'), 56), ((37, 'c'), 56), ((37, 'd'), 56), ((37, 'e'), 56), ((37, 'f'), 56), ((37, 'g'), 56), ((37, 'h'), 56), ((37, 'i'), 56), ((37, 'j'), 56), ((37, 'k'), 56), ((37, 'l'), 56), ((37, 'm'), 56), ((37, 'n'), 56), ((37, 'o'), 56), ((37, 'p'), 56), ((37, 'q'), 56), ((37, 'r'), 56), ((37, 's'), 56), ((37, 't'), 56), ((37, 'u'), 56), ((37, 'v'), 56), ((37, 'w'), 56), ((37, 'x'), 56), ((37, 'y'), 56), ((37, 'z'), 56)
            , ((38, '0'), 56), ((38, '1'), 56), ((38, '2'), 56), ((38, '3'), 56), ((38, '4'), 56), ((38, '5'), 56), ((38, '6'), 56), ((38, '7'), 56), ((38, '8'), 56), ((38, '9'), 56), ((38, 'A'), 56), ((38, 'B'), 56), ((38, 'C'), 56), ((38, 'D'), 56), ((38, 'E'), 56), ((38, 'F'), 56), ((38, 'G'), 56), ((38, 'H'), 56), ((38, 'I'), 56), ((38, 'J'), 56), ((38, 'K'), 56), ((38, 'L'), 56), ((38, 'M'), 56), ((38, 'N'), 56), ((38, 'O'), 56), ((38, 'P'), 56), ((38, 'Q'), 56), ((38, 'R'), 56), ((38, 'S'), 56), ((38, 'T'), 56), ((38, 'U'), 56), ((38, 'V'), 56), ((38, 'W'), 56), ((38, 'X'), 56), ((38, 'Y'), 56), ((38, 'Z'), 56), ((38, '_'), 56), ((38, 'a'), 56), ((38, 'b'), 56), ((38, 'c'), 56), ((38, 'd'), 56), ((38, 'e'), 56), ((38, 'f'), 56), ((38, 'g'), 56), ((38, 'h'), 56), ((38, 'i'), 56), ((38, 'j'), 56), ((38, 'k'), 56), ((38, 'l'), 56), ((38, 'm'), 56), ((38, 'n'), 56), ((38, 'o'), 56), ((38, 'p'), 56), ((38, 'q'), 56), ((38, 'r'), 56), ((38, 's'), 56), ((38, 't'), 56), ((38, 'u'), 56), ((38, 'v'), 56), ((38, 'w'), 56), ((38, 'x'), 56), ((38, 'y'), 56), ((38, 'z'), 56)
            , ((41, '0'), 56), ((41, '1'), 56), ((41, '2'), 56), ((41, '3'), 56), ((41, '4'), 56), ((41, '5'), 56), ((41, '6'), 56), ((41, '7'), 56), ((41, '8'), 56), ((41, '9'), 56), ((41, 'A'), 56), ((41, 'B'), 56), ((41, 'C'), 56), ((41, 'D'), 56), ((41, 'E'), 56), ((41, 'F'), 56), ((41, 'G'), 56), ((41, 'H'), 56), ((41, 'I'), 56), ((41, 'J'), 56), ((41, 'K'), 56), ((41, 'L'), 56), ((41, 'M'), 56), ((41, 'N'), 56), ((41, 'O'), 56), ((41, 'P'), 56), ((41, 'Q'), 56), ((41, 'R'), 56), ((41, 'S'), 56), ((41, 'T'), 56), ((41, 'U'), 56), ((41, 'V'), 56), ((41, 'W'), 56), ((41, 'X'), 56), ((41, 'Y'), 56), ((41, 'Z'), 56), ((41, '_'), 56), ((41, 'a'), 56), ((41, 'b'), 56), ((41, 'c'), 56), ((41, 'd'), 56), ((41, 'e'), 56), ((41, 'f'), 56), ((41, 'g'), 56), ((41, 'h'), 56), ((41, 'i'), 56), ((41, 'j'), 56), ((41, 'k'), 56), ((41, 'l'), 56), ((41, 'm'), 56), ((41, 'n'), 56), ((41, 'o'), 56), ((41, 'p'), 56), ((41, 'q'), 56), ((41, 'r'), 56), ((41, 's'), 56), ((41, 't'), 56), ((41, 'u'), 56), ((41, 'v'), 56), ((41, 'w'), 56), ((41, 'x'), 56), ((41, 'y'), 56), ((41, 'z'), 56)
            , ((42, '0'), 56), ((42, '1'), 56), ((42, '2'), 56), ((42, '3'), 56), ((42, '4'), 56), ((42, '5'), 56), ((42, '6'), 56), ((42, '7'), 56), ((42, '8'), 56), ((42, '9'), 56), ((42, 'A'), 56), ((42, 'B'), 56), ((42, 'C'), 56), ((42, 'D'), 56), ((42, 'E'), 56), ((42, 'F'), 56), ((42, 'G'), 56), ((42, 'H'), 56), ((42, 'I'), 56), ((42, 'J'), 56), ((42, 'K'), 56), ((42, 'L'), 56), ((42, 'M'), 56), ((42, 'N'), 56), ((42, 'O'), 56), ((42, 'P'), 56), ((42, 'Q'), 56), ((42, 'R'), 56), ((42, 'S'), 56), ((42, 'T'), 56), ((42, 'U'), 56), ((42, 'V'), 56), ((42, 'W'), 56), ((42, 'X'), 56), ((42, 'Y'), 56), ((42, 'Z'), 56), ((42, '_'), 56), ((42, 'a'), 56), ((42, 'b'), 56), ((42, 'c'), 56), ((42, 'd'), 56), ((42, 'e'), 56), ((42, 'f'), 56), ((42, 'g'), 56), ((42, 'h'), 56), ((42, 'i'), 56), ((42, 'j'), 56), ((42, 'k'), 56), ((42, 'l'), 56), ((42, 'm'), 56), ((42, 'n'), 56), ((42, 'o'), 56), ((42, 'p'), 56), ((42, 'q'), 56), ((42, 'r'), 56), ((42, 's'), 56), ((42, 't'), 56), ((42, 'u'), 56), ((42, 'v'), 56), ((42, 'w'), 56), ((42, 'x'), 56), ((42, 'y'), 56), ((42, 'z'), 56)
            , ((43, '0'), 56), ((43, '1'), 56), ((43, '2'), 56), ((43, '3'), 56), ((43, '4'), 56), ((43, '5'), 56), ((43, '6'), 56), ((43, '7'), 56), ((43, '8'), 56), ((43, '9'), 56), ((43, 'A'), 56), ((43, 'B'), 56), ((43, 'C'), 56), ((43, 'D'), 56), ((43, 'E'), 56), ((43, 'F'), 56), ((43, 'G'), 56), ((43, 'H'), 56), ((43, 'I'), 56), ((43, 'J'), 56), ((43, 'K'), 56), ((43, 'L'), 56), ((43, 'M'), 56), ((43, 'N'), 56), ((43, 'O'), 56), ((43, 'P'), 56), ((43, 'Q'), 56), ((43, 'R'), 56), ((43, 'S'), 56), ((43, 'T'), 56), ((43, 'U'), 56), ((43, 'V'), 56), ((43, 'W'), 56), ((43, 'X'), 56), ((43, 'Y'), 56), ((43, 'Z'), 56), ((43, '_'), 56), ((43, 'a'), 56), ((43, 'b'), 56), ((43, 'c'), 56), ((43, 'd'), 56), ((43, 'e'), 56), ((43, 'f'), 56), ((43, 'g'), 56), ((43, 'h'), 56), ((43, 'i'), 31), ((43, 'j'), 56), ((43, 'k'), 56), ((43, 'l'), 56), ((43, 'm'), 56), ((43, 'n'), 56), ((43, 'o'), 56), ((43, 'p'), 56), ((43, 'q'), 56), ((43, 'r'), 56), ((43, 's'), 56), ((43, 't'), 56), ((43, 'u'), 56), ((43, 'v'), 56), ((43, 'w'), 56), ((43, 'x'), 56), ((43, 'y'), 56), ((43, 'z'), 56)
            , ((44, '0'), 56), ((44, '1'), 56), ((44, '2'), 56), ((44, '3'), 56), ((44, '4'), 56), ((44, '5'), 56), ((44, '6'), 56), ((44, '7'), 56), ((44, '8'), 56), ((44, '9'), 56), ((44, 'A'), 56), ((44, 'B'), 56), ((44, 'C'), 56), ((44, 'D'), 56), ((44, 'E'), 56), ((44, 'F'), 56), ((44, 'G'), 56), ((44, 'H'), 56), ((44, 'I'), 56), ((44, 'J'), 56), ((44, 'K'), 56), ((44, 'L'), 56), ((44, 'M'), 56), ((44, 'N'), 56), ((44, 'O'), 56), ((44, 'P'), 56), ((44, 'Q'), 56), ((44, 'R'), 56), ((44, 'S'), 56), ((44, 'T'), 56), ((44, 'U'), 56), ((44, 'V'), 56), ((44, 'W'), 56), ((44, 'X'), 56), ((44, 'Y'), 56), ((44, 'Z'), 56), ((44, '_'), 56), ((44, 'a'), 56), ((44, 'b'), 56), ((44, 'c'), 56), ((44, 'd'), 56), ((44, 'e'), 56), ((44, 'f'), 56), ((44, 'g'), 56), ((44, 'h'), 56), ((44, 'i'), 56), ((44, 'j'), 56), ((44, 'k'), 56), ((44, 'l'), 56), ((44, 'm'), 57), ((44, 'n'), 56), ((44, 'o'), 56), ((44, 'p'), 56), ((44, 'q'), 56), ((44, 'r'), 56), ((44, 's'), 56), ((44, 't'), 56), ((44, 'u'), 56), ((44, 'v'), 56), ((44, 'w'), 56), ((44, 'x'), 56), ((44, 'y'), 56), ((44, 'z'), 56)
            , ((45, '0'), 56), ((45, '1'), 56), ((45, '2'), 56), ((45, '3'), 56), ((45, '4'), 56), ((45, '5'), 56), ((45, '6'), 56), ((45, '7'), 56), ((45, '8'), 56), ((45, '9'), 56), ((45, 'A'), 56), ((45, 'B'), 56), ((45, 'C'), 56), ((45, 'D'), 56), ((45, 'E'), 56), ((45, 'F'), 56), ((45, 'G'), 56), ((45, 'H'), 56), ((45, 'I'), 56), ((45, 'J'), 56), ((45, 'K'), 56), ((45, 'L'), 56), ((45, 'M'), 56), ((45, 'N'), 56), ((45, 'O'), 56), ((45, 'P'), 56), ((45, 'Q'), 56), ((45, 'R'), 56), ((45, 'S'), 56), ((45, 'T'), 56), ((45, 'U'), 56), ((45, 'V'), 56), ((45, 'W'), 56), ((45, 'X'), 56), ((45, 'Y'), 56), ((45, 'Z'), 56), ((45, '_'), 56), ((45, 'a'), 56), ((45, 'b'), 56), ((45, 'c'), 56), ((45, 'd'), 56), ((45, 'e'), 56), ((45, 'f'), 56), ((45, 'g'), 44), ((45, 'h'), 56), ((45, 'i'), 56), ((45, 'j'), 56), ((45, 'k'), 56), ((45, 'l'), 56), ((45, 'm'), 56), ((45, 'n'), 56), ((45, 'o'), 56), ((45, 'p'), 56), ((45, 'q'), 56), ((45, 'r'), 56), ((45, 's'), 56), ((45, 't'), 56), ((45, 'u'), 56), ((45, 'v'), 56), ((45, 'w'), 56), ((45, 'x'), 56), ((45, 'y'), 56), ((45, 'z'), 56)
            , ((46, '0'), 56), ((46, '1'), 56), ((46, '2'), 56), ((46, '3'), 56), ((46, '4'), 56), ((46, '5'), 56), ((46, '6'), 56), ((46, '7'), 56), ((46, '8'), 56), ((46, '9'), 56), ((46, 'A'), 56), ((46, 'B'), 56), ((46, 'C'), 56), ((46, 'D'), 56), ((46, 'E'), 56), ((46, 'F'), 56), ((46, 'G'), 56), ((46, 'H'), 56), ((46, 'I'), 56), ((46, 'J'), 56), ((46, 'K'), 56), ((46, 'L'), 56), ((46, 'M'), 56), ((46, 'N'), 56), ((46, 'O'), 56), ((46, 'P'), 56), ((46, 'Q'), 56), ((46, 'R'), 56), ((46, 'S'), 56), ((46, 'T'), 56), ((46, 'U'), 56), ((46, 'V'), 56), ((46, 'W'), 56), ((46, 'X'), 56), ((46, 'Y'), 56), ((46, 'Z'), 56), ((46, '_'), 56), ((46, 'a'), 56), ((46, 'b'), 56), ((46, 'c'), 56), ((46, 'd'), 56), ((46, 'e'), 56), ((46, 'f'), 56), ((46, 'g'), 56), ((46, 'h'), 56), ((46, 'i'), 56), ((46, 'j'), 56), ((46, 'k'), 56), ((46, 'l'), 56), ((46, 'm'), 56), ((46, 'n'), 58), ((46, 'o'), 56), ((46, 'p'), 56), ((46, 'q'), 56), ((46, 'r'), 56), ((46, 's'), 56), ((46, 't'), 56), ((46, 'u'), 56), ((46, 'v'), 56), ((46, 'w'), 56), ((46, 'x'), 56), ((46, 'y'), 56), ((46, 'z'), 56)
            , ((47, '0'), 56), ((47, '1'), 56), ((47, '2'), 56), ((47, '3'), 56), ((47, '4'), 56), ((47, '5'), 56), ((47, '6'), 56), ((47, '7'), 56), ((47, '8'), 56), ((47, '9'), 56), ((47, 'A'), 56), ((47, 'B'), 56), ((47, 'C'), 56), ((47, 'D'), 56), ((47, 'E'), 56), ((47, 'F'), 56), ((47, 'G'), 56), ((47, 'H'), 56), ((47, 'I'), 56), ((47, 'J'), 56), ((47, 'K'), 56), ((47, 'L'), 56), ((47, 'M'), 56), ((47, 'N'), 56), ((47, 'O'), 56), ((47, 'P'), 56), ((47, 'Q'), 56), ((47, 'R'), 56), ((47, 'S'), 56), ((47, 'T'), 56), ((47, 'U'), 56), ((47, 'V'), 56), ((47, 'W'), 56), ((47, 'X'), 56), ((47, 'Y'), 56), ((47, 'Z'), 56), ((47, '_'), 56), ((47, 'a'), 56), ((47, 'b'), 56), ((47, 'c'), 56), ((47, 'd'), 56), ((47, 'e'), 56), ((47, 'f'), 56), ((47, 'g'), 56), ((47, 'h'), 56), ((47, 'i'), 46), ((47, 'j'), 56), ((47, 'k'), 56), ((47, 'l'), 56), ((47, 'm'), 56), ((47, 'n'), 56), ((47, 'o'), 56), ((47, 'p'), 56), ((47, 'q'), 56), ((47, 'r'), 56), ((47, 's'), 56), ((47, 't'), 56), ((47, 'u'), 56), ((47, 'v'), 56), ((47, 'w'), 56), ((47, 'x'), 56), ((47, 'y'), 56), ((47, 'z'), 56)
            , ((48, '0'), 56), ((48, '1'), 56), ((48, '2'), 56), ((48, '3'), 56), ((48, '4'), 56), ((48, '5'), 56), ((48, '6'), 56), ((48, '7'), 56), ((48, '8'), 56), ((48, '9'), 56), ((48, 'A'), 56), ((48, 'B'), 56), ((48, 'C'), 56), ((48, 'D'), 56), ((48, 'E'), 56), ((48, 'F'), 56), ((48, 'G'), 56), ((48, 'H'), 56), ((48, 'I'), 56), ((48, 'J'), 56), ((48, 'K'), 56), ((48, 'L'), 56), ((48, 'M'), 56), ((48, 'N'), 56), ((48, 'O'), 56), ((48, 'P'), 56), ((48, 'Q'), 56), ((48, 'R'), 56), ((48, 'S'), 56), ((48, 'T'), 56), ((48, 'U'), 56), ((48, 'V'), 56), ((48, 'W'), 56), ((48, 'X'), 56), ((48, 'Y'), 56), ((48, 'Z'), 56), ((48, '_'), 56), ((48, 'a'), 56), ((48, 'b'), 56), ((48, 'c'), 56), ((48, 'd'), 56), ((48, 'e'), 56), ((48, 'f'), 56), ((48, 'g'), 56), ((48, 'h'), 56), ((48, 'i'), 56), ((48, 'j'), 56), ((48, 'k'), 56), ((48, 'l'), 56), ((48, 'm'), 56), ((48, 'n'), 56), ((48, 'o'), 56), ((48, 'p'), 56), ((48, 'q'), 56), ((48, 'r'), 56), ((48, 's'), 56), ((48, 't'), 56), ((48, 'u'), 59), ((48, 'v'), 56), ((48, 'w'), 56), ((48, 'x'), 56), ((48, 'y'), 56), ((48, 'z'), 56)
            , ((49, '0'), 56), ((49, '1'), 56), ((49, '2'), 56), ((49, '3'), 56), ((49, '4'), 56), ((49, '5'), 56), ((49, '6'), 56), ((49, '7'), 56), ((49, '8'), 56), ((49, '9'), 56), ((49, 'A'), 56), ((49, 'B'), 56), ((49, 'C'), 56), ((49, 'D'), 56), ((49, 'E'), 56), ((49, 'F'), 56), ((49, 'G'), 56), ((49, 'H'), 56), ((49, 'I'), 56), ((49, 'J'), 56), ((49, 'K'), 56), ((49, 'L'), 56), ((49, 'M'), 56), ((49, 'N'), 56), ((49, 'O'), 56), ((49, 'P'), 56), ((49, 'Q'), 56), ((49, 'R'), 56), ((49, 'S'), 56), ((49, 'T'), 56), ((49, 'U'), 56), ((49, 'V'), 56), ((49, 'W'), 56), ((49, 'X'), 56), ((49, 'Y'), 56), ((49, 'Z'), 56), ((49, '_'), 56), ((49, 'a'), 56), ((49, 'b'), 56), ((49, 'c'), 56), ((49, 'd'), 56), ((49, 'e'), 56), ((49, 'f'), 56), ((49, 'g'), 56), ((49, 'h'), 56), ((49, 'i'), 56), ((49, 'j'), 56), ((49, 'k'), 56), ((49, 'l'), 56), ((49, 'm'), 56), ((49, 'n'), 56), ((49, 'o'), 56), ((49, 'p'), 60), ((49, 'q'), 56), ((49, 'r'), 56), ((49, 's'), 56), ((49, 't'), 56), ((49, 'u'), 56), ((49, 'v'), 56), ((49, 'w'), 56), ((49, 'x'), 56), ((49, 'y'), 56), ((49, 'z'), 56)
            , ((50, '0'), 56), ((50, '1'), 56), ((50, '2'), 56), ((50, '3'), 56), ((50, '4'), 56), ((50, '5'), 56), ((50, '6'), 56), ((50, '7'), 56), ((50, '8'), 56), ((50, '9'), 56), ((50, 'A'), 56), ((50, 'B'), 56), ((50, 'C'), 56), ((50, 'D'), 56), ((50, 'E'), 56), ((50, 'F'), 56), ((50, 'G'), 56), ((50, 'H'), 56), ((50, 'I'), 56), ((50, 'J'), 56), ((50, 'K'), 56), ((50, 'L'), 56), ((50, 'M'), 56), ((50, 'N'), 56), ((50, 'O'), 56), ((50, 'P'), 56), ((50, 'Q'), 56), ((50, 'R'), 56), ((50, 'S'), 56), ((50, 'T'), 56), ((50, 'U'), 56), ((50, 'V'), 56), ((50, 'W'), 56), ((50, 'X'), 56), ((50, 'Y'), 56), ((50, 'Z'), 56), ((50, '_'), 56), ((50, 'a'), 56), ((50, 'b'), 56), ((50, 'c'), 56), ((50, 'd'), 56), ((50, 'e'), 56), ((50, 'f'), 56), ((50, 'g'), 56), ((50, 'h'), 56), ((50, 'i'), 56), ((50, 'j'), 56), ((50, 'k'), 56), ((50, 'l'), 56), ((50, 'm'), 56), ((50, 'n'), 56), ((50, 'o'), 56), ((50, 'p'), 56), ((50, 'q'), 56), ((50, 'r'), 48), ((50, 's'), 56), ((50, 't'), 56), ((50, 'u'), 56), ((50, 'v'), 56), ((50, 'w'), 56), ((50, 'x'), 56), ((50, 'y'), 49), ((50, 'z'), 56)
            , ((51, '0'), 56), ((51, '1'), 56), ((51, '2'), 56), ((51, '3'), 56), ((51, '4'), 56), ((51, '5'), 56), ((51, '6'), 56), ((51, '7'), 56), ((51, '8'), 56), ((51, '9'), 56), ((51, 'A'), 56), ((51, 'B'), 56), ((51, 'C'), 56), ((51, 'D'), 56), ((51, 'E'), 56), ((51, 'F'), 56), ((51, 'G'), 56), ((51, 'H'), 56), ((51, 'I'), 56), ((51, 'J'), 56), ((51, 'K'), 56), ((51, 'L'), 56), ((51, 'M'), 56), ((51, 'N'), 56), ((51, 'O'), 56), ((51, 'P'), 56), ((51, 'Q'), 56), ((51, 'R'), 56), ((51, 'S'), 56), ((51, 'T'), 56), ((51, 'U'), 56), ((51, 'V'), 56), ((51, 'W'), 56), ((51, 'X'), 56), ((51, 'Y'), 56), ((51, 'Z'), 56), ((51, '_'), 56), ((51, 'a'), 56), ((51, 'b'), 56), ((51, 'c'), 56), ((51, 'd'), 56), ((51, 'e'), 56), ((51, 'f'), 56), ((51, 'g'), 56), ((51, 'h'), 56), ((51, 'i'), 56), ((51, 'j'), 56), ((51, 'k'), 56), ((51, 'l'), 56), ((51, 'm'), 56), ((51, 'n'), 56), ((51, 'o'), 56), ((51, 'p'), 56), ((51, 'q'), 56), ((51, 'r'), 56), ((51, 's'), 56), ((51, 't'), 56), ((51, 'u'), 61), ((51, 'v'), 56), ((51, 'w'), 56), ((51, 'x'), 56), ((51, 'y'), 56), ((51, 'z'), 56)
            , ((52, '0'), 56), ((52, '1'), 56), ((52, '2'), 56), ((52, '3'), 56), ((52, '4'), 56), ((52, '5'), 56), ((52, '6'), 56), ((52, '7'), 56), ((52, '8'), 56), ((52, '9'), 56), ((52, 'A'), 56), ((52, 'B'), 56), ((52, 'C'), 56), ((52, 'D'), 56), ((52, 'E'), 56), ((52, 'F'), 56), ((52, 'G'), 56), ((52, 'H'), 56), ((52, 'I'), 56), ((52, 'J'), 56), ((52, 'K'), 56), ((52, 'L'), 56), ((52, 'M'), 56), ((52, 'N'), 56), ((52, 'O'), 56), ((52, 'P'), 56), ((52, 'Q'), 56), ((52, 'R'), 56), ((52, 'S'), 56), ((52, 'T'), 56), ((52, 'U'), 56), ((52, 'V'), 56), ((52, 'W'), 56), ((52, 'X'), 56), ((52, 'Y'), 56), ((52, 'Z'), 56), ((52, '_'), 56), ((52, 'a'), 56), ((52, 'b'), 51), ((52, 'c'), 56), ((52, 'd'), 56), ((52, 'e'), 56), ((52, 'f'), 56), ((52, 'g'), 56), ((52, 'h'), 56), ((52, 'i'), 56), ((52, 'j'), 56), ((52, 'k'), 56), ((52, 'l'), 56), ((52, 'm'), 56), ((52, 'n'), 56), ((52, 'o'), 56), ((52, 'p'), 56), ((52, 'q'), 56), ((52, 'r'), 56), ((52, 's'), 56), ((52, 't'), 56), ((52, 'u'), 56), ((52, 'v'), 56), ((52, 'w'), 56), ((52, 'x'), 56), ((52, 'y'), 56), ((52, 'z'), 56)
            , ((53, '0'), 56), ((53, '1'), 56), ((53, '2'), 56), ((53, '3'), 56), ((53, '4'), 56), ((53, '5'), 56), ((53, '6'), 56), ((53, '7'), 56), ((53, '8'), 56), ((53, '9'), 56), ((53, 'A'), 56), ((53, 'B'), 56), ((53, 'C'), 56), ((53, 'D'), 56), ((53, 'E'), 56), ((53, 'F'), 56), ((53, 'G'), 56), ((53, 'H'), 56), ((53, 'I'), 56), ((53, 'J'), 56), ((53, 'K'), 56), ((53, 'L'), 56), ((53, 'M'), 56), ((53, 'N'), 56), ((53, 'O'), 56), ((53, 'P'), 56), ((53, 'Q'), 56), ((53, 'R'), 56), ((53, 'S'), 56), ((53, 'T'), 56), ((53, 'U'), 56), ((53, 'V'), 56), ((53, 'W'), 56), ((53, 'X'), 56), ((53, 'Y'), 56), ((53, 'Z'), 56), ((53, '_'), 56), ((53, 'a'), 56), ((53, 'b'), 56), ((53, 'c'), 56), ((53, 'd'), 56), ((53, 'e'), 52), ((53, 'f'), 56), ((53, 'g'), 56), ((53, 'h'), 56), ((53, 'i'), 56), ((53, 'j'), 56), ((53, 'k'), 56), ((53, 'l'), 56), ((53, 'm'), 56), ((53, 'n'), 56), ((53, 'o'), 56), ((53, 'p'), 56), ((53, 'q'), 56), ((53, 'r'), 56), ((53, 's'), 56), ((53, 't'), 56), ((53, 'u'), 56), ((53, 'v'), 56), ((53, 'w'), 56), ((53, 'x'), 56), ((53, 'y'), 56), ((53, 'z'), 56)
            , ((54, '0'), 56), ((54, '1'), 56), ((54, '2'), 56), ((54, '3'), 56), ((54, '4'), 56), ((54, '5'), 56), ((54, '6'), 56), ((54, '7'), 56), ((54, '8'), 56), ((54, '9'), 56), ((54, 'A'), 56), ((54, 'B'), 56), ((54, 'C'), 56), ((54, 'D'), 56), ((54, 'E'), 56), ((54, 'F'), 56), ((54, 'G'), 56), ((54, 'H'), 56), ((54, 'I'), 56), ((54, 'J'), 56), ((54, 'K'), 56), ((54, 'L'), 56), ((54, 'M'), 56), ((54, 'N'), 56), ((54, 'O'), 56), ((54, 'P'), 56), ((54, 'Q'), 56), ((54, 'R'), 56), ((54, 'S'), 56), ((54, 'T'), 56), ((54, 'U'), 56), ((54, 'V'), 56), ((54, 'W'), 56), ((54, 'X'), 56), ((54, 'Y'), 56), ((54, 'Z'), 56), ((54, '_'), 56), ((54, 'a'), 56), ((54, 'b'), 56), ((54, 'c'), 56), ((54, 'd'), 56), ((54, 'e'), 56), ((54, 'f'), 56), ((54, 'g'), 56), ((54, 'h'), 56), ((54, 'i'), 62), ((54, 'j'), 56), ((54, 'k'), 56), ((54, 'l'), 56), ((54, 'm'), 56), ((54, 'n'), 56), ((54, 'o'), 56), ((54, 'p'), 56), ((54, 'q'), 56), ((54, 'r'), 56), ((54, 's'), 56), ((54, 't'), 56), ((54, 'u'), 56), ((54, 'v'), 56), ((54, 'w'), 56), ((54, 'x'), 56), ((54, 'y'), 56), ((54, 'z'), 56)
            , ((55, '0'), 56), ((55, '1'), 56), ((55, '2'), 56), ((55, '3'), 56), ((55, '4'), 56), ((55, '5'), 56), ((55, '6'), 56), ((55, '7'), 56), ((55, '8'), 56), ((55, '9'), 56), ((55, 'A'), 56), ((55, 'B'), 56), ((55, 'C'), 56), ((55, 'D'), 56), ((55, 'E'), 56), ((55, 'F'), 56), ((55, 'G'), 56), ((55, 'H'), 56), ((55, 'I'), 56), ((55, 'J'), 56), ((55, 'K'), 56), ((55, 'L'), 56), ((55, 'M'), 56), ((55, 'N'), 56), ((55, 'O'), 56), ((55, 'P'), 56), ((55, 'Q'), 56), ((55, 'R'), 56), ((55, 'S'), 56), ((55, 'T'), 56), ((55, 'U'), 56), ((55, 'V'), 56), ((55, 'W'), 56), ((55, 'X'), 56), ((55, 'Y'), 56), ((55, 'Z'), 56), ((55, '_'), 56), ((55, 'a'), 54), ((55, 'b'), 56), ((55, 'c'), 56), ((55, 'd'), 56), ((55, 'e'), 56), ((55, 'f'), 56), ((55, 'g'), 56), ((55, 'h'), 56), ((55, 'i'), 56), ((55, 'j'), 56), ((55, 'k'), 56), ((55, 'l'), 56), ((55, 'm'), 56), ((55, 'n'), 56), ((55, 'o'), 56), ((55, 'p'), 56), ((55, 'q'), 56), ((55, 'r'), 56), ((55, 's'), 56), ((55, 't'), 56), ((55, 'u'), 56), ((55, 'v'), 56), ((55, 'w'), 56), ((55, 'x'), 56), ((55, 'y'), 56), ((55, 'z'), 56)
            , ((56, '0'), 56), ((56, '1'), 56), ((56, '2'), 56), ((56, '3'), 56), ((56, '4'), 56), ((56, '5'), 56), ((56, '6'), 56), ((56, '7'), 56), ((56, '8'), 56), ((56, '9'), 56), ((56, 'A'), 56), ((56, 'B'), 56), ((56, 'C'), 56), ((56, 'D'), 56), ((56, 'E'), 56), ((56, 'F'), 56), ((56, 'G'), 56), ((56, 'H'), 56), ((56, 'I'), 56), ((56, 'J'), 56), ((56, 'K'), 56), ((56, 'L'), 56), ((56, 'M'), 56), ((56, 'N'), 56), ((56, 'O'), 56), ((56, 'P'), 56), ((56, 'Q'), 56), ((56, 'R'), 56), ((56, 'S'), 56), ((56, 'T'), 56), ((56, 'U'), 56), ((56, 'V'), 56), ((56, 'W'), 56), ((56, 'X'), 56), ((56, 'Y'), 56), ((56, 'Z'), 56), ((56, '_'), 56), ((56, 'a'), 56), ((56, 'b'), 56), ((56, 'c'), 56), ((56, 'd'), 56), ((56, 'e'), 56), ((56, 'f'), 56), ((56, 'g'), 56), ((56, 'h'), 56), ((56, 'i'), 56), ((56, 'j'), 56), ((56, 'k'), 56), ((56, 'l'), 56), ((56, 'm'), 56), ((56, 'n'), 56), ((56, 'o'), 56), ((56, 'p'), 56), ((56, 'q'), 56), ((56, 'r'), 56), ((56, 's'), 56), ((56, 't'), 56), ((56, 'u'), 56), ((56, 'v'), 56), ((56, 'w'), 56), ((56, 'x'), 56), ((56, 'y'), 56), ((56, 'z'), 56)
            , ((57, '0'), 56), ((57, '1'), 56), ((57, '2'), 56), ((57, '3'), 56), ((57, '4'), 56), ((57, '5'), 56), ((57, '6'), 56), ((57, '7'), 56), ((57, '8'), 56), ((57, '9'), 56), ((57, 'A'), 56), ((57, 'B'), 56), ((57, 'C'), 56), ((57, 'D'), 56), ((57, 'E'), 56), ((57, 'F'), 56), ((57, 'G'), 56), ((57, 'H'), 56), ((57, 'I'), 56), ((57, 'J'), 56), ((57, 'K'), 56), ((57, 'L'), 56), ((57, 'M'), 56), ((57, 'N'), 56), ((57, 'O'), 56), ((57, 'P'), 56), ((57, 'Q'), 56), ((57, 'R'), 56), ((57, 'S'), 56), ((57, 'T'), 56), ((57, 'U'), 56), ((57, 'V'), 56), ((57, 'W'), 56), ((57, 'X'), 56), ((57, 'Y'), 56), ((57, 'Z'), 56), ((57, '_'), 56), ((57, 'a'), 32), ((57, 'b'), 56), ((57, 'c'), 56), ((57, 'd'), 56), ((57, 'e'), 56), ((57, 'f'), 56), ((57, 'g'), 56), ((57, 'h'), 56), ((57, 'i'), 56), ((57, 'j'), 56), ((57, 'k'), 56), ((57, 'l'), 56), ((57, 'm'), 56), ((57, 'n'), 56), ((57, 'o'), 56), ((57, 'p'), 56), ((57, 'q'), 56), ((57, 'r'), 56), ((57, 's'), 56), ((57, 't'), 56), ((57, 'u'), 56), ((57, 'v'), 56), ((57, 'w'), 56), ((57, 'x'), 56), ((57, 'y'), 56), ((57, 'z'), 56)
            , ((58, '0'), 56), ((58, '1'), 56), ((58, '2'), 56), ((58, '3'), 56), ((58, '4'), 56), ((58, '5'), 56), ((58, '6'), 56), ((58, '7'), 56), ((58, '8'), 56), ((58, '9'), 56), ((58, 'A'), 56), ((58, 'B'), 56), ((58, 'C'), 56), ((58, 'D'), 56), ((58, 'E'), 56), ((58, 'F'), 56), ((58, 'G'), 56), ((58, 'H'), 56), ((58, 'I'), 56), ((58, 'J'), 56), ((58, 'K'), 56), ((58, 'L'), 56), ((58, 'M'), 56), ((58, 'N'), 56), ((58, 'O'), 56), ((58, 'P'), 56), ((58, 'Q'), 56), ((58, 'R'), 56), ((58, 'S'), 56), ((58, 'T'), 56), ((58, 'U'), 56), ((58, 'V'), 56), ((58, 'W'), 56), ((58, 'X'), 56), ((58, 'Y'), 56), ((58, 'Z'), 56), ((58, '_'), 56), ((58, 'a'), 56), ((58, 'b'), 56), ((58, 'c'), 56), ((58, 'd'), 41), ((58, 'e'), 56), ((58, 'f'), 56), ((58, 'g'), 56), ((58, 'h'), 56), ((58, 'i'), 56), ((58, 'j'), 56), ((58, 'k'), 56), ((58, 'l'), 56), ((58, 'm'), 56), ((58, 'n'), 56), ((58, 'o'), 56), ((58, 'p'), 56), ((58, 'q'), 56), ((58, 'r'), 56), ((58, 's'), 56), ((58, 't'), 56), ((58, 'u'), 56), ((58, 'v'), 56), ((58, 'w'), 56), ((58, 'x'), 56), ((58, 'y'), 56), ((58, 'z'), 56)
            , ((59, '0'), 56), ((59, '1'), 56), ((59, '2'), 56), ((59, '3'), 56), ((59, '4'), 56), ((59, '5'), 56), ((59, '6'), 56), ((59, '7'), 56), ((59, '8'), 56), ((59, '9'), 56), ((59, 'A'), 56), ((59, 'B'), 56), ((59, 'C'), 56), ((59, 'D'), 56), ((59, 'E'), 56), ((59, 'F'), 56), ((59, 'G'), 56), ((59, 'H'), 56), ((59, 'I'), 56), ((59, 'J'), 56), ((59, 'K'), 56), ((59, 'L'), 56), ((59, 'M'), 56), ((59, 'N'), 56), ((59, 'O'), 56), ((59, 'P'), 56), ((59, 'Q'), 56), ((59, 'R'), 56), ((59, 'S'), 56), ((59, 'T'), 56), ((59, 'U'), 56), ((59, 'V'), 56), ((59, 'W'), 56), ((59, 'X'), 56), ((59, 'Y'), 56), ((59, 'Z'), 56), ((59, '_'), 56), ((59, 'a'), 56), ((59, 'b'), 56), ((59, 'c'), 56), ((59, 'd'), 56), ((59, 'e'), 35), ((59, 'f'), 56), ((59, 'g'), 56), ((59, 'h'), 56), ((59, 'i'), 56), ((59, 'j'), 56), ((59, 'k'), 56), ((59, 'l'), 56), ((59, 'm'), 56), ((59, 'n'), 56), ((59, 'o'), 56), ((59, 'p'), 56), ((59, 'q'), 56), ((59, 'r'), 56), ((59, 's'), 56), ((59, 't'), 56), ((59, 'u'), 56), ((59, 'v'), 56), ((59, 'w'), 56), ((59, 'x'), 56), ((59, 'y'), 56), ((59, 'z'), 56)
            , ((60, '0'), 56), ((60, '1'), 56), ((60, '2'), 56), ((60, '3'), 56), ((60, '4'), 56), ((60, '5'), 56), ((60, '6'), 56), ((60, '7'), 56), ((60, '8'), 56), ((60, '9'), 56), ((60, 'A'), 56), ((60, 'B'), 56), ((60, 'C'), 56), ((60, 'D'), 56), ((60, 'E'), 56), ((60, 'F'), 56), ((60, 'G'), 56), ((60, 'H'), 56), ((60, 'I'), 56), ((60, 'J'), 56), ((60, 'K'), 56), ((60, 'L'), 56), ((60, 'M'), 56), ((60, 'N'), 56), ((60, 'O'), 56), ((60, 'P'), 56), ((60, 'Q'), 56), ((60, 'R'), 56), ((60, 'S'), 56), ((60, 'T'), 56), ((60, 'U'), 56), ((60, 'V'), 56), ((60, 'W'), 56), ((60, 'X'), 56), ((60, 'Y'), 56), ((60, 'Z'), 56), ((60, '_'), 56), ((60, 'a'), 56), ((60, 'b'), 56), ((60, 'c'), 56), ((60, 'd'), 56), ((60, 'e'), 42), ((60, 'f'), 56), ((60, 'g'), 56), ((60, 'h'), 56), ((60, 'i'), 56), ((60, 'j'), 56), ((60, 'k'), 56), ((60, 'l'), 56), ((60, 'm'), 56), ((60, 'n'), 56), ((60, 'o'), 56), ((60, 'p'), 56), ((60, 'q'), 56), ((60, 'r'), 56), ((60, 's'), 56), ((60, 't'), 56), ((60, 'u'), 56), ((60, 'v'), 56), ((60, 'w'), 56), ((60, 'x'), 56), ((60, 'y'), 56), ((60, 'z'), 56)
            , ((61, '0'), 56), ((61, '1'), 56), ((61, '2'), 56), ((61, '3'), 56), ((61, '4'), 56), ((61, '5'), 56), ((61, '6'), 56), ((61, '7'), 56), ((61, '8'), 56), ((61, '9'), 56), ((61, 'A'), 56), ((61, 'B'), 56), ((61, 'C'), 56), ((61, 'D'), 56), ((61, 'E'), 56), ((61, 'F'), 56), ((61, 'G'), 56), ((61, 'H'), 56), ((61, 'I'), 56), ((61, 'J'), 56), ((61, 'K'), 56), ((61, 'L'), 56), ((61, 'M'), 56), ((61, 'N'), 56), ((61, 'O'), 56), ((61, 'P'), 56), ((61, 'Q'), 56), ((61, 'R'), 56), ((61, 'S'), 56), ((61, 'T'), 56), ((61, 'U'), 56), ((61, 'V'), 56), ((61, 'W'), 56), ((61, 'X'), 56), ((61, 'Y'), 56), ((61, 'Z'), 56), ((61, '_'), 56), ((61, 'a'), 56), ((61, 'b'), 56), ((61, 'c'), 56), ((61, 'd'), 56), ((61, 'e'), 56), ((61, 'f'), 56), ((61, 'g'), 38), ((61, 'h'), 56), ((61, 'i'), 56), ((61, 'j'), 56), ((61, 'k'), 56), ((61, 'l'), 56), ((61, 'm'), 56), ((61, 'n'), 56), ((61, 'o'), 56), ((61, 'p'), 56), ((61, 'q'), 56), ((61, 'r'), 56), ((61, 's'), 56), ((61, 't'), 56), ((61, 'u'), 56), ((61, 'v'), 56), ((61, 'w'), 56), ((61, 'x'), 56), ((61, 'y'), 56), ((61, 'z'), 56)
            , ((62, '0'), 56), ((62, '1'), 56), ((62, '2'), 56), ((62, '3'), 56), ((62, '4'), 56), ((62, '5'), 56), ((62, '6'), 56), ((62, '7'), 56), ((62, '8'), 56), ((62, '9'), 56), ((62, 'A'), 56), ((62, 'B'), 56), ((62, 'C'), 56), ((62, 'D'), 56), ((62, 'E'), 56), ((62, 'F'), 56), ((62, 'G'), 56), ((62, 'H'), 56), ((62, 'I'), 56), ((62, 'J'), 56), ((62, 'K'), 56), ((62, 'L'), 56), ((62, 'M'), 56), ((62, 'N'), 56), ((62, 'O'), 56), ((62, 'P'), 56), ((62, 'Q'), 56), ((62, 'R'), 56), ((62, 'S'), 56), ((62, 'T'), 56), ((62, 'U'), 56), ((62, 'V'), 56), ((62, 'W'), 56), ((62, 'X'), 56), ((62, 'Y'), 56), ((62, 'Z'), 56), ((62, '_'), 56), ((62, 'a'), 56), ((62, 'b'), 56), ((62, 'c'), 56), ((62, 'd'), 56), ((62, 'e'), 56), ((62, 'f'), 56), ((62, 'g'), 56), ((62, 'h'), 56), ((62, 'i'), 56), ((62, 'j'), 56), ((62, 'k'), 56), ((62, 'l'), 36), ((62, 'm'), 56), ((62, 'n'), 56), ((62, 'o'), 56), ((62, 'p'), 56), ((62, 'q'), 56), ((62, 'r'), 56), ((62, 's'), 56), ((62, 't'), 56), ((62, 'u'), 56), ((62, 'v'), 56), ((62, 'w'), 56), ((62, 'x'), 56), ((62, 'y'), 56), ((62, 'z'), 56)
            , ((63, '0'), 56), ((63, '1'), 56), ((63, '2'), 56), ((63, '3'), 56), ((63, '4'), 56), ((63, '5'), 56), ((63, '6'), 56), ((63, '7'), 56), ((63, '8'), 56), ((63, '9'), 56), ((63, 'A'), 56), ((63, 'B'), 56), ((63, 'C'), 56), ((63, 'D'), 56), ((63, 'E'), 56), ((63, 'F'), 56), ((63, 'G'), 56), ((63, 'H'), 56), ((63, 'I'), 56), ((63, 'J'), 56), ((63, 'K'), 56), ((63, 'L'), 56), ((63, 'M'), 56), ((63, 'N'), 56), ((63, 'O'), 56), ((63, 'P'), 56), ((63, 'Q'), 56), ((63, 'R'), 56), ((63, 'S'), 56), ((63, 'T'), 56), ((63, 'U'), 56), ((63, 'V'), 56), ((63, 'W'), 56), ((63, 'X'), 56), ((63, 'Y'), 56), ((63, 'Z'), 56), ((63, '_'), 56), ((63, 'a'), 56), ((63, 'b'), 56), ((63, 'c'), 56), ((63, 'd'), 56), ((63, 'e'), 56), ((63, 'f'), 56), ((63, 'g'), 56), ((63, 'h'), 56), ((63, 'i'), 56), ((63, 'j'), 56), ((63, 'k'), 56), ((63, 'l'), 56), ((63, 'm'), 56), ((63, 'n'), 56), ((63, 'o'), 56), ((63, 'p'), 56), ((63, 'q'), 56), ((63, 'r'), 56), ((63, 's'), 37), ((63, 't'), 56), ((63, 'u'), 56), ((63, 'v'), 56), ((63, 'w'), 56), ((63, 'x'), 56), ((63, 'y'), 56), ((63, 'z'), 56)
            , ((65, '0'), 65), ((65, '1'), 65), ((65, '2'), 65), ((65, '3'), 65), ((65, '4'), 65), ((65, '5'), 65), ((65, '6'), 65), ((65, '7'), 65), ((65, '8'), 65), ((65, '9'), 65), ((65, 'A'), 65), ((65, 'B'), 65), ((65, 'C'), 65), ((65, 'D'), 65), ((65, 'E'), 65), ((65, 'F'), 65), ((65, 'G'), 65), ((65, 'H'), 65), ((65, 'I'), 65), ((65, 'J'), 65), ((65, 'K'), 65), ((65, 'L'), 65), ((65, 'M'), 65), ((65, 'N'), 65), ((65, 'O'), 65), ((65, 'P'), 65), ((65, 'Q'), 65), ((65, 'R'), 65), ((65, 'S'), 65), ((65, 'T'), 65), ((65, 'U'), 65), ((65, 'V'), 65), ((65, 'W'), 65), ((65, 'X'), 65), ((65, 'Y'), 65), ((65, 'Z'), 65), ((65, '_'), 65), ((65, 'a'), 65), ((65, 'b'), 65), ((65, 'c'), 65), ((65, 'd'), 65), ((65, 'e'), 65), ((65, 'f'), 65), ((65, 'g'), 65), ((65, 'h'), 65), ((65, 'i'), 65), ((65, 'j'), 65), ((65, 'k'), 65), ((65, 'l'), 65), ((65, 'm'), 65), ((65, 'n'), 65), ((65, 'o'), 65), ((65, 'p'), 65), ((65, 'q'), 65), ((65, 'r'), 65), ((65, 's'), 65), ((65, 't'), 65), ((65, 'u'), 65), ((65, 'v'), 65), ((65, 'w'), 65), ((65, 'x'), 65), ((65, 'y'), 65), ((65, 'z'), 65)
            , ((66, '0'), 66), ((66, '1'), 66), ((66, '2'), 66), ((66, '3'), 66), ((66, '4'), 66), ((66, '5'), 66), ((66, '6'), 66), ((66, '7'), 66), ((66, '8'), 66), ((66, '9'), 66)
            , ((69, '\n'), 69), ((69, ' '), 69)
            , ((70, ' '), 70), ((70, '!'), 70), ((70, '"'), 70), ((70, '#'), 70), ((70, '$'), 70), ((70, '%'), 70), ((70, '&'), 70), ((70, '\''), 70), ((70, '('), 70), ((70, ')'), 70), ((70, '*'), 70), ((70, '+'), 70), ((70, ','), 70), ((70, '-'), 70), ((70, '.'), 70), ((70, '/'), 70), ((70, '0'), 70), ((70, '1'), 70), ((70, '2'), 70), ((70, '3'), 70), ((70, '4'), 70), ((70, '5'), 70), ((70, '6'), 70), ((70, '7'), 70), ((70, '8'), 70), ((70, '9'), 70), ((70, ':'), 70), ((70, ';'), 70), ((70, '<'), 70), ((70, '='), 70), ((70, '>'), 70), ((70, '?'), 70), ((70, '@'), 70), ((70, 'A'), 70), ((70, 'B'), 70), ((70, 'C'), 70), ((70, 'D'), 70), ((70, 'E'), 70), ((70, 'F'), 70), ((70, 'G'), 70), ((70, 'H'), 70), ((70, 'I'), 70), ((70, 'J'), 70), ((70, 'K'), 70), ((70, 'L'), 70), ((70, 'M'), 70), ((70, 'N'), 70), ((70, 'O'), 70), ((70, 'P'), 70), ((70, 'Q'), 70), ((70, 'R'), 70), ((70, 'S'), 70), ((70, 'T'), 70), ((70, 'U'), 70), ((70, 'V'), 70), ((70, 'W'), 70), ((70, 'X'), 70), ((70, 'Y'), 70), ((70, 'Z'), 70), ((70, '['), 70), ((70, '\\'), 70), ((70, ']'), 70), ((70, '^'), 70), ((70, '_'), 70), ((70, '`'), 70), ((70, 'a'), 70), ((70, 'b'), 70), ((70, 'c'), 70), ((70, 'd'), 70), ((70, 'e'), 70), ((70, 'f'), 70), ((70, 'g'), 70), ((70, 'h'), 70), ((70, 'i'), 70), ((70, 'j'), 70), ((70, 'k'), 70), ((70, 'l'), 70), ((70, 'm'), 70), ((70, 'n'), 70), ((70, 'o'), 70), ((70, 'p'), 70), ((70, 'q'), 70), ((70, 'r'), 70), ((70, 's'), 70), ((70, 't'), 70), ((70, 'u'), 70), ((70, 'v'), 70), ((70, 'w'), 70), ((70, 'x'), 70), ((70, 'y'), 70), ((70, 'z'), 70), ((70, '{'), 70), ((70, '|'), 70), ((70, '}'), 70), ((70, '~'), 70)
            ]
        , getMarkedQsOfDFA = XMap.fromAscList []
        , getPseudoFinalsOfDFA = XSet.fromAscList []
        }
    runDFA :: DFA -> [((Int, Int), Char)] -> Either (Int, Int) ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
    runDFA (DFA q0 qfs deltas markeds pseudo_finals) = if XSet.null pseudo_finals then Right . XIdentity.runIdentity . runFast else runSlow where
        loop1 :: Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT (Maybe Int, [((Int, Int), Char)]) XIdentity.Identity [((Int, Int), Char)]
        loop1 q buffer [] = return buffer
        loop1 q buffer (ch : str) = do
            (latest, accepted) <- XState.get
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case XMap.lookup p qfs of
                    Nothing -> loop1 p (buffer ++ [ch]) str
                    latest' -> do
                        XState.put (latest', accepted ++ buffer ++ [ch])
                        loop1 p [] str
        loop2 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop2 qs q [] buffer = return buffer
        loop2 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop2 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        loop2 qs p str []
        loop3 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop3 qs q [] buffer = return buffer
        loop3 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop3 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        return str
        runFast :: [((Int, Int), Char)] -> XIdentity.Identity ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        runFast input = do
            (rest, (latest, accepted)) <- XState.runStateT (loop1 q0 [] input) (Nothing, [])
            case latest >>= flip XMap.lookup markeds of
                Nothing -> return ((latest, accepted), rest)
                Just (True, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop2 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
                Just (False, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop3 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
        runSlow :: [((Int, Int), Char)] -> Either (Int, Int) ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        runSlow = undefined
    addLoc :: Int -> Int -> String -> [((Int, Int), Char)]
    addLoc _ _ [] = []
    addLoc row col (ch : chs) = if ch == '\n' then ((row, col), ch) : addLoc (row + 1) 1 chs else ((row, col), ch) : addLoc row (col + 1) chs
    runHolLexer_this :: [((Int, Int), Char)] -> Either (Int, Int) [Token]
    runHolLexer_this [] = return []
    runHolLexer_this str0 = do
        let return_one my_token = return [my_token]
        dfa_output <- runDFA theDFA str0
        (str1, piece) <- case dfa_output of
            ((_, []), _) -> Left (fst (head str0))
            ((Just label, accepted), rest) -> return (rest, ((label, map snd accepted), (fst (head accepted), fst (head (reverse accepted)))))
            _ -> Left (fst (head str0))
        tokens1 <- case piece of
            ((1, this), ((row1, col1), (row2, col2))) -> return_one (T_dot (SLoc (row1, col1) (row2, col2)))
            ((2, this), ((row1, col1), (row2, col2))) -> return_one (T_arrow (SLoc (row1, col1) (row2, col2)))
            ((3, this), ((row1, col1), (row2, col2))) -> return_one (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((4, this), ((row1, col1), (row2, col2))) -> return_one (T_lparen (SLoc (row1, col1) (row2, col2)))
            ((5, this), ((row1, col1), (row2, col2))) -> return_one (T_rparen (SLoc (row1, col1) (row2, col2)))
            ((6, this), ((row1, col1), (row2, col2))) -> return_one (T_lbracket (SLoc (row1, col1) (row2, col2)))
            ((7, this), ((row1, col1), (row2, col2))) -> return_one (T_rbracket (SLoc (row1, col1) (row2, col2)))
            ((8, this), ((row1, col1), (row2, col2))) -> return_one (T_quest (SLoc (row1, col1) (row2, col2)))
            ((9, this), ((row1, col1), (row2, col2))) -> return_one (T_comma (SLoc (row1, col1) (row2, col2)))
            ((10, this), ((row1, col1), (row2, col2))) -> return_one (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((11, this), ((row1, col1), (row2, col2))) -> return_one (T_if (SLoc (row1, col1) (row2, col2)))
            ((12, this), ((row1, col1), (row2, col2))) -> return_one (T_succ (SLoc (row1, col1) (row2, col2)))
            ((13, this), ((row1, col1), (row2, col2))) -> return_one (T_eq (SLoc (row1, col1) (row2, col2)))
            ((14, this), ((row1, col1), (row2, col2))) -> return_one (T_le (SLoc (row1, col1) (row2, col2)))
            ((15, this), ((row1, col1), (row2, col2))) -> return_one (T_lt (SLoc (row1, col1) (row2, col2)))
            ((16, this), ((row1, col1), (row2, col2))) -> return_one (T_ge (SLoc (row1, col1) (row2, col2)))
            ((17, this), ((row1, col1), (row2, col2))) -> return_one (T_gt (SLoc (row1, col1) (row2, col2)))
            ((18, this), ((row1, col1), (row2, col2))) -> return_one (T_plus (SLoc (row1, col1) (row2, col2)))
            ((19, this), ((row1, col1), (row2, col2))) -> return_one (T_minus (SLoc (row1, col1) (row2, col2)))
            ((20, this), ((row1, col1), (row2, col2))) -> return_one (T_star (SLoc (row1, col1) (row2, col2)))
            ((21, this), ((row1, col1), (row2, col2))) -> return_one (T_slash (SLoc (row1, col1) (row2, col2)))
            ((22, this), ((row1, col1), (row2, col2))) -> return_one (T_pi (SLoc (row1, col1) (row2, col2)))
            ((23, this), ((row1, col1), (row2, col2))) -> return_one (T_sigma (SLoc (row1, col1) (row2, col2)))
            ((24, this), ((row1, col1), (row2, col2))) -> return_one (T_semicolon (SLoc (row1, col1) (row2, col2)))
            ((25, this), ((row1, col1), (row2, col2))) -> return_one (T_cut (SLoc (row1, col1) (row2, col2)))
            ((26, this), ((row1, col1), (row2, col2))) -> return_one (T_true (SLoc (row1, col1) (row2, col2)))
            ((27, this), ((row1, col1), (row2, col2))) -> return_one (T_fail (SLoc (row1, col1) (row2, col2)))
            ((28, this), ((row1, col1), (row2, col2))) -> return_one (T_is (SLoc (row1, col1) (row2, col2)))
            ((29, this), ((row1, col1), (row2, col2))) -> return_one (T_debug (SLoc (row1, col1) (row2, col2)))
            ((30, this), ((row1, col1), (row2, col2))) -> return_one (T_bslash (SLoc (row1, col1) (row2, col2)))
            ((31, this), ((row1, col1), (row2, col2))) -> return_one (T_cons (SLoc (row1, col1) (row2, col2)))
            ((32, this), ((row1, col1), (row2, col2))) -> return_one (T_kind (SLoc (row1, col1) (row2, col2)))
            ((33, this), ((row1, col1), (row2, col2))) -> return_one (T_type (SLoc (row1, col1) (row2, col2)))
            ((34, this), ((row1, col1), (row2, col2))) -> return_one (T_smallid (SLoc (row1, col1) (row2, col2)) this)
            ((35, this), ((row1, col1), (row2, col2))) -> return_one (T_largeid (SLoc (row1, col1) (row2, col2)) this)
            ((36, this), ((row1, col1), (row2, col2))) -> return_one (T_nat_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((37, this), ((row1, col1), (row2, col2))) -> return_one (T_str_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((38, this), ((row1, col1), (row2, col2))) -> return_one (T_chr_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((39, this), ((row1, col1), (row2, col2))) -> return []
            ((40, this), ((row1, col1), (row2, col2))) -> return []
            ((41, this), ((row1, col1), (row2, col2))) -> return []
        tokens2 <- runHolLexer_this str1
        return (tokens1 ++ tokens2)
