\hshead {
    module BlockArgument where

    data Tok
        = Name String
        | LParen
        | RParen
        | Dot
        | Lambda
        deriving (Eq, Ord, Show)

    data Term
        = Lam String Term
        | App Term Term
        | Var String
        deriving (Eq, Ord, Show)
}

\target {
    token-type: "Tok"
    parser-name: "hello"
    result-type: "Term"
    start: $Term0
    terminals:
        "Name s": $name 0 none
        "LParen": $lprn 0 none
        "RParen": $rprn 0 none
        "Dot": $dot 0 none
        "Lambda": $lambda 0 none
}

\define $Term0 : "Term" {
    10 [$lambda, $name, $dot, $Term0]:
        Lam $2.s $4
    10 [$Term1]:
        $1
}

\define $Term1 : "Term" {
    10 [$Term1, $Term2]:
        App $1 $2
    10 [$Term2]:
        $1
    10 [$Term1, $lambda, $name, $dot, $Term0]:
        App $1 (Lam $3.s $5)
}

\define $Term2 : "Term" {
    10 [$name]:
        $1.s
    10 [$lprn, $Term0, $rprn]:
        $2
}

\hstail {

}
