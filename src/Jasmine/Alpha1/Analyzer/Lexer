\hshead {
    module Jasmine.Alpha1.Analyzer.Lexer where
    
}

\target {
    token-type: "Token"
    lexer-name: "runJasmineLexer"
}

\define $small_letter = 'a'-'z'
\define $big_letter = 'A'-'Z'
\define $digit = '0'-'9'
\define $Char = [. \ '\n' \ '\\' \ '\"'] + "\\n" + "\\\\" + "\\\"" + "\\\'" + "\\t"
\define $SmallId = [$small_letter] [$small_letter $digit '_' $big_letter]*
\define $LargeId = [$big_letter] [$small_letter $digit '_' $big_letter]* + "_"

\xmatch $SmallId / "_{" + "":
    StrLit this

\xmatch "_{":
    StrLit this

\xmatch "}":
    StrLit this

\xmatch [' ' '\n']+: skip

\hstail {

    data Token
        = StrLit String
        deriving (Show)

}
