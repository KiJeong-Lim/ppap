module Aladdin.Front.Analyzer.Lexer where

import Aladdin.Front.Analyzer.Grammar
import Aladdin.Front.Header
import qualified Control.Monad.Trans.State.Strict as XState
import qualified Data.Functor.Identity as XIdentity
import qualified Data.Map.Strict as XMap
import qualified Data.Set as XSet

-- the following codes are generated by LGS.

data DFA
    = DFA
        { getInitialQOfDFA :: Int
        , getFinalQsOfDFA :: XMap.Map Int Int
        , getTransitionsOfDFA :: XMap.Map (Int, Char) Int
        , getMarkedQsOfDFA :: XMap.Map Int (Bool, XSet.Set Int)
        , getPseudoFinalsOfDFA :: XSet.Set Int
        }
    deriving ()

runAladdinLexer :: String -> Either (Int, Int) [Token]
runAladdinLexer = runAladdinLexer_this . addLoc 1 1 where
    theDFA :: DFA
    theDFA = DFA
        { getInitialQOfDFA = 11
        , getFinalQsOfDFA = XMap.fromAscList [(12, 1), (13, 2), (14, 3), (15, 4), (16, 5), (17, 6), (18, 7), (19, 8), (20, 9), (21, 11), (22, 12), (23, 13), (24, 14), (25, 15), (26, 16), (27, 17), (28, 18), (29, 19), (30, 20), (31, 21), (32, 22), (33, 23), (34, 24), (35, 25), (36, 25), (37, 25), (38, 25), (39, 25), (40, 25), (41, 25), (42, 25), (43, 25), (44, 25), (45, 25), (46, 25), (47, 25), (48, 25), (49, 25), (50, 25), (51, 25), (52, 25), (53, 25), (54, 25), (55, 26), (56, 26), (57, 27), (58, 28), (59, 29), (60, 30), (61, 31), (62, 32)]
        , getTransitionsOfDFA = XMap.fromAscList 
            [ ((1, '\n'), 1), ((1, ' '), 1), ((1, '!'), 1), ((1, '"'), 1), ((1, '#'), 1), ((1, '$'), 1), ((1, '%'), 1), ((1, '&'), 1), ((1, '\''), 1), ((1, '('), 1), ((1, ')'), 1), ((1, '*'), 7), ((1, '+'), 1), ((1, ','), 1), ((1, '-'), 1), ((1, '.'), 1), ((1, '/'), 1), ((1, '0'), 1), ((1, '1'), 1), ((1, '2'), 1), ((1, '3'), 1), ((1, '4'), 1), ((1, '5'), 1), ((1, '6'), 1), ((1, '7'), 1), ((1, '8'), 1), ((1, '9'), 1), ((1, ':'), 1), ((1, ';'), 1), ((1, '<'), 1), ((1, '='), 1), ((1, '>'), 1), ((1, '?'), 1), ((1, '@'), 1), ((1, 'A'), 1), ((1, 'B'), 1), ((1, 'C'), 1), ((1, 'D'), 1), ((1, 'E'), 1), ((1, 'F'), 1), ((1, 'G'), 1), ((1, 'H'), 1), ((1, 'I'), 1), ((1, 'J'), 1), ((1, 'K'), 1), ((1, 'L'), 1), ((1, 'M'), 1), ((1, 'N'), 1), ((1, 'O'), 1), ((1, 'P'), 1), ((1, 'Q'), 1), ((1, 'R'), 1), ((1, 'S'), 1), ((1, 'T'), 1), ((1, 'U'), 1), ((1, 'V'), 1), ((1, 'W'), 1), ((1, 'X'), 1), ((1, 'Y'), 1), ((1, 'Z'), 1), ((1, '['), 1), ((1, '\\'), 1), ((1, ']'), 1), ((1, '^'), 1), ((1, '_'), 1), ((1, '`'), 1), ((1, 'a'), 1), ((1, 'b'), 1), ((1, 'c'), 1), ((1, 'd'), 1), ((1, 'e'), 1), ((1, 'f'), 1), ((1, 'g'), 1), ((1, 'h'), 1), ((1, 'i'), 1), ((1, 'j'), 1), ((1, 'k'), 1), ((1, 'l'), 1), ((1, 'm'), 1), ((1, 'n'), 1), ((1, 'o'), 1), ((1, 'p'), 1), ((1, 'q'), 1), ((1, 'r'), 1), ((1, 's'), 1), ((1, 't'), 1), ((1, 'u'), 1), ((1, 'v'), 1), ((1, 'w'), 1), ((1, 'x'), 1), ((1, 'y'), 1), ((1, 'z'), 1), ((1, '{'), 1), ((1, '|'), 1), ((1, '}'), 1), ((1, '~'), 1)
            , ((2, '"'), 6), ((2, '\''), 6), ((2, '\\'), 6), ((2, 'n'), 6), ((2, 't'), 6)
            , ((3, '"'), 5), ((3, '\''), 5), ((3, '\\'), 5), ((3, 'n'), 5), ((3, 't'), 5)
            , ((4, ' '), 6), ((4, '!'), 6), ((4, '#'), 6), ((4, '$'), 6), ((4, '%'), 6), ((4, '&'), 6), ((4, '\''), 6), ((4, '('), 6), ((4, ')'), 6), ((4, '*'), 6), ((4, '+'), 6), ((4, ','), 6), ((4, '-'), 6), ((4, '.'), 6), ((4, '/'), 6), ((4, '0'), 6), ((4, '1'), 6), ((4, '2'), 6), ((4, '3'), 6), ((4, '4'), 6), ((4, '5'), 6), ((4, '6'), 6), ((4, '7'), 6), ((4, '8'), 6), ((4, '9'), 6), ((4, ':'), 6), ((4, ';'), 6), ((4, '<'), 6), ((4, '='), 6), ((4, '>'), 6), ((4, '?'), 6), ((4, '@'), 6), ((4, 'A'), 6), ((4, 'B'), 6), ((4, 'C'), 6), ((4, 'D'), 6), ((4, 'E'), 6), ((4, 'F'), 6), ((4, 'G'), 6), ((4, 'H'), 6), ((4, 'I'), 6), ((4, 'J'), 6), ((4, 'K'), 6), ((4, 'L'), 6), ((4, 'M'), 6), ((4, 'N'), 6), ((4, 'O'), 6), ((4, 'P'), 6), ((4, 'Q'), 6), ((4, 'R'), 6), ((4, 'S'), 6), ((4, 'T'), 6), ((4, 'U'), 6), ((4, 'V'), 6), ((4, 'W'), 6), ((4, 'X'), 6), ((4, 'Y'), 6), ((4, 'Z'), 6), ((4, '['), 6), ((4, '\\'), 2), ((4, ']'), 6), ((4, '^'), 6), ((4, '_'), 6), ((4, '`'), 6), ((4, 'a'), 6), ((4, 'b'), 6), ((4, 'c'), 6), ((4, 'd'), 6), ((4, 'e'), 6), ((4, 'f'), 6), ((4, 'g'), 6), ((4, 'h'), 6), ((4, 'i'), 6), ((4, 'j'), 6), ((4, 'k'), 6), ((4, 'l'), 6), ((4, 'm'), 6), ((4, 'n'), 6), ((4, 'o'), 6), ((4, 'p'), 6), ((4, 'q'), 6), ((4, 'r'), 6), ((4, 's'), 6), ((4, 't'), 6), ((4, 'u'), 6), ((4, 'v'), 6), ((4, 'w'), 6), ((4, 'x'), 6), ((4, 'y'), 6), ((4, 'z'), 6), ((4, '{'), 6), ((4, '|'), 6), ((4, '}'), 6), ((4, '~'), 6)
            , ((5, ' '), 5), ((5, '!'), 5), ((5, '"'), 58), ((5, '#'), 5), ((5, '$'), 5), ((5, '%'), 5), ((5, '&'), 5), ((5, '\''), 5), ((5, '('), 5), ((5, ')'), 5), ((5, '*'), 5), ((5, '+'), 5), ((5, ','), 5), ((5, '-'), 5), ((5, '.'), 5), ((5, '/'), 5), ((5, '0'), 5), ((5, '1'), 5), ((5, '2'), 5), ((5, '3'), 5), ((5, '4'), 5), ((5, '5'), 5), ((5, '6'), 5), ((5, '7'), 5), ((5, '8'), 5), ((5, '9'), 5), ((5, ':'), 5), ((5, ';'), 5), ((5, '<'), 5), ((5, '='), 5), ((5, '>'), 5), ((5, '?'), 5), ((5, '@'), 5), ((5, 'A'), 5), ((5, 'B'), 5), ((5, 'C'), 5), ((5, 'D'), 5), ((5, 'E'), 5), ((5, 'F'), 5), ((5, 'G'), 5), ((5, 'H'), 5), ((5, 'I'), 5), ((5, 'J'), 5), ((5, 'K'), 5), ((5, 'L'), 5), ((5, 'M'), 5), ((5, 'N'), 5), ((5, 'O'), 5), ((5, 'P'), 5), ((5, 'Q'), 5), ((5, 'R'), 5), ((5, 'S'), 5), ((5, 'T'), 5), ((5, 'U'), 5), ((5, 'V'), 5), ((5, 'W'), 5), ((5, 'X'), 5), ((5, 'Y'), 5), ((5, 'Z'), 5), ((5, '['), 5), ((5, '\\'), 3), ((5, ']'), 5), ((5, '^'), 5), ((5, '_'), 5), ((5, '`'), 5), ((5, 'a'), 5), ((5, 'b'), 5), ((5, 'c'), 5), ((5, 'd'), 5), ((5, 'e'), 5), ((5, 'f'), 5), ((5, 'g'), 5), ((5, 'h'), 5), ((5, 'i'), 5), ((5, 'j'), 5), ((5, 'k'), 5), ((5, 'l'), 5), ((5, 'm'), 5), ((5, 'n'), 5), ((5, 'o'), 5), ((5, 'p'), 5), ((5, 'q'), 5), ((5, 'r'), 5), ((5, 's'), 5), ((5, 't'), 5), ((5, 'u'), 5), ((5, 'v'), 5), ((5, 'w'), 5), ((5, 'x'), 5), ((5, 'y'), 5), ((5, 'z'), 5), ((5, '{'), 5), ((5, '|'), 5), ((5, '}'), 5), ((5, '~'), 5)
            , ((6, '\''), 59)
            , ((7, '\n'), 1), ((7, ' '), 1), ((7, '!'), 1), ((7, '"'), 1), ((7, '#'), 1), ((7, '$'), 1), ((7, '%'), 1), ((7, '&'), 1), ((7, '\''), 1), ((7, '('), 1), ((7, ')'), 62), ((7, '*'), 1), ((7, '+'), 1), ((7, ','), 1), ((7, '-'), 1), ((7, '.'), 1), ((7, '/'), 1), ((7, '0'), 1), ((7, '1'), 1), ((7, '2'), 1), ((7, '3'), 1), ((7, '4'), 1), ((7, '5'), 1), ((7, '6'), 1), ((7, '7'), 1), ((7, '8'), 1), ((7, '9'), 1), ((7, ':'), 1), ((7, ';'), 1), ((7, '<'), 1), ((7, '='), 1), ((7, '>'), 1), ((7, '?'), 1), ((7, '@'), 1), ((7, 'A'), 1), ((7, 'B'), 1), ((7, 'C'), 1), ((7, 'D'), 1), ((7, 'E'), 1), ((7, 'F'), 1), ((7, 'G'), 1), ((7, 'H'), 1), ((7, 'I'), 1), ((7, 'J'), 1), ((7, 'K'), 1), ((7, 'L'), 1), ((7, 'M'), 1), ((7, 'N'), 1), ((7, 'O'), 1), ((7, 'P'), 1), ((7, 'Q'), 1), ((7, 'R'), 1), ((7, 'S'), 1), ((7, 'T'), 1), ((7, 'U'), 1), ((7, 'V'), 1), ((7, 'W'), 1), ((7, 'X'), 1), ((7, 'Y'), 1), ((7, 'Z'), 1), ((7, '['), 1), ((7, '\\'), 1), ((7, ']'), 1), ((7, '^'), 1), ((7, '_'), 1), ((7, '`'), 1), ((7, 'a'), 1), ((7, 'b'), 1), ((7, 'c'), 1), ((7, 'd'), 1), ((7, 'e'), 1), ((7, 'f'), 1), ((7, 'g'), 1), ((7, 'h'), 1), ((7, 'i'), 1), ((7, 'j'), 1), ((7, 'k'), 1), ((7, 'l'), 1), ((7, 'm'), 1), ((7, 'n'), 1), ((7, 'o'), 1), ((7, 'p'), 1), ((7, 'q'), 1), ((7, 'r'), 1), ((7, 's'), 1), ((7, 't'), 1), ((7, 'u'), 1), ((7, 'v'), 1), ((7, 'w'), 1), ((7, 'x'), 1), ((7, 'y'), 1), ((7, 'z'), 1), ((7, '{'), 1), ((7, '|'), 1), ((7, '}'), 1), ((7, '~'), 1)
            , ((8, '-'), 19)
            , ((9, '-'), 21), ((9, ':'), 32)
            , ((10, '>'), 13)
            , ((11, '\n'), 60), ((11, ' '), 60), ((11, '!'), 27), ((11, '"'), 5), ((11, '%'), 61), ((11, '\''), 4), ((11, '('), 15), ((11, ')'), 16), ((11, ','), 20), ((11, '-'), 10), ((11, '.'), 12), ((11, '0'), 57), ((11, '1'), 57), ((11, '2'), 57), ((11, '3'), 57), ((11, '4'), 57), ((11, '5'), 57), ((11, '6'), 57), ((11, '7'), 57), ((11, '8'), 57), ((11, '9'), 57), ((11, ':'), 9), ((11, ';'), 26), ((11, '='), 22), ((11, '?'), 8), ((11, 'A'), 56), ((11, 'B'), 56), ((11, 'C'), 56), ((11, 'D'), 56), ((11, 'E'), 56), ((11, 'F'), 56), ((11, 'G'), 56), ((11, 'H'), 56), ((11, 'I'), 56), ((11, 'J'), 56), ((11, 'K'), 56), ((11, 'L'), 56), ((11, 'M'), 56), ((11, 'N'), 56), ((11, 'O'), 56), ((11, 'P'), 56), ((11, 'Q'), 56), ((11, 'R'), 56), ((11, 'S'), 56), ((11, 'T'), 56), ((11, 'U'), 56), ((11, 'V'), 56), ((11, 'W'), 56), ((11, 'X'), 56), ((11, 'Y'), 56), ((11, 'Z'), 56), ((11, '['), 17), ((11, '\\'), 31), ((11, ']'), 18), ((11, '_'), 55), ((11, 'a'), 48), ((11, 'b'), 48), ((11, 'c'), 48), ((11, 'd'), 45), ((11, 'e'), 48), ((11, 'f'), 47), ((11, 'g'), 48), ((11, 'h'), 48), ((11, 'i'), 48), ((11, 'j'), 48), ((11, 'k'), 39), ((11, 'l'), 48), ((11, 'm'), 48), ((11, 'n'), 48), ((11, 'o'), 48), ((11, 'p'), 35), ((11, 'q'), 48), ((11, 'r'), 48), ((11, 's'), 23), ((11, 't'), 42), ((11, 'u'), 48), ((11, 'v'), 48), ((11, 'w'), 48), ((11, 'x'), 48), ((11, 'y'), 48), ((11, 'z'), 48)
            , ((15, '*'), 1)
            , ((22, '>'), 14)
            , ((23, '0'), 48), ((23, '1'), 48), ((23, '2'), 48), ((23, '3'), 48), ((23, '4'), 48), ((23, '5'), 48), ((23, '6'), 48), ((23, '7'), 48), ((23, '8'), 48), ((23, '9'), 48), ((23, 'A'), 48), ((23, 'B'), 48), ((23, 'C'), 48), ((23, 'D'), 48), ((23, 'E'), 48), ((23, 'F'), 48), ((23, 'G'), 48), ((23, 'H'), 48), ((23, 'I'), 48), ((23, 'J'), 48), ((23, 'K'), 48), ((23, 'L'), 48), ((23, 'M'), 48), ((23, 'N'), 48), ((23, 'O'), 48), ((23, 'P'), 48), ((23, 'Q'), 48), ((23, 'R'), 48), ((23, 'S'), 48), ((23, 'T'), 48), ((23, 'U'), 48), ((23, 'V'), 48), ((23, 'W'), 48), ((23, 'X'), 48), ((23, 'Y'), 48), ((23, 'Z'), 48), ((23, '_'), 48), ((23, 'a'), 48), ((23, 'b'), 48), ((23, 'c'), 48), ((23, 'd'), 48), ((23, 'e'), 48), ((23, 'f'), 48), ((23, 'g'), 48), ((23, 'h'), 48), ((23, 'i'), 37), ((23, 'j'), 48), ((23, 'k'), 48), ((23, 'l'), 48), ((23, 'm'), 48), ((23, 'n'), 48), ((23, 'o'), 48), ((23, 'p'), 48), ((23, 'q'), 48), ((23, 'r'), 48), ((23, 's'), 48), ((23, 't'), 48), ((23, 'u'), 48), ((23, 'v'), 48), ((23, 'w'), 48), ((23, 'x'), 48), ((23, 'y'), 48), ((23, 'z'), 48)
            , ((24, '0'), 48), ((24, '1'), 48), ((24, '2'), 48), ((24, '3'), 48), ((24, '4'), 48), ((24, '5'), 48), ((24, '6'), 48), ((24, '7'), 48), ((24, '8'), 48), ((24, '9'), 48), ((24, 'A'), 48), ((24, 'B'), 48), ((24, 'C'), 48), ((24, 'D'), 48), ((24, 'E'), 48), ((24, 'F'), 48), ((24, 'G'), 48), ((24, 'H'), 48), ((24, 'I'), 48), ((24, 'J'), 48), ((24, 'K'), 48), ((24, 'L'), 48), ((24, 'M'), 48), ((24, 'N'), 48), ((24, 'O'), 48), ((24, 'P'), 48), ((24, 'Q'), 48), ((24, 'R'), 48), ((24, 'S'), 48), ((24, 'T'), 48), ((24, 'U'), 48), ((24, 'V'), 48), ((24, 'W'), 48), ((24, 'X'), 48), ((24, 'Y'), 48), ((24, 'Z'), 48), ((24, '_'), 48), ((24, 'a'), 48), ((24, 'b'), 48), ((24, 'c'), 48), ((24, 'd'), 48), ((24, 'e'), 48), ((24, 'f'), 48), ((24, 'g'), 48), ((24, 'h'), 48), ((24, 'i'), 48), ((24, 'j'), 48), ((24, 'k'), 48), ((24, 'l'), 48), ((24, 'm'), 48), ((24, 'n'), 48), ((24, 'o'), 48), ((24, 'p'), 48), ((24, 'q'), 48), ((24, 'r'), 48), ((24, 's'), 48), ((24, 't'), 48), ((24, 'u'), 48), ((24, 'v'), 48), ((24, 'w'), 48), ((24, 'x'), 48), ((24, 'y'), 48), ((24, 'z'), 48)
            , ((25, '0'), 48), ((25, '1'), 48), ((25, '2'), 48), ((25, '3'), 48), ((25, '4'), 48), ((25, '5'), 48), ((25, '6'), 48), ((25, '7'), 48), ((25, '8'), 48), ((25, '9'), 48), ((25, 'A'), 48), ((25, 'B'), 48), ((25, 'C'), 48), ((25, 'D'), 48), ((25, 'E'), 48), ((25, 'F'), 48), ((25, 'G'), 48), ((25, 'H'), 48), ((25, 'I'), 48), ((25, 'J'), 48), ((25, 'K'), 48), ((25, 'L'), 48), ((25, 'M'), 48), ((25, 'N'), 48), ((25, 'O'), 48), ((25, 'P'), 48), ((25, 'Q'), 48), ((25, 'R'), 48), ((25, 'S'), 48), ((25, 'T'), 48), ((25, 'U'), 48), ((25, 'V'), 48), ((25, 'W'), 48), ((25, 'X'), 48), ((25, 'Y'), 48), ((25, 'Z'), 48), ((25, '_'), 48), ((25, 'a'), 48), ((25, 'b'), 48), ((25, 'c'), 48), ((25, 'd'), 48), ((25, 'e'), 48), ((25, 'f'), 48), ((25, 'g'), 48), ((25, 'h'), 48), ((25, 'i'), 48), ((25, 'j'), 48), ((25, 'k'), 48), ((25, 'l'), 48), ((25, 'm'), 48), ((25, 'n'), 48), ((25, 'o'), 48), ((25, 'p'), 48), ((25, 'q'), 48), ((25, 'r'), 48), ((25, 's'), 48), ((25, 't'), 48), ((25, 'u'), 48), ((25, 'v'), 48), ((25, 'w'), 48), ((25, 'x'), 48), ((25, 'y'), 48), ((25, 'z'), 48)
            , ((28, '0'), 48), ((28, '1'), 48), ((28, '2'), 48), ((28, '3'), 48), ((28, '4'), 48), ((28, '5'), 48), ((28, '6'), 48), ((28, '7'), 48), ((28, '8'), 48), ((28, '9'), 48), ((28, 'A'), 48), ((28, 'B'), 48), ((28, 'C'), 48), ((28, 'D'), 48), ((28, 'E'), 48), ((28, 'F'), 48), ((28, 'G'), 48), ((28, 'H'), 48), ((28, 'I'), 48), ((28, 'J'), 48), ((28, 'K'), 48), ((28, 'L'), 48), ((28, 'M'), 48), ((28, 'N'), 48), ((28, 'O'), 48), ((28, 'P'), 48), ((28, 'Q'), 48), ((28, 'R'), 48), ((28, 'S'), 48), ((28, 'T'), 48), ((28, 'U'), 48), ((28, 'V'), 48), ((28, 'W'), 48), ((28, 'X'), 48), ((28, 'Y'), 48), ((28, 'Z'), 48), ((28, '_'), 48), ((28, 'a'), 48), ((28, 'b'), 48), ((28, 'c'), 48), ((28, 'd'), 48), ((28, 'e'), 48), ((28, 'f'), 48), ((28, 'g'), 48), ((28, 'h'), 48), ((28, 'i'), 48), ((28, 'j'), 48), ((28, 'k'), 48), ((28, 'l'), 48), ((28, 'm'), 48), ((28, 'n'), 48), ((28, 'o'), 48), ((28, 'p'), 48), ((28, 'q'), 48), ((28, 'r'), 48), ((28, 's'), 48), ((28, 't'), 48), ((28, 'u'), 48), ((28, 'v'), 48), ((28, 'w'), 48), ((28, 'x'), 48), ((28, 'y'), 48), ((28, 'z'), 48)
            , ((29, '0'), 48), ((29, '1'), 48), ((29, '2'), 48), ((29, '3'), 48), ((29, '4'), 48), ((29, '5'), 48), ((29, '6'), 48), ((29, '7'), 48), ((29, '8'), 48), ((29, '9'), 48), ((29, 'A'), 48), ((29, 'B'), 48), ((29, 'C'), 48), ((29, 'D'), 48), ((29, 'E'), 48), ((29, 'F'), 48), ((29, 'G'), 48), ((29, 'H'), 48), ((29, 'I'), 48), ((29, 'J'), 48), ((29, 'K'), 48), ((29, 'L'), 48), ((29, 'M'), 48), ((29, 'N'), 48), ((29, 'O'), 48), ((29, 'P'), 48), ((29, 'Q'), 48), ((29, 'R'), 48), ((29, 'S'), 48), ((29, 'T'), 48), ((29, 'U'), 48), ((29, 'V'), 48), ((29, 'W'), 48), ((29, 'X'), 48), ((29, 'Y'), 48), ((29, 'Z'), 48), ((29, '_'), 48), ((29, 'a'), 48), ((29, 'b'), 48), ((29, 'c'), 48), ((29, 'd'), 48), ((29, 'e'), 48), ((29, 'f'), 48), ((29, 'g'), 48), ((29, 'h'), 48), ((29, 'i'), 48), ((29, 'j'), 48), ((29, 'k'), 48), ((29, 'l'), 48), ((29, 'm'), 48), ((29, 'n'), 48), ((29, 'o'), 48), ((29, 'p'), 48), ((29, 'q'), 48), ((29, 'r'), 48), ((29, 's'), 48), ((29, 't'), 48), ((29, 'u'), 48), ((29, 'v'), 48), ((29, 'w'), 48), ((29, 'x'), 48), ((29, 'y'), 48), ((29, 'z'), 48)
            , ((30, '0'), 48), ((30, '1'), 48), ((30, '2'), 48), ((30, '3'), 48), ((30, '4'), 48), ((30, '5'), 48), ((30, '6'), 48), ((30, '7'), 48), ((30, '8'), 48), ((30, '9'), 48), ((30, 'A'), 48), ((30, 'B'), 48), ((30, 'C'), 48), ((30, 'D'), 48), ((30, 'E'), 48), ((30, 'F'), 48), ((30, 'G'), 48), ((30, 'H'), 48), ((30, 'I'), 48), ((30, 'J'), 48), ((30, 'K'), 48), ((30, 'L'), 48), ((30, 'M'), 48), ((30, 'N'), 48), ((30, 'O'), 48), ((30, 'P'), 48), ((30, 'Q'), 48), ((30, 'R'), 48), ((30, 'S'), 48), ((30, 'T'), 48), ((30, 'U'), 48), ((30, 'V'), 48), ((30, 'W'), 48), ((30, 'X'), 48), ((30, 'Y'), 48), ((30, 'Z'), 48), ((30, '_'), 48), ((30, 'a'), 48), ((30, 'b'), 48), ((30, 'c'), 48), ((30, 'd'), 48), ((30, 'e'), 48), ((30, 'f'), 48), ((30, 'g'), 48), ((30, 'h'), 48), ((30, 'i'), 48), ((30, 'j'), 48), ((30, 'k'), 48), ((30, 'l'), 48), ((30, 'm'), 48), ((30, 'n'), 48), ((30, 'o'), 48), ((30, 'p'), 48), ((30, 'q'), 48), ((30, 'r'), 48), ((30, 's'), 48), ((30, 't'), 48), ((30, 'u'), 48), ((30, 'v'), 48), ((30, 'w'), 48), ((30, 'x'), 48), ((30, 'y'), 48), ((30, 'z'), 48)
            , ((33, '0'), 48), ((33, '1'), 48), ((33, '2'), 48), ((33, '3'), 48), ((33, '4'), 48), ((33, '5'), 48), ((33, '6'), 48), ((33, '7'), 48), ((33, '8'), 48), ((33, '9'), 48), ((33, 'A'), 48), ((33, 'B'), 48), ((33, 'C'), 48), ((33, 'D'), 48), ((33, 'E'), 48), ((33, 'F'), 48), ((33, 'G'), 48), ((33, 'H'), 48), ((33, 'I'), 48), ((33, 'J'), 48), ((33, 'K'), 48), ((33, 'L'), 48), ((33, 'M'), 48), ((33, 'N'), 48), ((33, 'O'), 48), ((33, 'P'), 48), ((33, 'Q'), 48), ((33, 'R'), 48), ((33, 'S'), 48), ((33, 'T'), 48), ((33, 'U'), 48), ((33, 'V'), 48), ((33, 'W'), 48), ((33, 'X'), 48), ((33, 'Y'), 48), ((33, 'Z'), 48), ((33, '_'), 48), ((33, 'a'), 48), ((33, 'b'), 48), ((33, 'c'), 48), ((33, 'd'), 48), ((33, 'e'), 48), ((33, 'f'), 48), ((33, 'g'), 48), ((33, 'h'), 48), ((33, 'i'), 48), ((33, 'j'), 48), ((33, 'k'), 48), ((33, 'l'), 48), ((33, 'm'), 48), ((33, 'n'), 48), ((33, 'o'), 48), ((33, 'p'), 48), ((33, 'q'), 48), ((33, 'r'), 48), ((33, 's'), 48), ((33, 't'), 48), ((33, 'u'), 48), ((33, 'v'), 48), ((33, 'w'), 48), ((33, 'x'), 48), ((33, 'y'), 48), ((33, 'z'), 48)
            , ((34, '0'), 48), ((34, '1'), 48), ((34, '2'), 48), ((34, '3'), 48), ((34, '4'), 48), ((34, '5'), 48), ((34, '6'), 48), ((34, '7'), 48), ((34, '8'), 48), ((34, '9'), 48), ((34, 'A'), 48), ((34, 'B'), 48), ((34, 'C'), 48), ((34, 'D'), 48), ((34, 'E'), 48), ((34, 'F'), 48), ((34, 'G'), 48), ((34, 'H'), 48), ((34, 'I'), 48), ((34, 'J'), 48), ((34, 'K'), 48), ((34, 'L'), 48), ((34, 'M'), 48), ((34, 'N'), 48), ((34, 'O'), 48), ((34, 'P'), 48), ((34, 'Q'), 48), ((34, 'R'), 48), ((34, 'S'), 48), ((34, 'T'), 48), ((34, 'U'), 48), ((34, 'V'), 48), ((34, 'W'), 48), ((34, 'X'), 48), ((34, 'Y'), 48), ((34, 'Z'), 48), ((34, '_'), 48), ((34, 'a'), 48), ((34, 'b'), 48), ((34, 'c'), 48), ((34, 'd'), 48), ((34, 'e'), 48), ((34, 'f'), 48), ((34, 'g'), 48), ((34, 'h'), 48), ((34, 'i'), 48), ((34, 'j'), 48), ((34, 'k'), 48), ((34, 'l'), 48), ((34, 'm'), 48), ((34, 'n'), 48), ((34, 'o'), 48), ((34, 'p'), 48), ((34, 'q'), 48), ((34, 'r'), 48), ((34, 's'), 48), ((34, 't'), 48), ((34, 'u'), 48), ((34, 'v'), 48), ((34, 'w'), 48), ((34, 'x'), 48), ((34, 'y'), 48), ((34, 'z'), 48)
            , ((35, '0'), 48), ((35, '1'), 48), ((35, '2'), 48), ((35, '3'), 48), ((35, '4'), 48), ((35, '5'), 48), ((35, '6'), 48), ((35, '7'), 48), ((35, '8'), 48), ((35, '9'), 48), ((35, 'A'), 48), ((35, 'B'), 48), ((35, 'C'), 48), ((35, 'D'), 48), ((35, 'E'), 48), ((35, 'F'), 48), ((35, 'G'), 48), ((35, 'H'), 48), ((35, 'I'), 48), ((35, 'J'), 48), ((35, 'K'), 48), ((35, 'L'), 48), ((35, 'M'), 48), ((35, 'N'), 48), ((35, 'O'), 48), ((35, 'P'), 48), ((35, 'Q'), 48), ((35, 'R'), 48), ((35, 'S'), 48), ((35, 'T'), 48), ((35, 'U'), 48), ((35, 'V'), 48), ((35, 'W'), 48), ((35, 'X'), 48), ((35, 'Y'), 48), ((35, 'Z'), 48), ((35, '_'), 48), ((35, 'a'), 48), ((35, 'b'), 48), ((35, 'c'), 48), ((35, 'd'), 48), ((35, 'e'), 48), ((35, 'f'), 48), ((35, 'g'), 48), ((35, 'h'), 48), ((35, 'i'), 24), ((35, 'j'), 48), ((35, 'k'), 48), ((35, 'l'), 48), ((35, 'm'), 48), ((35, 'n'), 48), ((35, 'o'), 48), ((35, 'p'), 48), ((35, 'q'), 48), ((35, 'r'), 48), ((35, 's'), 48), ((35, 't'), 48), ((35, 'u'), 48), ((35, 'v'), 48), ((35, 'w'), 48), ((35, 'x'), 48), ((35, 'y'), 48), ((35, 'z'), 48)
            , ((36, '0'), 48), ((36, '1'), 48), ((36, '2'), 48), ((36, '3'), 48), ((36, '4'), 48), ((36, '5'), 48), ((36, '6'), 48), ((36, '7'), 48), ((36, '8'), 48), ((36, '9'), 48), ((36, 'A'), 48), ((36, 'B'), 48), ((36, 'C'), 48), ((36, 'D'), 48), ((36, 'E'), 48), ((36, 'F'), 48), ((36, 'G'), 48), ((36, 'H'), 48), ((36, 'I'), 48), ((36, 'J'), 48), ((36, 'K'), 48), ((36, 'L'), 48), ((36, 'M'), 48), ((36, 'N'), 48), ((36, 'O'), 48), ((36, 'P'), 48), ((36, 'Q'), 48), ((36, 'R'), 48), ((36, 'S'), 48), ((36, 'T'), 48), ((36, 'U'), 48), ((36, 'V'), 48), ((36, 'W'), 48), ((36, 'X'), 48), ((36, 'Y'), 48), ((36, 'Z'), 48), ((36, '_'), 48), ((36, 'a'), 48), ((36, 'b'), 48), ((36, 'c'), 48), ((36, 'd'), 48), ((36, 'e'), 48), ((36, 'f'), 48), ((36, 'g'), 48), ((36, 'h'), 48), ((36, 'i'), 48), ((36, 'j'), 48), ((36, 'k'), 48), ((36, 'l'), 48), ((36, 'm'), 49), ((36, 'n'), 48), ((36, 'o'), 48), ((36, 'p'), 48), ((36, 'q'), 48), ((36, 'r'), 48), ((36, 's'), 48), ((36, 't'), 48), ((36, 'u'), 48), ((36, 'v'), 48), ((36, 'w'), 48), ((36, 'x'), 48), ((36, 'y'), 48), ((36, 'z'), 48)
            , ((37, '0'), 48), ((37, '1'), 48), ((37, '2'), 48), ((37, '3'), 48), ((37, '4'), 48), ((37, '5'), 48), ((37, '6'), 48), ((37, '7'), 48), ((37, '8'), 48), ((37, '9'), 48), ((37, 'A'), 48), ((37, 'B'), 48), ((37, 'C'), 48), ((37, 'D'), 48), ((37, 'E'), 48), ((37, 'F'), 48), ((37, 'G'), 48), ((37, 'H'), 48), ((37, 'I'), 48), ((37, 'J'), 48), ((37, 'K'), 48), ((37, 'L'), 48), ((37, 'M'), 48), ((37, 'N'), 48), ((37, 'O'), 48), ((37, 'P'), 48), ((37, 'Q'), 48), ((37, 'R'), 48), ((37, 'S'), 48), ((37, 'T'), 48), ((37, 'U'), 48), ((37, 'V'), 48), ((37, 'W'), 48), ((37, 'X'), 48), ((37, 'Y'), 48), ((37, 'Z'), 48), ((37, '_'), 48), ((37, 'a'), 48), ((37, 'b'), 48), ((37, 'c'), 48), ((37, 'd'), 48), ((37, 'e'), 48), ((37, 'f'), 48), ((37, 'g'), 36), ((37, 'h'), 48), ((37, 'i'), 48), ((37, 'j'), 48), ((37, 'k'), 48), ((37, 'l'), 48), ((37, 'm'), 48), ((37, 'n'), 48), ((37, 'o'), 48), ((37, 'p'), 48), ((37, 'q'), 48), ((37, 'r'), 48), ((37, 's'), 48), ((37, 't'), 48), ((37, 'u'), 48), ((37, 'v'), 48), ((37, 'w'), 48), ((37, 'x'), 48), ((37, 'y'), 48), ((37, 'z'), 48)
            , ((38, '0'), 48), ((38, '1'), 48), ((38, '2'), 48), ((38, '3'), 48), ((38, '4'), 48), ((38, '5'), 48), ((38, '6'), 48), ((38, '7'), 48), ((38, '8'), 48), ((38, '9'), 48), ((38, 'A'), 48), ((38, 'B'), 48), ((38, 'C'), 48), ((38, 'D'), 48), ((38, 'E'), 48), ((38, 'F'), 48), ((38, 'G'), 48), ((38, 'H'), 48), ((38, 'I'), 48), ((38, 'J'), 48), ((38, 'K'), 48), ((38, 'L'), 48), ((38, 'M'), 48), ((38, 'N'), 48), ((38, 'O'), 48), ((38, 'P'), 48), ((38, 'Q'), 48), ((38, 'R'), 48), ((38, 'S'), 48), ((38, 'T'), 48), ((38, 'U'), 48), ((38, 'V'), 48), ((38, 'W'), 48), ((38, 'X'), 48), ((38, 'Y'), 48), ((38, 'Z'), 48), ((38, '_'), 48), ((38, 'a'), 48), ((38, 'b'), 48), ((38, 'c'), 48), ((38, 'd'), 48), ((38, 'e'), 48), ((38, 'f'), 48), ((38, 'g'), 48), ((38, 'h'), 48), ((38, 'i'), 48), ((38, 'j'), 48), ((38, 'k'), 48), ((38, 'l'), 48), ((38, 'm'), 48), ((38, 'n'), 50), ((38, 'o'), 48), ((38, 'p'), 48), ((38, 'q'), 48), ((38, 'r'), 48), ((38, 's'), 48), ((38, 't'), 48), ((38, 'u'), 48), ((38, 'v'), 48), ((38, 'w'), 48), ((38, 'x'), 48), ((38, 'y'), 48), ((38, 'z'), 48)
            , ((39, '0'), 48), ((39, '1'), 48), ((39, '2'), 48), ((39, '3'), 48), ((39, '4'), 48), ((39, '5'), 48), ((39, '6'), 48), ((39, '7'), 48), ((39, '8'), 48), ((39, '9'), 48), ((39, 'A'), 48), ((39, 'B'), 48), ((39, 'C'), 48), ((39, 'D'), 48), ((39, 'E'), 48), ((39, 'F'), 48), ((39, 'G'), 48), ((39, 'H'), 48), ((39, 'I'), 48), ((39, 'J'), 48), ((39, 'K'), 48), ((39, 'L'), 48), ((39, 'M'), 48), ((39, 'N'), 48), ((39, 'O'), 48), ((39, 'P'), 48), ((39, 'Q'), 48), ((39, 'R'), 48), ((39, 'S'), 48), ((39, 'T'), 48), ((39, 'U'), 48), ((39, 'V'), 48), ((39, 'W'), 48), ((39, 'X'), 48), ((39, 'Y'), 48), ((39, 'Z'), 48), ((39, '_'), 48), ((39, 'a'), 48), ((39, 'b'), 48), ((39, 'c'), 48), ((39, 'd'), 48), ((39, 'e'), 48), ((39, 'f'), 48), ((39, 'g'), 48), ((39, 'h'), 48), ((39, 'i'), 38), ((39, 'j'), 48), ((39, 'k'), 48), ((39, 'l'), 48), ((39, 'm'), 48), ((39, 'n'), 48), ((39, 'o'), 48), ((39, 'p'), 48), ((39, 'q'), 48), ((39, 'r'), 48), ((39, 's'), 48), ((39, 't'), 48), ((39, 'u'), 48), ((39, 'v'), 48), ((39, 'w'), 48), ((39, 'x'), 48), ((39, 'y'), 48), ((39, 'z'), 48)
            , ((40, '0'), 48), ((40, '1'), 48), ((40, '2'), 48), ((40, '3'), 48), ((40, '4'), 48), ((40, '5'), 48), ((40, '6'), 48), ((40, '7'), 48), ((40, '8'), 48), ((40, '9'), 48), ((40, 'A'), 48), ((40, 'B'), 48), ((40, 'C'), 48), ((40, 'D'), 48), ((40, 'E'), 48), ((40, 'F'), 48), ((40, 'G'), 48), ((40, 'H'), 48), ((40, 'I'), 48), ((40, 'J'), 48), ((40, 'K'), 48), ((40, 'L'), 48), ((40, 'M'), 48), ((40, 'N'), 48), ((40, 'O'), 48), ((40, 'P'), 48), ((40, 'Q'), 48), ((40, 'R'), 48), ((40, 'S'), 48), ((40, 'T'), 48), ((40, 'U'), 48), ((40, 'V'), 48), ((40, 'W'), 48), ((40, 'X'), 48), ((40, 'Y'), 48), ((40, 'Z'), 48), ((40, '_'), 48), ((40, 'a'), 48), ((40, 'b'), 48), ((40, 'c'), 48), ((40, 'd'), 48), ((40, 'e'), 48), ((40, 'f'), 48), ((40, 'g'), 48), ((40, 'h'), 48), ((40, 'i'), 48), ((40, 'j'), 48), ((40, 'k'), 48), ((40, 'l'), 48), ((40, 'm'), 48), ((40, 'n'), 48), ((40, 'o'), 48), ((40, 'p'), 48), ((40, 'q'), 48), ((40, 'r'), 48), ((40, 's'), 48), ((40, 't'), 48), ((40, 'u'), 51), ((40, 'v'), 48), ((40, 'w'), 48), ((40, 'x'), 48), ((40, 'y'), 48), ((40, 'z'), 48)
            , ((41, '0'), 48), ((41, '1'), 48), ((41, '2'), 48), ((41, '3'), 48), ((41, '4'), 48), ((41, '5'), 48), ((41, '6'), 48), ((41, '7'), 48), ((41, '8'), 48), ((41, '9'), 48), ((41, 'A'), 48), ((41, 'B'), 48), ((41, 'C'), 48), ((41, 'D'), 48), ((41, 'E'), 48), ((41, 'F'), 48), ((41, 'G'), 48), ((41, 'H'), 48), ((41, 'I'), 48), ((41, 'J'), 48), ((41, 'K'), 48), ((41, 'L'), 48), ((41, 'M'), 48), ((41, 'N'), 48), ((41, 'O'), 48), ((41, 'P'), 48), ((41, 'Q'), 48), ((41, 'R'), 48), ((41, 'S'), 48), ((41, 'T'), 48), ((41, 'U'), 48), ((41, 'V'), 48), ((41, 'W'), 48), ((41, 'X'), 48), ((41, 'Y'), 48), ((41, 'Z'), 48), ((41, '_'), 48), ((41, 'a'), 48), ((41, 'b'), 48), ((41, 'c'), 48), ((41, 'd'), 48), ((41, 'e'), 48), ((41, 'f'), 48), ((41, 'g'), 48), ((41, 'h'), 48), ((41, 'i'), 48), ((41, 'j'), 48), ((41, 'k'), 48), ((41, 'l'), 48), ((41, 'm'), 48), ((41, 'n'), 48), ((41, 'o'), 48), ((41, 'p'), 52), ((41, 'q'), 48), ((41, 'r'), 48), ((41, 's'), 48), ((41, 't'), 48), ((41, 'u'), 48), ((41, 'v'), 48), ((41, 'w'), 48), ((41, 'x'), 48), ((41, 'y'), 48), ((41, 'z'), 48)
            , ((42, '0'), 48), ((42, '1'), 48), ((42, '2'), 48), ((42, '3'), 48), ((42, '4'), 48), ((42, '5'), 48), ((42, '6'), 48), ((42, '7'), 48), ((42, '8'), 48), ((42, '9'), 48), ((42, 'A'), 48), ((42, 'B'), 48), ((42, 'C'), 48), ((42, 'D'), 48), ((42, 'E'), 48), ((42, 'F'), 48), ((42, 'G'), 48), ((42, 'H'), 48), ((42, 'I'), 48), ((42, 'J'), 48), ((42, 'K'), 48), ((42, 'L'), 48), ((42, 'M'), 48), ((42, 'N'), 48), ((42, 'O'), 48), ((42, 'P'), 48), ((42, 'Q'), 48), ((42, 'R'), 48), ((42, 'S'), 48), ((42, 'T'), 48), ((42, 'U'), 48), ((42, 'V'), 48), ((42, 'W'), 48), ((42, 'X'), 48), ((42, 'Y'), 48), ((42, 'Z'), 48), ((42, '_'), 48), ((42, 'a'), 48), ((42, 'b'), 48), ((42, 'c'), 48), ((42, 'd'), 48), ((42, 'e'), 48), ((42, 'f'), 48), ((42, 'g'), 48), ((42, 'h'), 48), ((42, 'i'), 48), ((42, 'j'), 48), ((42, 'k'), 48), ((42, 'l'), 48), ((42, 'm'), 48), ((42, 'n'), 48), ((42, 'o'), 48), ((42, 'p'), 48), ((42, 'q'), 48), ((42, 'r'), 40), ((42, 's'), 48), ((42, 't'), 48), ((42, 'u'), 48), ((42, 'v'), 48), ((42, 'w'), 48), ((42, 'x'), 48), ((42, 'y'), 41), ((42, 'z'), 48)
            , ((43, '0'), 48), ((43, '1'), 48), ((43, '2'), 48), ((43, '3'), 48), ((43, '4'), 48), ((43, '5'), 48), ((43, '6'), 48), ((43, '7'), 48), ((43, '8'), 48), ((43, '9'), 48), ((43, 'A'), 48), ((43, 'B'), 48), ((43, 'C'), 48), ((43, 'D'), 48), ((43, 'E'), 48), ((43, 'F'), 48), ((43, 'G'), 48), ((43, 'H'), 48), ((43, 'I'), 48), ((43, 'J'), 48), ((43, 'K'), 48), ((43, 'L'), 48), ((43, 'M'), 48), ((43, 'N'), 48), ((43, 'O'), 48), ((43, 'P'), 48), ((43, 'Q'), 48), ((43, 'R'), 48), ((43, 'S'), 48), ((43, 'T'), 48), ((43, 'U'), 48), ((43, 'V'), 48), ((43, 'W'), 48), ((43, 'X'), 48), ((43, 'Y'), 48), ((43, 'Z'), 48), ((43, '_'), 48), ((43, 'a'), 48), ((43, 'b'), 48), ((43, 'c'), 48), ((43, 'd'), 48), ((43, 'e'), 48), ((43, 'f'), 48), ((43, 'g'), 48), ((43, 'h'), 48), ((43, 'i'), 48), ((43, 'j'), 48), ((43, 'k'), 48), ((43, 'l'), 48), ((43, 'm'), 48), ((43, 'n'), 48), ((43, 'o'), 48), ((43, 'p'), 48), ((43, 'q'), 48), ((43, 'r'), 48), ((43, 's'), 48), ((43, 't'), 48), ((43, 'u'), 53), ((43, 'v'), 48), ((43, 'w'), 48), ((43, 'x'), 48), ((43, 'y'), 48), ((43, 'z'), 48)
            , ((44, '0'), 48), ((44, '1'), 48), ((44, '2'), 48), ((44, '3'), 48), ((44, '4'), 48), ((44, '5'), 48), ((44, '6'), 48), ((44, '7'), 48), ((44, '8'), 48), ((44, '9'), 48), ((44, 'A'), 48), ((44, 'B'), 48), ((44, 'C'), 48), ((44, 'D'), 48), ((44, 'E'), 48), ((44, 'F'), 48), ((44, 'G'), 48), ((44, 'H'), 48), ((44, 'I'), 48), ((44, 'J'), 48), ((44, 'K'), 48), ((44, 'L'), 48), ((44, 'M'), 48), ((44, 'N'), 48), ((44, 'O'), 48), ((44, 'P'), 48), ((44, 'Q'), 48), ((44, 'R'), 48), ((44, 'S'), 48), ((44, 'T'), 48), ((44, 'U'), 48), ((44, 'V'), 48), ((44, 'W'), 48), ((44, 'X'), 48), ((44, 'Y'), 48), ((44, 'Z'), 48), ((44, '_'), 48), ((44, 'a'), 48), ((44, 'b'), 43), ((44, 'c'), 48), ((44, 'd'), 48), ((44, 'e'), 48), ((44, 'f'), 48), ((44, 'g'), 48), ((44, 'h'), 48), ((44, 'i'), 48), ((44, 'j'), 48), ((44, 'k'), 48), ((44, 'l'), 48), ((44, 'm'), 48), ((44, 'n'), 48), ((44, 'o'), 48), ((44, 'p'), 48), ((44, 'q'), 48), ((44, 'r'), 48), ((44, 's'), 48), ((44, 't'), 48), ((44, 'u'), 48), ((44, 'v'), 48), ((44, 'w'), 48), ((44, 'x'), 48), ((44, 'y'), 48), ((44, 'z'), 48)
            , ((45, '0'), 48), ((45, '1'), 48), ((45, '2'), 48), ((45, '3'), 48), ((45, '4'), 48), ((45, '5'), 48), ((45, '6'), 48), ((45, '7'), 48), ((45, '8'), 48), ((45, '9'), 48), ((45, 'A'), 48), ((45, 'B'), 48), ((45, 'C'), 48), ((45, 'D'), 48), ((45, 'E'), 48), ((45, 'F'), 48), ((45, 'G'), 48), ((45, 'H'), 48), ((45, 'I'), 48), ((45, 'J'), 48), ((45, 'K'), 48), ((45, 'L'), 48), ((45, 'M'), 48), ((45, 'N'), 48), ((45, 'O'), 48), ((45, 'P'), 48), ((45, 'Q'), 48), ((45, 'R'), 48), ((45, 'S'), 48), ((45, 'T'), 48), ((45, 'U'), 48), ((45, 'V'), 48), ((45, 'W'), 48), ((45, 'X'), 48), ((45, 'Y'), 48), ((45, 'Z'), 48), ((45, '_'), 48), ((45, 'a'), 48), ((45, 'b'), 48), ((45, 'c'), 48), ((45, 'd'), 48), ((45, 'e'), 44), ((45, 'f'), 48), ((45, 'g'), 48), ((45, 'h'), 48), ((45, 'i'), 48), ((45, 'j'), 48), ((45, 'k'), 48), ((45, 'l'), 48), ((45, 'm'), 48), ((45, 'n'), 48), ((45, 'o'), 48), ((45, 'p'), 48), ((45, 'q'), 48), ((45, 'r'), 48), ((45, 's'), 48), ((45, 't'), 48), ((45, 'u'), 48), ((45, 'v'), 48), ((45, 'w'), 48), ((45, 'x'), 48), ((45, 'y'), 48), ((45, 'z'), 48)
            , ((46, '0'), 48), ((46, '1'), 48), ((46, '2'), 48), ((46, '3'), 48), ((46, '4'), 48), ((46, '5'), 48), ((46, '6'), 48), ((46, '7'), 48), ((46, '8'), 48), ((46, '9'), 48), ((46, 'A'), 48), ((46, 'B'), 48), ((46, 'C'), 48), ((46, 'D'), 48), ((46, 'E'), 48), ((46, 'F'), 48), ((46, 'G'), 48), ((46, 'H'), 48), ((46, 'I'), 48), ((46, 'J'), 48), ((46, 'K'), 48), ((46, 'L'), 48), ((46, 'M'), 48), ((46, 'N'), 48), ((46, 'O'), 48), ((46, 'P'), 48), ((46, 'Q'), 48), ((46, 'R'), 48), ((46, 'S'), 48), ((46, 'T'), 48), ((46, 'U'), 48), ((46, 'V'), 48), ((46, 'W'), 48), ((46, 'X'), 48), ((46, 'Y'), 48), ((46, 'Z'), 48), ((46, '_'), 48), ((46, 'a'), 48), ((46, 'b'), 48), ((46, 'c'), 48), ((46, 'd'), 48), ((46, 'e'), 48), ((46, 'f'), 48), ((46, 'g'), 48), ((46, 'h'), 48), ((46, 'i'), 54), ((46, 'j'), 48), ((46, 'k'), 48), ((46, 'l'), 48), ((46, 'm'), 48), ((46, 'n'), 48), ((46, 'o'), 48), ((46, 'p'), 48), ((46, 'q'), 48), ((46, 'r'), 48), ((46, 's'), 48), ((46, 't'), 48), ((46, 'u'), 48), ((46, 'v'), 48), ((46, 'w'), 48), ((46, 'x'), 48), ((46, 'y'), 48), ((46, 'z'), 48)
            , ((47, '0'), 48), ((47, '1'), 48), ((47, '2'), 48), ((47, '3'), 48), ((47, '4'), 48), ((47, '5'), 48), ((47, '6'), 48), ((47, '7'), 48), ((47, '8'), 48), ((47, '9'), 48), ((47, 'A'), 48), ((47, 'B'), 48), ((47, 'C'), 48), ((47, 'D'), 48), ((47, 'E'), 48), ((47, 'F'), 48), ((47, 'G'), 48), ((47, 'H'), 48), ((47, 'I'), 48), ((47, 'J'), 48), ((47, 'K'), 48), ((47, 'L'), 48), ((47, 'M'), 48), ((47, 'N'), 48), ((47, 'O'), 48), ((47, 'P'), 48), ((47, 'Q'), 48), ((47, 'R'), 48), ((47, 'S'), 48), ((47, 'T'), 48), ((47, 'U'), 48), ((47, 'V'), 48), ((47, 'W'), 48), ((47, 'X'), 48), ((47, 'Y'), 48), ((47, 'Z'), 48), ((47, '_'), 48), ((47, 'a'), 46), ((47, 'b'), 48), ((47, 'c'), 48), ((47, 'd'), 48), ((47, 'e'), 48), ((47, 'f'), 48), ((47, 'g'), 48), ((47, 'h'), 48), ((47, 'i'), 48), ((47, 'j'), 48), ((47, 'k'), 48), ((47, 'l'), 48), ((47, 'm'), 48), ((47, 'n'), 48), ((47, 'o'), 48), ((47, 'p'), 48), ((47, 'q'), 48), ((47, 'r'), 48), ((47, 's'), 48), ((47, 't'), 48), ((47, 'u'), 48), ((47, 'v'), 48), ((47, 'w'), 48), ((47, 'x'), 48), ((47, 'y'), 48), ((47, 'z'), 48)
            , ((48, '0'), 48), ((48, '1'), 48), ((48, '2'), 48), ((48, '3'), 48), ((48, '4'), 48), ((48, '5'), 48), ((48, '6'), 48), ((48, '7'), 48), ((48, '8'), 48), ((48, '9'), 48), ((48, 'A'), 48), ((48, 'B'), 48), ((48, 'C'), 48), ((48, 'D'), 48), ((48, 'E'), 48), ((48, 'F'), 48), ((48, 'G'), 48), ((48, 'H'), 48), ((48, 'I'), 48), ((48, 'J'), 48), ((48, 'K'), 48), ((48, 'L'), 48), ((48, 'M'), 48), ((48, 'N'), 48), ((48, 'O'), 48), ((48, 'P'), 48), ((48, 'Q'), 48), ((48, 'R'), 48), ((48, 'S'), 48), ((48, 'T'), 48), ((48, 'U'), 48), ((48, 'V'), 48), ((48, 'W'), 48), ((48, 'X'), 48), ((48, 'Y'), 48), ((48, 'Z'), 48), ((48, '_'), 48), ((48, 'a'), 48), ((48, 'b'), 48), ((48, 'c'), 48), ((48, 'd'), 48), ((48, 'e'), 48), ((48, 'f'), 48), ((48, 'g'), 48), ((48, 'h'), 48), ((48, 'i'), 48), ((48, 'j'), 48), ((48, 'k'), 48), ((48, 'l'), 48), ((48, 'm'), 48), ((48, 'n'), 48), ((48, 'o'), 48), ((48, 'p'), 48), ((48, 'q'), 48), ((48, 'r'), 48), ((48, 's'), 48), ((48, 't'), 48), ((48, 'u'), 48), ((48, 'v'), 48), ((48, 'w'), 48), ((48, 'x'), 48), ((48, 'y'), 48), ((48, 'z'), 48)
            , ((49, '0'), 48), ((49, '1'), 48), ((49, '2'), 48), ((49, '3'), 48), ((49, '4'), 48), ((49, '5'), 48), ((49, '6'), 48), ((49, '7'), 48), ((49, '8'), 48), ((49, '9'), 48), ((49, 'A'), 48), ((49, 'B'), 48), ((49, 'C'), 48), ((49, 'D'), 48), ((49, 'E'), 48), ((49, 'F'), 48), ((49, 'G'), 48), ((49, 'H'), 48), ((49, 'I'), 48), ((49, 'J'), 48), ((49, 'K'), 48), ((49, 'L'), 48), ((49, 'M'), 48), ((49, 'N'), 48), ((49, 'O'), 48), ((49, 'P'), 48), ((49, 'Q'), 48), ((49, 'R'), 48), ((49, 'S'), 48), ((49, 'T'), 48), ((49, 'U'), 48), ((49, 'V'), 48), ((49, 'W'), 48), ((49, 'X'), 48), ((49, 'Y'), 48), ((49, 'Z'), 48), ((49, '_'), 48), ((49, 'a'), 25), ((49, 'b'), 48), ((49, 'c'), 48), ((49, 'd'), 48), ((49, 'e'), 48), ((49, 'f'), 48), ((49, 'g'), 48), ((49, 'h'), 48), ((49, 'i'), 48), ((49, 'j'), 48), ((49, 'k'), 48), ((49, 'l'), 48), ((49, 'm'), 48), ((49, 'n'), 48), ((49, 'o'), 48), ((49, 'p'), 48), ((49, 'q'), 48), ((49, 'r'), 48), ((49, 's'), 48), ((49, 't'), 48), ((49, 'u'), 48), ((49, 'v'), 48), ((49, 'w'), 48), ((49, 'x'), 48), ((49, 'y'), 48), ((49, 'z'), 48)
            , ((50, '0'), 48), ((50, '1'), 48), ((50, '2'), 48), ((50, '3'), 48), ((50, '4'), 48), ((50, '5'), 48), ((50, '6'), 48), ((50, '7'), 48), ((50, '8'), 48), ((50, '9'), 48), ((50, 'A'), 48), ((50, 'B'), 48), ((50, 'C'), 48), ((50, 'D'), 48), ((50, 'E'), 48), ((50, 'F'), 48), ((50, 'G'), 48), ((50, 'H'), 48), ((50, 'I'), 48), ((50, 'J'), 48), ((50, 'K'), 48), ((50, 'L'), 48), ((50, 'M'), 48), ((50, 'N'), 48), ((50, 'O'), 48), ((50, 'P'), 48), ((50, 'Q'), 48), ((50, 'R'), 48), ((50, 'S'), 48), ((50, 'T'), 48), ((50, 'U'), 48), ((50, 'V'), 48), ((50, 'W'), 48), ((50, 'X'), 48), ((50, 'Y'), 48), ((50, 'Z'), 48), ((50, '_'), 48), ((50, 'a'), 48), ((50, 'b'), 48), ((50, 'c'), 48), ((50, 'd'), 33), ((50, 'e'), 48), ((50, 'f'), 48), ((50, 'g'), 48), ((50, 'h'), 48), ((50, 'i'), 48), ((50, 'j'), 48), ((50, 'k'), 48), ((50, 'l'), 48), ((50, 'm'), 48), ((50, 'n'), 48), ((50, 'o'), 48), ((50, 'p'), 48), ((50, 'q'), 48), ((50, 'r'), 48), ((50, 's'), 48), ((50, 't'), 48), ((50, 'u'), 48), ((50, 'v'), 48), ((50, 'w'), 48), ((50, 'x'), 48), ((50, 'y'), 48), ((50, 'z'), 48)
            , ((51, '0'), 48), ((51, '1'), 48), ((51, '2'), 48), ((51, '3'), 48), ((51, '4'), 48), ((51, '5'), 48), ((51, '6'), 48), ((51, '7'), 48), ((51, '8'), 48), ((51, '9'), 48), ((51, 'A'), 48), ((51, 'B'), 48), ((51, 'C'), 48), ((51, 'D'), 48), ((51, 'E'), 48), ((51, 'F'), 48), ((51, 'G'), 48), ((51, 'H'), 48), ((51, 'I'), 48), ((51, 'J'), 48), ((51, 'K'), 48), ((51, 'L'), 48), ((51, 'M'), 48), ((51, 'N'), 48), ((51, 'O'), 48), ((51, 'P'), 48), ((51, 'Q'), 48), ((51, 'R'), 48), ((51, 'S'), 48), ((51, 'T'), 48), ((51, 'U'), 48), ((51, 'V'), 48), ((51, 'W'), 48), ((51, 'X'), 48), ((51, 'Y'), 48), ((51, 'Z'), 48), ((51, '_'), 48), ((51, 'a'), 48), ((51, 'b'), 48), ((51, 'c'), 48), ((51, 'd'), 48), ((51, 'e'), 28), ((51, 'f'), 48), ((51, 'g'), 48), ((51, 'h'), 48), ((51, 'i'), 48), ((51, 'j'), 48), ((51, 'k'), 48), ((51, 'l'), 48), ((51, 'm'), 48), ((51, 'n'), 48), ((51, 'o'), 48), ((51, 'p'), 48), ((51, 'q'), 48), ((51, 'r'), 48), ((51, 's'), 48), ((51, 't'), 48), ((51, 'u'), 48), ((51, 'v'), 48), ((51, 'w'), 48), ((51, 'x'), 48), ((51, 'y'), 48), ((51, 'z'), 48)
            , ((52, '0'), 48), ((52, '1'), 48), ((52, '2'), 48), ((52, '3'), 48), ((52, '4'), 48), ((52, '5'), 48), ((52, '6'), 48), ((52, '7'), 48), ((52, '8'), 48), ((52, '9'), 48), ((52, 'A'), 48), ((52, 'B'), 48), ((52, 'C'), 48), ((52, 'D'), 48), ((52, 'E'), 48), ((52, 'F'), 48), ((52, 'G'), 48), ((52, 'H'), 48), ((52, 'I'), 48), ((52, 'J'), 48), ((52, 'K'), 48), ((52, 'L'), 48), ((52, 'M'), 48), ((52, 'N'), 48), ((52, 'O'), 48), ((52, 'P'), 48), ((52, 'Q'), 48), ((52, 'R'), 48), ((52, 'S'), 48), ((52, 'T'), 48), ((52, 'U'), 48), ((52, 'V'), 48), ((52, 'W'), 48), ((52, 'X'), 48), ((52, 'Y'), 48), ((52, 'Z'), 48), ((52, '_'), 48), ((52, 'a'), 48), ((52, 'b'), 48), ((52, 'c'), 48), ((52, 'd'), 48), ((52, 'e'), 34), ((52, 'f'), 48), ((52, 'g'), 48), ((52, 'h'), 48), ((52, 'i'), 48), ((52, 'j'), 48), ((52, 'k'), 48), ((52, 'l'), 48), ((52, 'm'), 48), ((52, 'n'), 48), ((52, 'o'), 48), ((52, 'p'), 48), ((52, 'q'), 48), ((52, 'r'), 48), ((52, 's'), 48), ((52, 't'), 48), ((52, 'u'), 48), ((52, 'v'), 48), ((52, 'w'), 48), ((52, 'x'), 48), ((52, 'y'), 48), ((52, 'z'), 48)
            , ((53, '0'), 48), ((53, '1'), 48), ((53, '2'), 48), ((53, '3'), 48), ((53, '4'), 48), ((53, '5'), 48), ((53, '6'), 48), ((53, '7'), 48), ((53, '8'), 48), ((53, '9'), 48), ((53, 'A'), 48), ((53, 'B'), 48), ((53, 'C'), 48), ((53, 'D'), 48), ((53, 'E'), 48), ((53, 'F'), 48), ((53, 'G'), 48), ((53, 'H'), 48), ((53, 'I'), 48), ((53, 'J'), 48), ((53, 'K'), 48), ((53, 'L'), 48), ((53, 'M'), 48), ((53, 'N'), 48), ((53, 'O'), 48), ((53, 'P'), 48), ((53, 'Q'), 48), ((53, 'R'), 48), ((53, 'S'), 48), ((53, 'T'), 48), ((53, 'U'), 48), ((53, 'V'), 48), ((53, 'W'), 48), ((53, 'X'), 48), ((53, 'Y'), 48), ((53, 'Z'), 48), ((53, '_'), 48), ((53, 'a'), 48), ((53, 'b'), 48), ((53, 'c'), 48), ((53, 'd'), 48), ((53, 'e'), 48), ((53, 'f'), 48), ((53, 'g'), 30), ((53, 'h'), 48), ((53, 'i'), 48), ((53, 'j'), 48), ((53, 'k'), 48), ((53, 'l'), 48), ((53, 'm'), 48), ((53, 'n'), 48), ((53, 'o'), 48), ((53, 'p'), 48), ((53, 'q'), 48), ((53, 'r'), 48), ((53, 's'), 48), ((53, 't'), 48), ((53, 'u'), 48), ((53, 'v'), 48), ((53, 'w'), 48), ((53, 'x'), 48), ((53, 'y'), 48), ((53, 'z'), 48)
            , ((54, '0'), 48), ((54, '1'), 48), ((54, '2'), 48), ((54, '3'), 48), ((54, '4'), 48), ((54, '5'), 48), ((54, '6'), 48), ((54, '7'), 48), ((54, '8'), 48), ((54, '9'), 48), ((54, 'A'), 48), ((54, 'B'), 48), ((54, 'C'), 48), ((54, 'D'), 48), ((54, 'E'), 48), ((54, 'F'), 48), ((54, 'G'), 48), ((54, 'H'), 48), ((54, 'I'), 48), ((54, 'J'), 48), ((54, 'K'), 48), ((54, 'L'), 48), ((54, 'M'), 48), ((54, 'N'), 48), ((54, 'O'), 48), ((54, 'P'), 48), ((54, 'Q'), 48), ((54, 'R'), 48), ((54, 'S'), 48), ((54, 'T'), 48), ((54, 'U'), 48), ((54, 'V'), 48), ((54, 'W'), 48), ((54, 'X'), 48), ((54, 'Y'), 48), ((54, 'Z'), 48), ((54, '_'), 48), ((54, 'a'), 48), ((54, 'b'), 48), ((54, 'c'), 48), ((54, 'd'), 48), ((54, 'e'), 48), ((54, 'f'), 48), ((54, 'g'), 48), ((54, 'h'), 48), ((54, 'i'), 48), ((54, 'j'), 48), ((54, 'k'), 48), ((54, 'l'), 29), ((54, 'm'), 48), ((54, 'n'), 48), ((54, 'o'), 48), ((54, 'p'), 48), ((54, 'q'), 48), ((54, 'r'), 48), ((54, 's'), 48), ((54, 't'), 48), ((54, 'u'), 48), ((54, 'v'), 48), ((54, 'w'), 48), ((54, 'x'), 48), ((54, 'y'), 48), ((54, 'z'), 48)
            , ((56, '0'), 56), ((56, '1'), 56), ((56, '2'), 56), ((56, '3'), 56), ((56, '4'), 56), ((56, '5'), 56), ((56, '6'), 56), ((56, '7'), 56), ((56, '8'), 56), ((56, '9'), 56), ((56, 'A'), 56), ((56, 'B'), 56), ((56, 'C'), 56), ((56, 'D'), 56), ((56, 'E'), 56), ((56, 'F'), 56), ((56, 'G'), 56), ((56, 'H'), 56), ((56, 'I'), 56), ((56, 'J'), 56), ((56, 'K'), 56), ((56, 'L'), 56), ((56, 'M'), 56), ((56, 'N'), 56), ((56, 'O'), 56), ((56, 'P'), 56), ((56, 'Q'), 56), ((56, 'R'), 56), ((56, 'S'), 56), ((56, 'T'), 56), ((56, 'U'), 56), ((56, 'V'), 56), ((56, 'W'), 56), ((56, 'X'), 56), ((56, 'Y'), 56), ((56, 'Z'), 56), ((56, '_'), 56), ((56, 'a'), 56), ((56, 'b'), 56), ((56, 'c'), 56), ((56, 'd'), 56), ((56, 'e'), 56), ((56, 'f'), 56), ((56, 'g'), 56), ((56, 'h'), 56), ((56, 'i'), 56), ((56, 'j'), 56), ((56, 'k'), 56), ((56, 'l'), 56), ((56, 'm'), 56), ((56, 'n'), 56), ((56, 'o'), 56), ((56, 'p'), 56), ((56, 'q'), 56), ((56, 'r'), 56), ((56, 's'), 56), ((56, 't'), 56), ((56, 'u'), 56), ((56, 'v'), 56), ((56, 'w'), 56), ((56, 'x'), 56), ((56, 'y'), 56), ((56, 'z'), 56)
            , ((57, '0'), 57), ((57, '1'), 57), ((57, '2'), 57), ((57, '3'), 57), ((57, '4'), 57), ((57, '5'), 57), ((57, '6'), 57), ((57, '7'), 57), ((57, '8'), 57), ((57, '9'), 57)
            , ((60, '\n'), 60), ((60, ' '), 60)
            , ((61, ' '), 61), ((61, '!'), 61), ((61, '"'), 61), ((61, '#'), 61), ((61, '$'), 61), ((61, '%'), 61), ((61, '&'), 61), ((61, '\''), 61), ((61, '('), 61), ((61, ')'), 61), ((61, '*'), 61), ((61, '+'), 61), ((61, ','), 61), ((61, '-'), 61), ((61, '.'), 61), ((61, '/'), 61), ((61, '0'), 61), ((61, '1'), 61), ((61, '2'), 61), ((61, '3'), 61), ((61, '4'), 61), ((61, '5'), 61), ((61, '6'), 61), ((61, '7'), 61), ((61, '8'), 61), ((61, '9'), 61), ((61, ':'), 61), ((61, ';'), 61), ((61, '<'), 61), ((61, '='), 61), ((61, '>'), 61), ((61, '?'), 61), ((61, '@'), 61), ((61, 'A'), 61), ((61, 'B'), 61), ((61, 'C'), 61), ((61, 'D'), 61), ((61, 'E'), 61), ((61, 'F'), 61), ((61, 'G'), 61), ((61, 'H'), 61), ((61, 'I'), 61), ((61, 'J'), 61), ((61, 'K'), 61), ((61, 'L'), 61), ((61, 'M'), 61), ((61, 'N'), 61), ((61, 'O'), 61), ((61, 'P'), 61), ((61, 'Q'), 61), ((61, 'R'), 61), ((61, 'S'), 61), ((61, 'T'), 61), ((61, 'U'), 61), ((61, 'V'), 61), ((61, 'W'), 61), ((61, 'X'), 61), ((61, 'Y'), 61), ((61, 'Z'), 61), ((61, '['), 61), ((61, '\\'), 61), ((61, ']'), 61), ((61, '^'), 61), ((61, '_'), 61), ((61, '`'), 61), ((61, 'a'), 61), ((61, 'b'), 61), ((61, 'c'), 61), ((61, 'd'), 61), ((61, 'e'), 61), ((61, 'f'), 61), ((61, 'g'), 61), ((61, 'h'), 61), ((61, 'i'), 61), ((61, 'j'), 61), ((61, 'k'), 61), ((61, 'l'), 61), ((61, 'm'), 61), ((61, 'n'), 61), ((61, 'o'), 61), ((61, 'p'), 61), ((61, 'q'), 61), ((61, 'r'), 61), ((61, 's'), 61), ((61, 't'), 61), ((61, 'u'), 61), ((61, 'v'), 61), ((61, 'w'), 61), ((61, 'x'), 61), ((61, 'y'), 61), ((61, 'z'), 61), ((61, '{'), 61), ((61, '|'), 61), ((61, '}'), 61), ((61, '~'), 61)
            ]
        , getMarkedQsOfDFA = XMap.fromAscList []
        , getPseudoFinalsOfDFA = XSet.fromAscList []
        }
    runDFA :: DFA -> [((Int, Int), Char)] -> Either (Int, Int) ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
    runDFA (DFA q0 qfs deltas markeds pseudo_finals) = if XSet.null pseudo_finals then Right . XIdentity.runIdentity . runFast else runSlow where
        loop1 :: Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT (Maybe Int, [((Int, Int), Char)]) XIdentity.Identity [((Int, Int), Char)]
        loop1 q buffer [] = return buffer
        loop1 q buffer (ch : str) = do
            (latest, accepted) <- XState.get
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case XMap.lookup p qfs of
                    Nothing -> loop1 p (buffer ++ [ch]) str
                    latest' -> do
                        XState.put (latest', accepted ++ buffer ++ [ch])
                        loop1 p [] str
        loop2 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop2 qs q [] buffer = return buffer
        loop2 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop2 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        loop2 qs p str []
        loop3 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop3 qs q [] buffer = return buffer
        loop3 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop3 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        return str
        runFast :: [((Int, Int), Char)] -> XIdentity.Identity ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        runFast input = do
            (rest, (latest, accepted)) <- XState.runStateT (loop1 q0 [] input) (Nothing, [])
            case latest >>= flip XMap.lookup markeds of
                Nothing -> return ((latest, accepted), rest)
                Just (True, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop2 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
                Just (False, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop3 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
        runSlow :: [((Int, Int), Char)] -> Either (Int, Int) ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        runSlow = undefined
    addLoc :: Int -> Int -> String -> [((Int, Int), Char)]
    addLoc _ _ [] = []
    addLoc row col (ch : chs) = if ch == '\n' then ((row, col), ch) : addLoc (row + 1) 1 chs else ((row, col), ch) : addLoc row (col + 1) chs
    runAladdinLexer_this :: [((Int, Int), Char)] -> Either (Int, Int) [Token]
    runAladdinLexer_this [] = return []
    runAladdinLexer_this str0 = do
        let return_one my_token = return [my_token]
        dfa_output <- runDFA theDFA str0
        (str1, piece) <- case dfa_output of
            ((_, []), _) -> Left (fst (head str0))
            ((Just label, accepted), rest) -> return (rest, ((label, map snd accepted), (fst (head accepted), fst (head (reverse accepted)))))
            _ -> Left (fst (head str0))
        tokens1 <- case piece of
            ((1, this), ((row1, col1), (row2, col2))) -> return_one (T_dot (SLoc (row1, col1) (row2, col2)))
            ((2, this), ((row1, col1), (row2, col2))) -> return_one (T_arrow (SLoc (row1, col1) (row2, col2)))
            ((3, this), ((row1, col1), (row2, col2))) -> return_one (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((4, this), ((row1, col1), (row2, col2))) -> return_one (T_lparen (SLoc (row1, col1) (row2, col2)))
            ((5, this), ((row1, col1), (row2, col2))) -> return_one (T_rparen (SLoc (row1, col1) (row2, col2)))
            ((6, this), ((row1, col1), (row2, col2))) -> return_one (T_lbracket (SLoc (row1, col1) (row2, col2)))
            ((7, this), ((row1, col1), (row2, col2))) -> return_one (T_rbracket (SLoc (row1, col1) (row2, col2)))
            ((8, this), ((row1, col1), (row2, col2))) -> return_one (T_quest (SLoc (row1, col1) (row2, col2)))
            ((9, this), ((row1, col1), (row2, col2))) -> return_one (T_comma (SLoc (row1, col1) (row2, col2)))
            ((10, this), ((row1, col1), (row2, col2))) -> return_one (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((11, this), ((row1, col1), (row2, col2))) -> return_one (T_if (SLoc (row1, col1) (row2, col2)))
            ((12, this), ((row1, col1), (row2, col2))) -> return_one (T_Eq (SLoc (row1, col1) (row2, col2)))
            ((13, this), ((row1, col1), (row2, col2))) -> return_one (T_succ (SLoc (row1, col1) (row2, col2)))
            ((14, this), ((row1, col1), (row2, col2))) -> return_one (T_pi (SLoc (row1, col1) (row2, col2)))
            ((15, this), ((row1, col1), (row2, col2))) -> return_one (T_sigma (SLoc (row1, col1) (row2, col2)))
            ((16, this), ((row1, col1), (row2, col2))) -> return_one (T_semicolon (SLoc (row1, col1) (row2, col2)))
            ((17, this), ((row1, col1), (row2, col2))) -> return_one (T_cut (SLoc (row1, col1) (row2, col2)))
            ((18, this), ((row1, col1), (row2, col2))) -> return_one (T_true (SLoc (row1, col1) (row2, col2)))
            ((19, this), ((row1, col1), (row2, col2))) -> return_one (T_fail (SLoc (row1, col1) (row2, col2)))
            ((20, this), ((row1, col1), (row2, col2))) -> return_one (T_debug (SLoc (row1, col1) (row2, col2)))
            ((21, this), ((row1, col1), (row2, col2))) -> return_one (T_bslash (SLoc (row1, col1) (row2, col2)))
            ((22, this), ((row1, col1), (row2, col2))) -> return_one (T_cons (SLoc (row1, col1) (row2, col2)))
            ((23, this), ((row1, col1), (row2, col2))) -> return_one (T_kind (SLoc (row1, col1) (row2, col2)))
            ((24, this), ((row1, col1), (row2, col2))) -> return_one (T_type (SLoc (row1, col1) (row2, col2)))
            ((25, this), ((row1, col1), (row2, col2))) -> return_one (T_smallid (SLoc (row1, col1) (row2, col2)) this)
            ((26, this), ((row1, col1), (row2, col2))) -> return_one (T_largeid (SLoc (row1, col1) (row2, col2)) this)
            ((27, this), ((row1, col1), (row2, col2))) -> return_one (T_nat_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((28, this), ((row1, col1), (row2, col2))) -> return_one (T_str_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((29, this), ((row1, col1), (row2, col2))) -> return_one (T_chr_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((30, this), ((row1, col1), (row2, col2))) -> return []
            ((31, this), ((row1, col1), (row2, col2))) -> return []
            ((32, this), ((row1, col1), (row2, col2))) -> return []
        tokens2 <- runAladdinLexer_this str1
        return (tokens1 ++ tokens2)
