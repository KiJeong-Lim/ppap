module Aladdin.Front.Analyzer.Lexer where

import Aladdin.Front.Analyzer.Grammar
import Aladdin.Front.Header
import qualified Control.Monad.Trans.State.Strict as XState
import qualified Data.Functor.Identity as XIdentity
import qualified Data.Map.Strict as XMap
import qualified Data.Set as XSet

-- the following codes are generated by LGS.

data DFA
    = DFA
        { getInitialQOfDFA :: Int
        , getFinalQsOfDFA :: XMap.Map Int Int
        , getTransitionsOfDFA :: XMap.Map (Int, Char) Int
        , getMarkedQsOfDFA :: XMap.Map Int (Bool, XSet.Set Int)
        , getPseudoFinalsOfDFA :: XSet.Set Int
        }
    deriving ()

runAladdinLexer :: String -> Either (Int, Int) [Token]
runAladdinLexer = runAladdinLexer_this . addLoc 1 1 where
    --  1: "(*" [. \ '*']* ("*" ([. \ ')'] [. \ '*']* "*")* [. \ ')'] [. \ '*']*)?
    --  2: "\'\\"
    --  3: "\"" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])* "\\"
    --  4: "\'"
    --  5: "\"" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])*
    --  6: "\'" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])
    --  7: "(*" [. \ '*']* "*" ([. \ ')'] [. \ '*']* "*")*
    --  8: "?"
    --  9: ":"
    -- 10: "-"
    -- 11: ""
    -- 12: "."
    -- 13: "->"
    -- 14: "=>"
    -- 15: "("
    -- 16: ")"
    -- 17: "["
    -- 18: "]"
    -- 19: "?-"
    -- 20: ","
    -- 21: ":-"
    -- 22: "="
    -- 23: "s"
    -- 24: "pi"
    -- 25: "sigma"
    -- 26: ";"
    -- 27: "!"
    -- 28: "true"
    -- 29: "fail"
    -- 30: "\\"
    -- 31: "::"
    -- 32: "kind"
    -- 33: "type"
    -- 34: "p"
    -- 35: "sig"
    -- 36: "si"
    -- 37: "ki"
    -- 38: "k"
    -- 39: "tr"
    -- 40: "ty"
    -- 41: "t"
    -- 42: "fa"
    -- 43: "f"
    -- 44: ['a'-'e' 'g'-'j' 'l'-'o' 'q'-'r' 'u'-'z'] + "s" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) + "si" (['0'-'9' 'A'-'Z' '_' 'a'-'f' 'h'-'z'] + "g" ['0'-'9' 'A'-'Z' '_' 'a'-'l' 'n'-'z']) + "k" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'m' 'o'-'z']) + "t" (['0'-'9' 'A'-'Z' '_' 'a'-'q' 's'-'x' 'z'] + "r" ['0'-'9' 'A'-'Z' '_' 'a'-'t' 'v'-'z'] + "y" ['0'-'9' 'A'-'Z' '_' 'a'-'o' 'q'-'z']) + "f" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z']) + (['a'-'e' 'g'-'j' 'l'-'o' 'q'-'r' 'u'-'z'] + "s" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) + "si" (['0'-'9' 'A'-'Z' '_' 'a'-'f' 'h'-'z'] + "g" ['0'-'9' 'A'-'Z' '_' 'a'-'l' 'n'-'z']) + "k" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'m' 'o'-'z']) + "t" (['0'-'9' 'A'-'Z' '_' 'a'-'q' 's'-'x' 'z'] + "r" ['0'-'9' 'A'-'Z' '_' 'a'-'t' 'v'-'z'] + "y" ['0'-'9' 'A'-'Z' '_' 'a'-'o' 'q'-'z']) + "f" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'])) ['0'-'9' 'A'-'Z' '_' 'a'-'z']* + "sigm" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "kin" (['0'-'9' 'A'-'Z' '_' 'a'-'c' 'e'-'z'] + "d" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'c' 'e'-'z'] + "d" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "tru" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "typ" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "fai" (['0'-'9' 'A'-'Z' '_' 'a'-'k' 'm'-'z'] + "l" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'k' 'm'-'z'] + "l" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*)
    -- 45: "sigm"
    -- 46: "kin"
    -- 47: "tru"
    -- 48: "typ"
    -- 49: "fai"
    -- 50: "_"
    -- 51: ['A'-'Z'] ['0'-'9' 'A'-'Z' '_' 'a'-'z']*
    -- 52: ['0'-'9']+
    -- 53: "\"" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])* "\""
    -- 54: "\'" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't']) "\'"
    -- 55: ['\n' ' ']+
    -- 56: "%" [. \ '\n']*
    -- 57: "(*" [. \ '*']* "*" ([. \ ')'] [. \ '*']* "*")* ")"
    theDFA :: DFA
    theDFA = DFA
        { getInitialQOfDFA = 11
        , getFinalQsOfDFA = XMap.fromAscList [(12, 1), (13, 2), (14, 3), (15, 4), (16, 5), (17, 6), (18, 7), (19, 8), (20, 9), (21, 11), (22, 12), (23, 13), (24, 14), (25, 15), (26, 16), (27, 17), (28, 18), (29, 19), (30, 20), (31, 21), (32, 22), (33, 23), (34, 24), (35, 24), (36, 24), (37, 24), (38, 24), (39, 24), (40, 24), (41, 24), (42, 24), (43, 24), (44, 24), (45, 24), (46, 24), (47, 24), (48, 24), (49, 24), (50, 25), (51, 25), (52, 26), (53, 27), (54, 28), (55, 29), (56, 30), (57, 31)]
        , getTransitionsOfDFA = XMap.fromAscList 
            [ ((1, '\n'), 1), ((1, ' '), 1), ((1, '!'), 1), ((1, '"'), 1), ((1, '#'), 1), ((1, '$'), 1), ((1, '%'), 1), ((1, '&'), 1), ((1, '\''), 1), ((1, '('), 1), ((1, ')'), 1), ((1, '*'), 7), ((1, '+'), 1), ((1, ','), 1), ((1, '-'), 1), ((1, '.'), 1), ((1, '/'), 1), ((1, '0'), 1), ((1, '1'), 1), ((1, '2'), 1), ((1, '3'), 1), ((1, '4'), 1), ((1, '5'), 1), ((1, '6'), 1), ((1, '7'), 1), ((1, '8'), 1), ((1, '9'), 1), ((1, ':'), 1), ((1, ';'), 1), ((1, '<'), 1), ((1, '='), 1), ((1, '>'), 1), ((1, '?'), 1), ((1, '@'), 1), ((1, 'A'), 1), ((1, 'B'), 1), ((1, 'C'), 1), ((1, 'D'), 1), ((1, 'E'), 1), ((1, 'F'), 1), ((1, 'G'), 1), ((1, 'H'), 1), ((1, 'I'), 1), ((1, 'J'), 1), ((1, 'K'), 1), ((1, 'L'), 1), ((1, 'M'), 1), ((1, 'N'), 1), ((1, 'O'), 1), ((1, 'P'), 1), ((1, 'Q'), 1), ((1, 'R'), 1), ((1, 'S'), 1), ((1, 'T'), 1), ((1, 'U'), 1), ((1, 'V'), 1), ((1, 'W'), 1), ((1, 'X'), 1), ((1, 'Y'), 1), ((1, 'Z'), 1), ((1, '['), 1), ((1, '\\'), 1), ((1, ']'), 1), ((1, '^'), 1), ((1, '_'), 1), ((1, '`'), 1), ((1, 'a'), 1), ((1, 'b'), 1), ((1, 'c'), 1), ((1, 'd'), 1), ((1, 'e'), 1), ((1, 'f'), 1), ((1, 'g'), 1), ((1, 'h'), 1), ((1, 'i'), 1), ((1, 'j'), 1), ((1, 'k'), 1), ((1, 'l'), 1), ((1, 'm'), 1), ((1, 'n'), 1), ((1, 'o'), 1), ((1, 'p'), 1), ((1, 'q'), 1), ((1, 'r'), 1), ((1, 's'), 1), ((1, 't'), 1), ((1, 'u'), 1), ((1, 'v'), 1), ((1, 'w'), 1), ((1, 'x'), 1), ((1, 'y'), 1), ((1, 'z'), 1), ((1, '{'), 1), ((1, '|'), 1), ((1, '}'), 1), ((1, '~'), 1)
            , ((2, '"'), 6), ((2, '\''), 6), ((2, '\\'), 6), ((2, 'n'), 6), ((2, 't'), 6)
            , ((3, '"'), 5), ((3, '\''), 5), ((3, '\\'), 5), ((3, 'n'), 5), ((3, 't'), 5)
            , ((4, ' '), 6), ((4, '!'), 6), ((4, '#'), 6), ((4, '$'), 6), ((4, '%'), 6), ((4, '&'), 6), ((4, '\''), 6), ((4, '('), 6), ((4, ')'), 6), ((4, '*'), 6), ((4, '+'), 6), ((4, ','), 6), ((4, '-'), 6), ((4, '.'), 6), ((4, '/'), 6), ((4, '0'), 6), ((4, '1'), 6), ((4, '2'), 6), ((4, '3'), 6), ((4, '4'), 6), ((4, '5'), 6), ((4, '6'), 6), ((4, '7'), 6), ((4, '8'), 6), ((4, '9'), 6), ((4, ':'), 6), ((4, ';'), 6), ((4, '<'), 6), ((4, '='), 6), ((4, '>'), 6), ((4, '?'), 6), ((4, '@'), 6), ((4, 'A'), 6), ((4, 'B'), 6), ((4, 'C'), 6), ((4, 'D'), 6), ((4, 'E'), 6), ((4, 'F'), 6), ((4, 'G'), 6), ((4, 'H'), 6), ((4, 'I'), 6), ((4, 'J'), 6), ((4, 'K'), 6), ((4, 'L'), 6), ((4, 'M'), 6), ((4, 'N'), 6), ((4, 'O'), 6), ((4, 'P'), 6), ((4, 'Q'), 6), ((4, 'R'), 6), ((4, 'S'), 6), ((4, 'T'), 6), ((4, 'U'), 6), ((4, 'V'), 6), ((4, 'W'), 6), ((4, 'X'), 6), ((4, 'Y'), 6), ((4, 'Z'), 6), ((4, '['), 6), ((4, '\\'), 2), ((4, ']'), 6), ((4, '^'), 6), ((4, '_'), 6), ((4, '`'), 6), ((4, 'a'), 6), ((4, 'b'), 6), ((4, 'c'), 6), ((4, 'd'), 6), ((4, 'e'), 6), ((4, 'f'), 6), ((4, 'g'), 6), ((4, 'h'), 6), ((4, 'i'), 6), ((4, 'j'), 6), ((4, 'k'), 6), ((4, 'l'), 6), ((4, 'm'), 6), ((4, 'n'), 6), ((4, 'o'), 6), ((4, 'p'), 6), ((4, 'q'), 6), ((4, 'r'), 6), ((4, 's'), 6), ((4, 't'), 6), ((4, 'u'), 6), ((4, 'v'), 6), ((4, 'w'), 6), ((4, 'x'), 6), ((4, 'y'), 6), ((4, 'z'), 6), ((4, '{'), 6), ((4, '|'), 6), ((4, '}'), 6), ((4, '~'), 6)
            , ((5, ' '), 5), ((5, '!'), 5), ((5, '"'), 53), ((5, '#'), 5), ((5, '$'), 5), ((5, '%'), 5), ((5, '&'), 5), ((5, '\''), 5), ((5, '('), 5), ((5, ')'), 5), ((5, '*'), 5), ((5, '+'), 5), ((5, ','), 5), ((5, '-'), 5), ((5, '.'), 5), ((5, '/'), 5), ((5, '0'), 5), ((5, '1'), 5), ((5, '2'), 5), ((5, '3'), 5), ((5, '4'), 5), ((5, '5'), 5), ((5, '6'), 5), ((5, '7'), 5), ((5, '8'), 5), ((5, '9'), 5), ((5, ':'), 5), ((5, ';'), 5), ((5, '<'), 5), ((5, '='), 5), ((5, '>'), 5), ((5, '?'), 5), ((5, '@'), 5), ((5, 'A'), 5), ((5, 'B'), 5), ((5, 'C'), 5), ((5, 'D'), 5), ((5, 'E'), 5), ((5, 'F'), 5), ((5, 'G'), 5), ((5, 'H'), 5), ((5, 'I'), 5), ((5, 'J'), 5), ((5, 'K'), 5), ((5, 'L'), 5), ((5, 'M'), 5), ((5, 'N'), 5), ((5, 'O'), 5), ((5, 'P'), 5), ((5, 'Q'), 5), ((5, 'R'), 5), ((5, 'S'), 5), ((5, 'T'), 5), ((5, 'U'), 5), ((5, 'V'), 5), ((5, 'W'), 5), ((5, 'X'), 5), ((5, 'Y'), 5), ((5, 'Z'), 5), ((5, '['), 5), ((5, '\\'), 3), ((5, ']'), 5), ((5, '^'), 5), ((5, '_'), 5), ((5, '`'), 5), ((5, 'a'), 5), ((5, 'b'), 5), ((5, 'c'), 5), ((5, 'd'), 5), ((5, 'e'), 5), ((5, 'f'), 5), ((5, 'g'), 5), ((5, 'h'), 5), ((5, 'i'), 5), ((5, 'j'), 5), ((5, 'k'), 5), ((5, 'l'), 5), ((5, 'm'), 5), ((5, 'n'), 5), ((5, 'o'), 5), ((5, 'p'), 5), ((5, 'q'), 5), ((5, 'r'), 5), ((5, 's'), 5), ((5, 't'), 5), ((5, 'u'), 5), ((5, 'v'), 5), ((5, 'w'), 5), ((5, 'x'), 5), ((5, 'y'), 5), ((5, 'z'), 5), ((5, '{'), 5), ((5, '|'), 5), ((5, '}'), 5), ((5, '~'), 5)
            , ((6, '\''), 54)
            , ((7, '\n'), 1), ((7, ' '), 1), ((7, '!'), 1), ((7, '"'), 1), ((7, '#'), 1), ((7, '$'), 1), ((7, '%'), 1), ((7, '&'), 1), ((7, '\''), 1), ((7, '('), 1), ((7, ')'), 57), ((7, '*'), 1), ((7, '+'), 1), ((7, ','), 1), ((7, '-'), 1), ((7, '.'), 1), ((7, '/'), 1), ((7, '0'), 1), ((7, '1'), 1), ((7, '2'), 1), ((7, '3'), 1), ((7, '4'), 1), ((7, '5'), 1), ((7, '6'), 1), ((7, '7'), 1), ((7, '8'), 1), ((7, '9'), 1), ((7, ':'), 1), ((7, ';'), 1), ((7, '<'), 1), ((7, '='), 1), ((7, '>'), 1), ((7, '?'), 1), ((7, '@'), 1), ((7, 'A'), 1), ((7, 'B'), 1), ((7, 'C'), 1), ((7, 'D'), 1), ((7, 'E'), 1), ((7, 'F'), 1), ((7, 'G'), 1), ((7, 'H'), 1), ((7, 'I'), 1), ((7, 'J'), 1), ((7, 'K'), 1), ((7, 'L'), 1), ((7, 'M'), 1), ((7, 'N'), 1), ((7, 'O'), 1), ((7, 'P'), 1), ((7, 'Q'), 1), ((7, 'R'), 1), ((7, 'S'), 1), ((7, 'T'), 1), ((7, 'U'), 1), ((7, 'V'), 1), ((7, 'W'), 1), ((7, 'X'), 1), ((7, 'Y'), 1), ((7, 'Z'), 1), ((7, '['), 1), ((7, '\\'), 1), ((7, ']'), 1), ((7, '^'), 1), ((7, '_'), 1), ((7, '`'), 1), ((7, 'a'), 1), ((7, 'b'), 1), ((7, 'c'), 1), ((7, 'd'), 1), ((7, 'e'), 1), ((7, 'f'), 1), ((7, 'g'), 1), ((7, 'h'), 1), ((7, 'i'), 1), ((7, 'j'), 1), ((7, 'k'), 1), ((7, 'l'), 1), ((7, 'm'), 1), ((7, 'n'), 1), ((7, 'o'), 1), ((7, 'p'), 1), ((7, 'q'), 1), ((7, 'r'), 1), ((7, 's'), 1), ((7, 't'), 1), ((7, 'u'), 1), ((7, 'v'), 1), ((7, 'w'), 1), ((7, 'x'), 1), ((7, 'y'), 1), ((7, 'z'), 1), ((7, '{'), 1), ((7, '|'), 1), ((7, '}'), 1), ((7, '~'), 1)
            , ((8, '-'), 19)
            , ((9, '-'), 21), ((9, ':'), 31)
            , ((10, '>'), 13)
            , ((11, '\n'), 55), ((11, ' '), 55), ((11, '!'), 27), ((11, '"'), 5), ((11, '%'), 56), ((11, '\''), 4), ((11, '('), 15), ((11, ')'), 16), ((11, ','), 20), ((11, '-'), 10), ((11, '.'), 12), ((11, '0'), 52), ((11, '1'), 52), ((11, '2'), 52), ((11, '3'), 52), ((11, '4'), 52), ((11, '5'), 52), ((11, '6'), 52), ((11, '7'), 52), ((11, '8'), 52), ((11, '9'), 52), ((11, ':'), 9), ((11, ';'), 26), ((11, '='), 22), ((11, '?'), 8), ((11, 'A'), 51), ((11, 'B'), 51), ((11, 'C'), 51), ((11, 'D'), 51), ((11, 'E'), 51), ((11, 'F'), 51), ((11, 'G'), 51), ((11, 'H'), 51), ((11, 'I'), 51), ((11, 'J'), 51), ((11, 'K'), 51), ((11, 'L'), 51), ((11, 'M'), 51), ((11, 'N'), 51), ((11, 'O'), 51), ((11, 'P'), 51), ((11, 'Q'), 51), ((11, 'R'), 51), ((11, 'S'), 51), ((11, 'T'), 51), ((11, 'U'), 51), ((11, 'V'), 51), ((11, 'W'), 51), ((11, 'X'), 51), ((11, 'Y'), 51), ((11, 'Z'), 51), ((11, '['), 17), ((11, '\\'), 30), ((11, ']'), 18), ((11, '_'), 50), ((11, 'a'), 44), ((11, 'b'), 44), ((11, 'c'), 44), ((11, 'd'), 44), ((11, 'e'), 44), ((11, 'f'), 43), ((11, 'g'), 44), ((11, 'h'), 44), ((11, 'i'), 44), ((11, 'j'), 44), ((11, 'k'), 38), ((11, 'l'), 44), ((11, 'm'), 44), ((11, 'n'), 44), ((11, 'o'), 44), ((11, 'p'), 34), ((11, 'q'), 44), ((11, 'r'), 44), ((11, 's'), 23), ((11, 't'), 41), ((11, 'u'), 44), ((11, 'v'), 44), ((11, 'w'), 44), ((11, 'x'), 44), ((11, 'y'), 44), ((11, 'z'), 44)
            , ((15, '*'), 1)
            , ((22, '>'), 14)
            , ((23, '0'), 44), ((23, '1'), 44), ((23, '2'), 44), ((23, '3'), 44), ((23, '4'), 44), ((23, '5'), 44), ((23, '6'), 44), ((23, '7'), 44), ((23, '8'), 44), ((23, '9'), 44), ((23, 'A'), 44), ((23, 'B'), 44), ((23, 'C'), 44), ((23, 'D'), 44), ((23, 'E'), 44), ((23, 'F'), 44), ((23, 'G'), 44), ((23, 'H'), 44), ((23, 'I'), 44), ((23, 'J'), 44), ((23, 'K'), 44), ((23, 'L'), 44), ((23, 'M'), 44), ((23, 'N'), 44), ((23, 'O'), 44), ((23, 'P'), 44), ((23, 'Q'), 44), ((23, 'R'), 44), ((23, 'S'), 44), ((23, 'T'), 44), ((23, 'U'), 44), ((23, 'V'), 44), ((23, 'W'), 44), ((23, 'X'), 44), ((23, 'Y'), 44), ((23, 'Z'), 44), ((23, '_'), 44), ((23, 'a'), 44), ((23, 'b'), 44), ((23, 'c'), 44), ((23, 'd'), 44), ((23, 'e'), 44), ((23, 'f'), 44), ((23, 'g'), 44), ((23, 'h'), 44), ((23, 'i'), 36), ((23, 'j'), 44), ((23, 'k'), 44), ((23, 'l'), 44), ((23, 'm'), 44), ((23, 'n'), 44), ((23, 'o'), 44), ((23, 'p'), 44), ((23, 'q'), 44), ((23, 'r'), 44), ((23, 's'), 44), ((23, 't'), 44), ((23, 'u'), 44), ((23, 'v'), 44), ((23, 'w'), 44), ((23, 'x'), 44), ((23, 'y'), 44), ((23, 'z'), 44)
            , ((24, '0'), 44), ((24, '1'), 44), ((24, '2'), 44), ((24, '3'), 44), ((24, '4'), 44), ((24, '5'), 44), ((24, '6'), 44), ((24, '7'), 44), ((24, '8'), 44), ((24, '9'), 44), ((24, 'A'), 44), ((24, 'B'), 44), ((24, 'C'), 44), ((24, 'D'), 44), ((24, 'E'), 44), ((24, 'F'), 44), ((24, 'G'), 44), ((24, 'H'), 44), ((24, 'I'), 44), ((24, 'J'), 44), ((24, 'K'), 44), ((24, 'L'), 44), ((24, 'M'), 44), ((24, 'N'), 44), ((24, 'O'), 44), ((24, 'P'), 44), ((24, 'Q'), 44), ((24, 'R'), 44), ((24, 'S'), 44), ((24, 'T'), 44), ((24, 'U'), 44), ((24, 'V'), 44), ((24, 'W'), 44), ((24, 'X'), 44), ((24, 'Y'), 44), ((24, 'Z'), 44), ((24, '_'), 44), ((24, 'a'), 44), ((24, 'b'), 44), ((24, 'c'), 44), ((24, 'd'), 44), ((24, 'e'), 44), ((24, 'f'), 44), ((24, 'g'), 44), ((24, 'h'), 44), ((24, 'i'), 44), ((24, 'j'), 44), ((24, 'k'), 44), ((24, 'l'), 44), ((24, 'm'), 44), ((24, 'n'), 44), ((24, 'o'), 44), ((24, 'p'), 44), ((24, 'q'), 44), ((24, 'r'), 44), ((24, 's'), 44), ((24, 't'), 44), ((24, 'u'), 44), ((24, 'v'), 44), ((24, 'w'), 44), ((24, 'x'), 44), ((24, 'y'), 44), ((24, 'z'), 44)
            , ((25, '0'), 44), ((25, '1'), 44), ((25, '2'), 44), ((25, '3'), 44), ((25, '4'), 44), ((25, '5'), 44), ((25, '6'), 44), ((25, '7'), 44), ((25, '8'), 44), ((25, '9'), 44), ((25, 'A'), 44), ((25, 'B'), 44), ((25, 'C'), 44), ((25, 'D'), 44), ((25, 'E'), 44), ((25, 'F'), 44), ((25, 'G'), 44), ((25, 'H'), 44), ((25, 'I'), 44), ((25, 'J'), 44), ((25, 'K'), 44), ((25, 'L'), 44), ((25, 'M'), 44), ((25, 'N'), 44), ((25, 'O'), 44), ((25, 'P'), 44), ((25, 'Q'), 44), ((25, 'R'), 44), ((25, 'S'), 44), ((25, 'T'), 44), ((25, 'U'), 44), ((25, 'V'), 44), ((25, 'W'), 44), ((25, 'X'), 44), ((25, 'Y'), 44), ((25, 'Z'), 44), ((25, '_'), 44), ((25, 'a'), 44), ((25, 'b'), 44), ((25, 'c'), 44), ((25, 'd'), 44), ((25, 'e'), 44), ((25, 'f'), 44), ((25, 'g'), 44), ((25, 'h'), 44), ((25, 'i'), 44), ((25, 'j'), 44), ((25, 'k'), 44), ((25, 'l'), 44), ((25, 'm'), 44), ((25, 'n'), 44), ((25, 'o'), 44), ((25, 'p'), 44), ((25, 'q'), 44), ((25, 'r'), 44), ((25, 's'), 44), ((25, 't'), 44), ((25, 'u'), 44), ((25, 'v'), 44), ((25, 'w'), 44), ((25, 'x'), 44), ((25, 'y'), 44), ((25, 'z'), 44)
            , ((28, '0'), 44), ((28, '1'), 44), ((28, '2'), 44), ((28, '3'), 44), ((28, '4'), 44), ((28, '5'), 44), ((28, '6'), 44), ((28, '7'), 44), ((28, '8'), 44), ((28, '9'), 44), ((28, 'A'), 44), ((28, 'B'), 44), ((28, 'C'), 44), ((28, 'D'), 44), ((28, 'E'), 44), ((28, 'F'), 44), ((28, 'G'), 44), ((28, 'H'), 44), ((28, 'I'), 44), ((28, 'J'), 44), ((28, 'K'), 44), ((28, 'L'), 44), ((28, 'M'), 44), ((28, 'N'), 44), ((28, 'O'), 44), ((28, 'P'), 44), ((28, 'Q'), 44), ((28, 'R'), 44), ((28, 'S'), 44), ((28, 'T'), 44), ((28, 'U'), 44), ((28, 'V'), 44), ((28, 'W'), 44), ((28, 'X'), 44), ((28, 'Y'), 44), ((28, 'Z'), 44), ((28, '_'), 44), ((28, 'a'), 44), ((28, 'b'), 44), ((28, 'c'), 44), ((28, 'd'), 44), ((28, 'e'), 44), ((28, 'f'), 44), ((28, 'g'), 44), ((28, 'h'), 44), ((28, 'i'), 44), ((28, 'j'), 44), ((28, 'k'), 44), ((28, 'l'), 44), ((28, 'm'), 44), ((28, 'n'), 44), ((28, 'o'), 44), ((28, 'p'), 44), ((28, 'q'), 44), ((28, 'r'), 44), ((28, 's'), 44), ((28, 't'), 44), ((28, 'u'), 44), ((28, 'v'), 44), ((28, 'w'), 44), ((28, 'x'), 44), ((28, 'y'), 44), ((28, 'z'), 44)
            , ((29, '0'), 44), ((29, '1'), 44), ((29, '2'), 44), ((29, '3'), 44), ((29, '4'), 44), ((29, '5'), 44), ((29, '6'), 44), ((29, '7'), 44), ((29, '8'), 44), ((29, '9'), 44), ((29, 'A'), 44), ((29, 'B'), 44), ((29, 'C'), 44), ((29, 'D'), 44), ((29, 'E'), 44), ((29, 'F'), 44), ((29, 'G'), 44), ((29, 'H'), 44), ((29, 'I'), 44), ((29, 'J'), 44), ((29, 'K'), 44), ((29, 'L'), 44), ((29, 'M'), 44), ((29, 'N'), 44), ((29, 'O'), 44), ((29, 'P'), 44), ((29, 'Q'), 44), ((29, 'R'), 44), ((29, 'S'), 44), ((29, 'T'), 44), ((29, 'U'), 44), ((29, 'V'), 44), ((29, 'W'), 44), ((29, 'X'), 44), ((29, 'Y'), 44), ((29, 'Z'), 44), ((29, '_'), 44), ((29, 'a'), 44), ((29, 'b'), 44), ((29, 'c'), 44), ((29, 'd'), 44), ((29, 'e'), 44), ((29, 'f'), 44), ((29, 'g'), 44), ((29, 'h'), 44), ((29, 'i'), 44), ((29, 'j'), 44), ((29, 'k'), 44), ((29, 'l'), 44), ((29, 'm'), 44), ((29, 'n'), 44), ((29, 'o'), 44), ((29, 'p'), 44), ((29, 'q'), 44), ((29, 'r'), 44), ((29, 's'), 44), ((29, 't'), 44), ((29, 'u'), 44), ((29, 'v'), 44), ((29, 'w'), 44), ((29, 'x'), 44), ((29, 'y'), 44), ((29, 'z'), 44)
            , ((32, '0'), 44), ((32, '1'), 44), ((32, '2'), 44), ((32, '3'), 44), ((32, '4'), 44), ((32, '5'), 44), ((32, '6'), 44), ((32, '7'), 44), ((32, '8'), 44), ((32, '9'), 44), ((32, 'A'), 44), ((32, 'B'), 44), ((32, 'C'), 44), ((32, 'D'), 44), ((32, 'E'), 44), ((32, 'F'), 44), ((32, 'G'), 44), ((32, 'H'), 44), ((32, 'I'), 44), ((32, 'J'), 44), ((32, 'K'), 44), ((32, 'L'), 44), ((32, 'M'), 44), ((32, 'N'), 44), ((32, 'O'), 44), ((32, 'P'), 44), ((32, 'Q'), 44), ((32, 'R'), 44), ((32, 'S'), 44), ((32, 'T'), 44), ((32, 'U'), 44), ((32, 'V'), 44), ((32, 'W'), 44), ((32, 'X'), 44), ((32, 'Y'), 44), ((32, 'Z'), 44), ((32, '_'), 44), ((32, 'a'), 44), ((32, 'b'), 44), ((32, 'c'), 44), ((32, 'd'), 44), ((32, 'e'), 44), ((32, 'f'), 44), ((32, 'g'), 44), ((32, 'h'), 44), ((32, 'i'), 44), ((32, 'j'), 44), ((32, 'k'), 44), ((32, 'l'), 44), ((32, 'm'), 44), ((32, 'n'), 44), ((32, 'o'), 44), ((32, 'p'), 44), ((32, 'q'), 44), ((32, 'r'), 44), ((32, 's'), 44), ((32, 't'), 44), ((32, 'u'), 44), ((32, 'v'), 44), ((32, 'w'), 44), ((32, 'x'), 44), ((32, 'y'), 44), ((32, 'z'), 44)
            , ((33, '0'), 44), ((33, '1'), 44), ((33, '2'), 44), ((33, '3'), 44), ((33, '4'), 44), ((33, '5'), 44), ((33, '6'), 44), ((33, '7'), 44), ((33, '8'), 44), ((33, '9'), 44), ((33, 'A'), 44), ((33, 'B'), 44), ((33, 'C'), 44), ((33, 'D'), 44), ((33, 'E'), 44), ((33, 'F'), 44), ((33, 'G'), 44), ((33, 'H'), 44), ((33, 'I'), 44), ((33, 'J'), 44), ((33, 'K'), 44), ((33, 'L'), 44), ((33, 'M'), 44), ((33, 'N'), 44), ((33, 'O'), 44), ((33, 'P'), 44), ((33, 'Q'), 44), ((33, 'R'), 44), ((33, 'S'), 44), ((33, 'T'), 44), ((33, 'U'), 44), ((33, 'V'), 44), ((33, 'W'), 44), ((33, 'X'), 44), ((33, 'Y'), 44), ((33, 'Z'), 44), ((33, '_'), 44), ((33, 'a'), 44), ((33, 'b'), 44), ((33, 'c'), 44), ((33, 'd'), 44), ((33, 'e'), 44), ((33, 'f'), 44), ((33, 'g'), 44), ((33, 'h'), 44), ((33, 'i'), 44), ((33, 'j'), 44), ((33, 'k'), 44), ((33, 'l'), 44), ((33, 'm'), 44), ((33, 'n'), 44), ((33, 'o'), 44), ((33, 'p'), 44), ((33, 'q'), 44), ((33, 'r'), 44), ((33, 's'), 44), ((33, 't'), 44), ((33, 'u'), 44), ((33, 'v'), 44), ((33, 'w'), 44), ((33, 'x'), 44), ((33, 'y'), 44), ((33, 'z'), 44)
            , ((34, '0'), 44), ((34, '1'), 44), ((34, '2'), 44), ((34, '3'), 44), ((34, '4'), 44), ((34, '5'), 44), ((34, '6'), 44), ((34, '7'), 44), ((34, '8'), 44), ((34, '9'), 44), ((34, 'A'), 44), ((34, 'B'), 44), ((34, 'C'), 44), ((34, 'D'), 44), ((34, 'E'), 44), ((34, 'F'), 44), ((34, 'G'), 44), ((34, 'H'), 44), ((34, 'I'), 44), ((34, 'J'), 44), ((34, 'K'), 44), ((34, 'L'), 44), ((34, 'M'), 44), ((34, 'N'), 44), ((34, 'O'), 44), ((34, 'P'), 44), ((34, 'Q'), 44), ((34, 'R'), 44), ((34, 'S'), 44), ((34, 'T'), 44), ((34, 'U'), 44), ((34, 'V'), 44), ((34, 'W'), 44), ((34, 'X'), 44), ((34, 'Y'), 44), ((34, 'Z'), 44), ((34, '_'), 44), ((34, 'a'), 44), ((34, 'b'), 44), ((34, 'c'), 44), ((34, 'd'), 44), ((34, 'e'), 44), ((34, 'f'), 44), ((34, 'g'), 44), ((34, 'h'), 44), ((34, 'i'), 24), ((34, 'j'), 44), ((34, 'k'), 44), ((34, 'l'), 44), ((34, 'm'), 44), ((34, 'n'), 44), ((34, 'o'), 44), ((34, 'p'), 44), ((34, 'q'), 44), ((34, 'r'), 44), ((34, 's'), 44), ((34, 't'), 44), ((34, 'u'), 44), ((34, 'v'), 44), ((34, 'w'), 44), ((34, 'x'), 44), ((34, 'y'), 44), ((34, 'z'), 44)
            , ((35, '0'), 44), ((35, '1'), 44), ((35, '2'), 44), ((35, '3'), 44), ((35, '4'), 44), ((35, '5'), 44), ((35, '6'), 44), ((35, '7'), 44), ((35, '8'), 44), ((35, '9'), 44), ((35, 'A'), 44), ((35, 'B'), 44), ((35, 'C'), 44), ((35, 'D'), 44), ((35, 'E'), 44), ((35, 'F'), 44), ((35, 'G'), 44), ((35, 'H'), 44), ((35, 'I'), 44), ((35, 'J'), 44), ((35, 'K'), 44), ((35, 'L'), 44), ((35, 'M'), 44), ((35, 'N'), 44), ((35, 'O'), 44), ((35, 'P'), 44), ((35, 'Q'), 44), ((35, 'R'), 44), ((35, 'S'), 44), ((35, 'T'), 44), ((35, 'U'), 44), ((35, 'V'), 44), ((35, 'W'), 44), ((35, 'X'), 44), ((35, 'Y'), 44), ((35, 'Z'), 44), ((35, '_'), 44), ((35, 'a'), 44), ((35, 'b'), 44), ((35, 'c'), 44), ((35, 'd'), 44), ((35, 'e'), 44), ((35, 'f'), 44), ((35, 'g'), 44), ((35, 'h'), 44), ((35, 'i'), 44), ((35, 'j'), 44), ((35, 'k'), 44), ((35, 'l'), 44), ((35, 'm'), 45), ((35, 'n'), 44), ((35, 'o'), 44), ((35, 'p'), 44), ((35, 'q'), 44), ((35, 'r'), 44), ((35, 's'), 44), ((35, 't'), 44), ((35, 'u'), 44), ((35, 'v'), 44), ((35, 'w'), 44), ((35, 'x'), 44), ((35, 'y'), 44), ((35, 'z'), 44)
            , ((36, '0'), 44), ((36, '1'), 44), ((36, '2'), 44), ((36, '3'), 44), ((36, '4'), 44), ((36, '5'), 44), ((36, '6'), 44), ((36, '7'), 44), ((36, '8'), 44), ((36, '9'), 44), ((36, 'A'), 44), ((36, 'B'), 44), ((36, 'C'), 44), ((36, 'D'), 44), ((36, 'E'), 44), ((36, 'F'), 44), ((36, 'G'), 44), ((36, 'H'), 44), ((36, 'I'), 44), ((36, 'J'), 44), ((36, 'K'), 44), ((36, 'L'), 44), ((36, 'M'), 44), ((36, 'N'), 44), ((36, 'O'), 44), ((36, 'P'), 44), ((36, 'Q'), 44), ((36, 'R'), 44), ((36, 'S'), 44), ((36, 'T'), 44), ((36, 'U'), 44), ((36, 'V'), 44), ((36, 'W'), 44), ((36, 'X'), 44), ((36, 'Y'), 44), ((36, 'Z'), 44), ((36, '_'), 44), ((36, 'a'), 44), ((36, 'b'), 44), ((36, 'c'), 44), ((36, 'd'), 44), ((36, 'e'), 44), ((36, 'f'), 44), ((36, 'g'), 35), ((36, 'h'), 44), ((36, 'i'), 44), ((36, 'j'), 44), ((36, 'k'), 44), ((36, 'l'), 44), ((36, 'm'), 44), ((36, 'n'), 44), ((36, 'o'), 44), ((36, 'p'), 44), ((36, 'q'), 44), ((36, 'r'), 44), ((36, 's'), 44), ((36, 't'), 44), ((36, 'u'), 44), ((36, 'v'), 44), ((36, 'w'), 44), ((36, 'x'), 44), ((36, 'y'), 44), ((36, 'z'), 44)
            , ((37, '0'), 44), ((37, '1'), 44), ((37, '2'), 44), ((37, '3'), 44), ((37, '4'), 44), ((37, '5'), 44), ((37, '6'), 44), ((37, '7'), 44), ((37, '8'), 44), ((37, '9'), 44), ((37, 'A'), 44), ((37, 'B'), 44), ((37, 'C'), 44), ((37, 'D'), 44), ((37, 'E'), 44), ((37, 'F'), 44), ((37, 'G'), 44), ((37, 'H'), 44), ((37, 'I'), 44), ((37, 'J'), 44), ((37, 'K'), 44), ((37, 'L'), 44), ((37, 'M'), 44), ((37, 'N'), 44), ((37, 'O'), 44), ((37, 'P'), 44), ((37, 'Q'), 44), ((37, 'R'), 44), ((37, 'S'), 44), ((37, 'T'), 44), ((37, 'U'), 44), ((37, 'V'), 44), ((37, 'W'), 44), ((37, 'X'), 44), ((37, 'Y'), 44), ((37, 'Z'), 44), ((37, '_'), 44), ((37, 'a'), 44), ((37, 'b'), 44), ((37, 'c'), 44), ((37, 'd'), 44), ((37, 'e'), 44), ((37, 'f'), 44), ((37, 'g'), 44), ((37, 'h'), 44), ((37, 'i'), 44), ((37, 'j'), 44), ((37, 'k'), 44), ((37, 'l'), 44), ((37, 'm'), 44), ((37, 'n'), 46), ((37, 'o'), 44), ((37, 'p'), 44), ((37, 'q'), 44), ((37, 'r'), 44), ((37, 's'), 44), ((37, 't'), 44), ((37, 'u'), 44), ((37, 'v'), 44), ((37, 'w'), 44), ((37, 'x'), 44), ((37, 'y'), 44), ((37, 'z'), 44)
            , ((38, '0'), 44), ((38, '1'), 44), ((38, '2'), 44), ((38, '3'), 44), ((38, '4'), 44), ((38, '5'), 44), ((38, '6'), 44), ((38, '7'), 44), ((38, '8'), 44), ((38, '9'), 44), ((38, 'A'), 44), ((38, 'B'), 44), ((38, 'C'), 44), ((38, 'D'), 44), ((38, 'E'), 44), ((38, 'F'), 44), ((38, 'G'), 44), ((38, 'H'), 44), ((38, 'I'), 44), ((38, 'J'), 44), ((38, 'K'), 44), ((38, 'L'), 44), ((38, 'M'), 44), ((38, 'N'), 44), ((38, 'O'), 44), ((38, 'P'), 44), ((38, 'Q'), 44), ((38, 'R'), 44), ((38, 'S'), 44), ((38, 'T'), 44), ((38, 'U'), 44), ((38, 'V'), 44), ((38, 'W'), 44), ((38, 'X'), 44), ((38, 'Y'), 44), ((38, 'Z'), 44), ((38, '_'), 44), ((38, 'a'), 44), ((38, 'b'), 44), ((38, 'c'), 44), ((38, 'd'), 44), ((38, 'e'), 44), ((38, 'f'), 44), ((38, 'g'), 44), ((38, 'h'), 44), ((38, 'i'), 37), ((38, 'j'), 44), ((38, 'k'), 44), ((38, 'l'), 44), ((38, 'm'), 44), ((38, 'n'), 44), ((38, 'o'), 44), ((38, 'p'), 44), ((38, 'q'), 44), ((38, 'r'), 44), ((38, 's'), 44), ((38, 't'), 44), ((38, 'u'), 44), ((38, 'v'), 44), ((38, 'w'), 44), ((38, 'x'), 44), ((38, 'y'), 44), ((38, 'z'), 44)
            , ((39, '0'), 44), ((39, '1'), 44), ((39, '2'), 44), ((39, '3'), 44), ((39, '4'), 44), ((39, '5'), 44), ((39, '6'), 44), ((39, '7'), 44), ((39, '8'), 44), ((39, '9'), 44), ((39, 'A'), 44), ((39, 'B'), 44), ((39, 'C'), 44), ((39, 'D'), 44), ((39, 'E'), 44), ((39, 'F'), 44), ((39, 'G'), 44), ((39, 'H'), 44), ((39, 'I'), 44), ((39, 'J'), 44), ((39, 'K'), 44), ((39, 'L'), 44), ((39, 'M'), 44), ((39, 'N'), 44), ((39, 'O'), 44), ((39, 'P'), 44), ((39, 'Q'), 44), ((39, 'R'), 44), ((39, 'S'), 44), ((39, 'T'), 44), ((39, 'U'), 44), ((39, 'V'), 44), ((39, 'W'), 44), ((39, 'X'), 44), ((39, 'Y'), 44), ((39, 'Z'), 44), ((39, '_'), 44), ((39, 'a'), 44), ((39, 'b'), 44), ((39, 'c'), 44), ((39, 'd'), 44), ((39, 'e'), 44), ((39, 'f'), 44), ((39, 'g'), 44), ((39, 'h'), 44), ((39, 'i'), 44), ((39, 'j'), 44), ((39, 'k'), 44), ((39, 'l'), 44), ((39, 'm'), 44), ((39, 'n'), 44), ((39, 'o'), 44), ((39, 'p'), 44), ((39, 'q'), 44), ((39, 'r'), 44), ((39, 's'), 44), ((39, 't'), 44), ((39, 'u'), 47), ((39, 'v'), 44), ((39, 'w'), 44), ((39, 'x'), 44), ((39, 'y'), 44), ((39, 'z'), 44)
            , ((40, '0'), 44), ((40, '1'), 44), ((40, '2'), 44), ((40, '3'), 44), ((40, '4'), 44), ((40, '5'), 44), ((40, '6'), 44), ((40, '7'), 44), ((40, '8'), 44), ((40, '9'), 44), ((40, 'A'), 44), ((40, 'B'), 44), ((40, 'C'), 44), ((40, 'D'), 44), ((40, 'E'), 44), ((40, 'F'), 44), ((40, 'G'), 44), ((40, 'H'), 44), ((40, 'I'), 44), ((40, 'J'), 44), ((40, 'K'), 44), ((40, 'L'), 44), ((40, 'M'), 44), ((40, 'N'), 44), ((40, 'O'), 44), ((40, 'P'), 44), ((40, 'Q'), 44), ((40, 'R'), 44), ((40, 'S'), 44), ((40, 'T'), 44), ((40, 'U'), 44), ((40, 'V'), 44), ((40, 'W'), 44), ((40, 'X'), 44), ((40, 'Y'), 44), ((40, 'Z'), 44), ((40, '_'), 44), ((40, 'a'), 44), ((40, 'b'), 44), ((40, 'c'), 44), ((40, 'd'), 44), ((40, 'e'), 44), ((40, 'f'), 44), ((40, 'g'), 44), ((40, 'h'), 44), ((40, 'i'), 44), ((40, 'j'), 44), ((40, 'k'), 44), ((40, 'l'), 44), ((40, 'm'), 44), ((40, 'n'), 44), ((40, 'o'), 44), ((40, 'p'), 48), ((40, 'q'), 44), ((40, 'r'), 44), ((40, 's'), 44), ((40, 't'), 44), ((40, 'u'), 44), ((40, 'v'), 44), ((40, 'w'), 44), ((40, 'x'), 44), ((40, 'y'), 44), ((40, 'z'), 44)
            , ((41, '0'), 44), ((41, '1'), 44), ((41, '2'), 44), ((41, '3'), 44), ((41, '4'), 44), ((41, '5'), 44), ((41, '6'), 44), ((41, '7'), 44), ((41, '8'), 44), ((41, '9'), 44), ((41, 'A'), 44), ((41, 'B'), 44), ((41, 'C'), 44), ((41, 'D'), 44), ((41, 'E'), 44), ((41, 'F'), 44), ((41, 'G'), 44), ((41, 'H'), 44), ((41, 'I'), 44), ((41, 'J'), 44), ((41, 'K'), 44), ((41, 'L'), 44), ((41, 'M'), 44), ((41, 'N'), 44), ((41, 'O'), 44), ((41, 'P'), 44), ((41, 'Q'), 44), ((41, 'R'), 44), ((41, 'S'), 44), ((41, 'T'), 44), ((41, 'U'), 44), ((41, 'V'), 44), ((41, 'W'), 44), ((41, 'X'), 44), ((41, 'Y'), 44), ((41, 'Z'), 44), ((41, '_'), 44), ((41, 'a'), 44), ((41, 'b'), 44), ((41, 'c'), 44), ((41, 'd'), 44), ((41, 'e'), 44), ((41, 'f'), 44), ((41, 'g'), 44), ((41, 'h'), 44), ((41, 'i'), 44), ((41, 'j'), 44), ((41, 'k'), 44), ((41, 'l'), 44), ((41, 'm'), 44), ((41, 'n'), 44), ((41, 'o'), 44), ((41, 'p'), 44), ((41, 'q'), 44), ((41, 'r'), 39), ((41, 's'), 44), ((41, 't'), 44), ((41, 'u'), 44), ((41, 'v'), 44), ((41, 'w'), 44), ((41, 'x'), 44), ((41, 'y'), 40), ((41, 'z'), 44)
            , ((42, '0'), 44), ((42, '1'), 44), ((42, '2'), 44), ((42, '3'), 44), ((42, '4'), 44), ((42, '5'), 44), ((42, '6'), 44), ((42, '7'), 44), ((42, '8'), 44), ((42, '9'), 44), ((42, 'A'), 44), ((42, 'B'), 44), ((42, 'C'), 44), ((42, 'D'), 44), ((42, 'E'), 44), ((42, 'F'), 44), ((42, 'G'), 44), ((42, 'H'), 44), ((42, 'I'), 44), ((42, 'J'), 44), ((42, 'K'), 44), ((42, 'L'), 44), ((42, 'M'), 44), ((42, 'N'), 44), ((42, 'O'), 44), ((42, 'P'), 44), ((42, 'Q'), 44), ((42, 'R'), 44), ((42, 'S'), 44), ((42, 'T'), 44), ((42, 'U'), 44), ((42, 'V'), 44), ((42, 'W'), 44), ((42, 'X'), 44), ((42, 'Y'), 44), ((42, 'Z'), 44), ((42, '_'), 44), ((42, 'a'), 44), ((42, 'b'), 44), ((42, 'c'), 44), ((42, 'd'), 44), ((42, 'e'), 44), ((42, 'f'), 44), ((42, 'g'), 44), ((42, 'h'), 44), ((42, 'i'), 49), ((42, 'j'), 44), ((42, 'k'), 44), ((42, 'l'), 44), ((42, 'm'), 44), ((42, 'n'), 44), ((42, 'o'), 44), ((42, 'p'), 44), ((42, 'q'), 44), ((42, 'r'), 44), ((42, 's'), 44), ((42, 't'), 44), ((42, 'u'), 44), ((42, 'v'), 44), ((42, 'w'), 44), ((42, 'x'), 44), ((42, 'y'), 44), ((42, 'z'), 44)
            , ((43, '0'), 44), ((43, '1'), 44), ((43, '2'), 44), ((43, '3'), 44), ((43, '4'), 44), ((43, '5'), 44), ((43, '6'), 44), ((43, '7'), 44), ((43, '8'), 44), ((43, '9'), 44), ((43, 'A'), 44), ((43, 'B'), 44), ((43, 'C'), 44), ((43, 'D'), 44), ((43, 'E'), 44), ((43, 'F'), 44), ((43, 'G'), 44), ((43, 'H'), 44), ((43, 'I'), 44), ((43, 'J'), 44), ((43, 'K'), 44), ((43, 'L'), 44), ((43, 'M'), 44), ((43, 'N'), 44), ((43, 'O'), 44), ((43, 'P'), 44), ((43, 'Q'), 44), ((43, 'R'), 44), ((43, 'S'), 44), ((43, 'T'), 44), ((43, 'U'), 44), ((43, 'V'), 44), ((43, 'W'), 44), ((43, 'X'), 44), ((43, 'Y'), 44), ((43, 'Z'), 44), ((43, '_'), 44), ((43, 'a'), 42), ((43, 'b'), 44), ((43, 'c'), 44), ((43, 'd'), 44), ((43, 'e'), 44), ((43, 'f'), 44), ((43, 'g'), 44), ((43, 'h'), 44), ((43, 'i'), 44), ((43, 'j'), 44), ((43, 'k'), 44), ((43, 'l'), 44), ((43, 'm'), 44), ((43, 'n'), 44), ((43, 'o'), 44), ((43, 'p'), 44), ((43, 'q'), 44), ((43, 'r'), 44), ((43, 's'), 44), ((43, 't'), 44), ((43, 'u'), 44), ((43, 'v'), 44), ((43, 'w'), 44), ((43, 'x'), 44), ((43, 'y'), 44), ((43, 'z'), 44)
            , ((44, '0'), 44), ((44, '1'), 44), ((44, '2'), 44), ((44, '3'), 44), ((44, '4'), 44), ((44, '5'), 44), ((44, '6'), 44), ((44, '7'), 44), ((44, '8'), 44), ((44, '9'), 44), ((44, 'A'), 44), ((44, 'B'), 44), ((44, 'C'), 44), ((44, 'D'), 44), ((44, 'E'), 44), ((44, 'F'), 44), ((44, 'G'), 44), ((44, 'H'), 44), ((44, 'I'), 44), ((44, 'J'), 44), ((44, 'K'), 44), ((44, 'L'), 44), ((44, 'M'), 44), ((44, 'N'), 44), ((44, 'O'), 44), ((44, 'P'), 44), ((44, 'Q'), 44), ((44, 'R'), 44), ((44, 'S'), 44), ((44, 'T'), 44), ((44, 'U'), 44), ((44, 'V'), 44), ((44, 'W'), 44), ((44, 'X'), 44), ((44, 'Y'), 44), ((44, 'Z'), 44), ((44, '_'), 44), ((44, 'a'), 44), ((44, 'b'), 44), ((44, 'c'), 44), ((44, 'd'), 44), ((44, 'e'), 44), ((44, 'f'), 44), ((44, 'g'), 44), ((44, 'h'), 44), ((44, 'i'), 44), ((44, 'j'), 44), ((44, 'k'), 44), ((44, 'l'), 44), ((44, 'm'), 44), ((44, 'n'), 44), ((44, 'o'), 44), ((44, 'p'), 44), ((44, 'q'), 44), ((44, 'r'), 44), ((44, 's'), 44), ((44, 't'), 44), ((44, 'u'), 44), ((44, 'v'), 44), ((44, 'w'), 44), ((44, 'x'), 44), ((44, 'y'), 44), ((44, 'z'), 44)
            , ((45, '0'), 44), ((45, '1'), 44), ((45, '2'), 44), ((45, '3'), 44), ((45, '4'), 44), ((45, '5'), 44), ((45, '6'), 44), ((45, '7'), 44), ((45, '8'), 44), ((45, '9'), 44), ((45, 'A'), 44), ((45, 'B'), 44), ((45, 'C'), 44), ((45, 'D'), 44), ((45, 'E'), 44), ((45, 'F'), 44), ((45, 'G'), 44), ((45, 'H'), 44), ((45, 'I'), 44), ((45, 'J'), 44), ((45, 'K'), 44), ((45, 'L'), 44), ((45, 'M'), 44), ((45, 'N'), 44), ((45, 'O'), 44), ((45, 'P'), 44), ((45, 'Q'), 44), ((45, 'R'), 44), ((45, 'S'), 44), ((45, 'T'), 44), ((45, 'U'), 44), ((45, 'V'), 44), ((45, 'W'), 44), ((45, 'X'), 44), ((45, 'Y'), 44), ((45, 'Z'), 44), ((45, '_'), 44), ((45, 'a'), 25), ((45, 'b'), 44), ((45, 'c'), 44), ((45, 'd'), 44), ((45, 'e'), 44), ((45, 'f'), 44), ((45, 'g'), 44), ((45, 'h'), 44), ((45, 'i'), 44), ((45, 'j'), 44), ((45, 'k'), 44), ((45, 'l'), 44), ((45, 'm'), 44), ((45, 'n'), 44), ((45, 'o'), 44), ((45, 'p'), 44), ((45, 'q'), 44), ((45, 'r'), 44), ((45, 's'), 44), ((45, 't'), 44), ((45, 'u'), 44), ((45, 'v'), 44), ((45, 'w'), 44), ((45, 'x'), 44), ((45, 'y'), 44), ((45, 'z'), 44)
            , ((46, '0'), 44), ((46, '1'), 44), ((46, '2'), 44), ((46, '3'), 44), ((46, '4'), 44), ((46, '5'), 44), ((46, '6'), 44), ((46, '7'), 44), ((46, '8'), 44), ((46, '9'), 44), ((46, 'A'), 44), ((46, 'B'), 44), ((46, 'C'), 44), ((46, 'D'), 44), ((46, 'E'), 44), ((46, 'F'), 44), ((46, 'G'), 44), ((46, 'H'), 44), ((46, 'I'), 44), ((46, 'J'), 44), ((46, 'K'), 44), ((46, 'L'), 44), ((46, 'M'), 44), ((46, 'N'), 44), ((46, 'O'), 44), ((46, 'P'), 44), ((46, 'Q'), 44), ((46, 'R'), 44), ((46, 'S'), 44), ((46, 'T'), 44), ((46, 'U'), 44), ((46, 'V'), 44), ((46, 'W'), 44), ((46, 'X'), 44), ((46, 'Y'), 44), ((46, 'Z'), 44), ((46, '_'), 44), ((46, 'a'), 44), ((46, 'b'), 44), ((46, 'c'), 44), ((46, 'd'), 32), ((46, 'e'), 44), ((46, 'f'), 44), ((46, 'g'), 44), ((46, 'h'), 44), ((46, 'i'), 44), ((46, 'j'), 44), ((46, 'k'), 44), ((46, 'l'), 44), ((46, 'm'), 44), ((46, 'n'), 44), ((46, 'o'), 44), ((46, 'p'), 44), ((46, 'q'), 44), ((46, 'r'), 44), ((46, 's'), 44), ((46, 't'), 44), ((46, 'u'), 44), ((46, 'v'), 44), ((46, 'w'), 44), ((46, 'x'), 44), ((46, 'y'), 44), ((46, 'z'), 44)
            , ((47, '0'), 44), ((47, '1'), 44), ((47, '2'), 44), ((47, '3'), 44), ((47, '4'), 44), ((47, '5'), 44), ((47, '6'), 44), ((47, '7'), 44), ((47, '8'), 44), ((47, '9'), 44), ((47, 'A'), 44), ((47, 'B'), 44), ((47, 'C'), 44), ((47, 'D'), 44), ((47, 'E'), 44), ((47, 'F'), 44), ((47, 'G'), 44), ((47, 'H'), 44), ((47, 'I'), 44), ((47, 'J'), 44), ((47, 'K'), 44), ((47, 'L'), 44), ((47, 'M'), 44), ((47, 'N'), 44), ((47, 'O'), 44), ((47, 'P'), 44), ((47, 'Q'), 44), ((47, 'R'), 44), ((47, 'S'), 44), ((47, 'T'), 44), ((47, 'U'), 44), ((47, 'V'), 44), ((47, 'W'), 44), ((47, 'X'), 44), ((47, 'Y'), 44), ((47, 'Z'), 44), ((47, '_'), 44), ((47, 'a'), 44), ((47, 'b'), 44), ((47, 'c'), 44), ((47, 'd'), 44), ((47, 'e'), 28), ((47, 'f'), 44), ((47, 'g'), 44), ((47, 'h'), 44), ((47, 'i'), 44), ((47, 'j'), 44), ((47, 'k'), 44), ((47, 'l'), 44), ((47, 'm'), 44), ((47, 'n'), 44), ((47, 'o'), 44), ((47, 'p'), 44), ((47, 'q'), 44), ((47, 'r'), 44), ((47, 's'), 44), ((47, 't'), 44), ((47, 'u'), 44), ((47, 'v'), 44), ((47, 'w'), 44), ((47, 'x'), 44), ((47, 'y'), 44), ((47, 'z'), 44)
            , ((48, '0'), 44), ((48, '1'), 44), ((48, '2'), 44), ((48, '3'), 44), ((48, '4'), 44), ((48, '5'), 44), ((48, '6'), 44), ((48, '7'), 44), ((48, '8'), 44), ((48, '9'), 44), ((48, 'A'), 44), ((48, 'B'), 44), ((48, 'C'), 44), ((48, 'D'), 44), ((48, 'E'), 44), ((48, 'F'), 44), ((48, 'G'), 44), ((48, 'H'), 44), ((48, 'I'), 44), ((48, 'J'), 44), ((48, 'K'), 44), ((48, 'L'), 44), ((48, 'M'), 44), ((48, 'N'), 44), ((48, 'O'), 44), ((48, 'P'), 44), ((48, 'Q'), 44), ((48, 'R'), 44), ((48, 'S'), 44), ((48, 'T'), 44), ((48, 'U'), 44), ((48, 'V'), 44), ((48, 'W'), 44), ((48, 'X'), 44), ((48, 'Y'), 44), ((48, 'Z'), 44), ((48, '_'), 44), ((48, 'a'), 44), ((48, 'b'), 44), ((48, 'c'), 44), ((48, 'd'), 44), ((48, 'e'), 33), ((48, 'f'), 44), ((48, 'g'), 44), ((48, 'h'), 44), ((48, 'i'), 44), ((48, 'j'), 44), ((48, 'k'), 44), ((48, 'l'), 44), ((48, 'm'), 44), ((48, 'n'), 44), ((48, 'o'), 44), ((48, 'p'), 44), ((48, 'q'), 44), ((48, 'r'), 44), ((48, 's'), 44), ((48, 't'), 44), ((48, 'u'), 44), ((48, 'v'), 44), ((48, 'w'), 44), ((48, 'x'), 44), ((48, 'y'), 44), ((48, 'z'), 44)
            , ((49, '0'), 44), ((49, '1'), 44), ((49, '2'), 44), ((49, '3'), 44), ((49, '4'), 44), ((49, '5'), 44), ((49, '6'), 44), ((49, '7'), 44), ((49, '8'), 44), ((49, '9'), 44), ((49, 'A'), 44), ((49, 'B'), 44), ((49, 'C'), 44), ((49, 'D'), 44), ((49, 'E'), 44), ((49, 'F'), 44), ((49, 'G'), 44), ((49, 'H'), 44), ((49, 'I'), 44), ((49, 'J'), 44), ((49, 'K'), 44), ((49, 'L'), 44), ((49, 'M'), 44), ((49, 'N'), 44), ((49, 'O'), 44), ((49, 'P'), 44), ((49, 'Q'), 44), ((49, 'R'), 44), ((49, 'S'), 44), ((49, 'T'), 44), ((49, 'U'), 44), ((49, 'V'), 44), ((49, 'W'), 44), ((49, 'X'), 44), ((49, 'Y'), 44), ((49, 'Z'), 44), ((49, '_'), 44), ((49, 'a'), 44), ((49, 'b'), 44), ((49, 'c'), 44), ((49, 'd'), 44), ((49, 'e'), 44), ((49, 'f'), 44), ((49, 'g'), 44), ((49, 'h'), 44), ((49, 'i'), 44), ((49, 'j'), 44), ((49, 'k'), 44), ((49, 'l'), 29), ((49, 'm'), 44), ((49, 'n'), 44), ((49, 'o'), 44), ((49, 'p'), 44), ((49, 'q'), 44), ((49, 'r'), 44), ((49, 's'), 44), ((49, 't'), 44), ((49, 'u'), 44), ((49, 'v'), 44), ((49, 'w'), 44), ((49, 'x'), 44), ((49, 'y'), 44), ((49, 'z'), 44)
            , ((51, '0'), 51), ((51, '1'), 51), ((51, '2'), 51), ((51, '3'), 51), ((51, '4'), 51), ((51, '5'), 51), ((51, '6'), 51), ((51, '7'), 51), ((51, '8'), 51), ((51, '9'), 51), ((51, 'A'), 51), ((51, 'B'), 51), ((51, 'C'), 51), ((51, 'D'), 51), ((51, 'E'), 51), ((51, 'F'), 51), ((51, 'G'), 51), ((51, 'H'), 51), ((51, 'I'), 51), ((51, 'J'), 51), ((51, 'K'), 51), ((51, 'L'), 51), ((51, 'M'), 51), ((51, 'N'), 51), ((51, 'O'), 51), ((51, 'P'), 51), ((51, 'Q'), 51), ((51, 'R'), 51), ((51, 'S'), 51), ((51, 'T'), 51), ((51, 'U'), 51), ((51, 'V'), 51), ((51, 'W'), 51), ((51, 'X'), 51), ((51, 'Y'), 51), ((51, 'Z'), 51), ((51, '_'), 51), ((51, 'a'), 51), ((51, 'b'), 51), ((51, 'c'), 51), ((51, 'd'), 51), ((51, 'e'), 51), ((51, 'f'), 51), ((51, 'g'), 51), ((51, 'h'), 51), ((51, 'i'), 51), ((51, 'j'), 51), ((51, 'k'), 51), ((51, 'l'), 51), ((51, 'm'), 51), ((51, 'n'), 51), ((51, 'o'), 51), ((51, 'p'), 51), ((51, 'q'), 51), ((51, 'r'), 51), ((51, 's'), 51), ((51, 't'), 51), ((51, 'u'), 51), ((51, 'v'), 51), ((51, 'w'), 51), ((51, 'x'), 51), ((51, 'y'), 51), ((51, 'z'), 51)
            , ((52, '0'), 52), ((52, '1'), 52), ((52, '2'), 52), ((52, '3'), 52), ((52, '4'), 52), ((52, '5'), 52), ((52, '6'), 52), ((52, '7'), 52), ((52, '8'), 52), ((52, '9'), 52)
            , ((55, '\n'), 55), ((55, ' '), 55)
            , ((56, ' '), 56), ((56, '!'), 56), ((56, '"'), 56), ((56, '#'), 56), ((56, '$'), 56), ((56, '%'), 56), ((56, '&'), 56), ((56, '\''), 56), ((56, '('), 56), ((56, ')'), 56), ((56, '*'), 56), ((56, '+'), 56), ((56, ','), 56), ((56, '-'), 56), ((56, '.'), 56), ((56, '/'), 56), ((56, '0'), 56), ((56, '1'), 56), ((56, '2'), 56), ((56, '3'), 56), ((56, '4'), 56), ((56, '5'), 56), ((56, '6'), 56), ((56, '7'), 56), ((56, '8'), 56), ((56, '9'), 56), ((56, ':'), 56), ((56, ';'), 56), ((56, '<'), 56), ((56, '='), 56), ((56, '>'), 56), ((56, '?'), 56), ((56, '@'), 56), ((56, 'A'), 56), ((56, 'B'), 56), ((56, 'C'), 56), ((56, 'D'), 56), ((56, 'E'), 56), ((56, 'F'), 56), ((56, 'G'), 56), ((56, 'H'), 56), ((56, 'I'), 56), ((56, 'J'), 56), ((56, 'K'), 56), ((56, 'L'), 56), ((56, 'M'), 56), ((56, 'N'), 56), ((56, 'O'), 56), ((56, 'P'), 56), ((56, 'Q'), 56), ((56, 'R'), 56), ((56, 'S'), 56), ((56, 'T'), 56), ((56, 'U'), 56), ((56, 'V'), 56), ((56, 'W'), 56), ((56, 'X'), 56), ((56, 'Y'), 56), ((56, 'Z'), 56), ((56, '['), 56), ((56, '\\'), 56), ((56, ']'), 56), ((56, '^'), 56), ((56, '_'), 56), ((56, '`'), 56), ((56, 'a'), 56), ((56, 'b'), 56), ((56, 'c'), 56), ((56, 'd'), 56), ((56, 'e'), 56), ((56, 'f'), 56), ((56, 'g'), 56), ((56, 'h'), 56), ((56, 'i'), 56), ((56, 'j'), 56), ((56, 'k'), 56), ((56, 'l'), 56), ((56, 'm'), 56), ((56, 'n'), 56), ((56, 'o'), 56), ((56, 'p'), 56), ((56, 'q'), 56), ((56, 'r'), 56), ((56, 's'), 56), ((56, 't'), 56), ((56, 'u'), 56), ((56, 'v'), 56), ((56, 'w'), 56), ((56, 'x'), 56), ((56, 'y'), 56), ((56, 'z'), 56), ((56, '{'), 56), ((56, '|'), 56), ((56, '}'), 56), ((56, '~'), 56)
            ]
        , getMarkedQsOfDFA = XMap.fromAscList []
        , getPseudoFinalsOfDFA = XSet.fromAscList []
        }
    runDFA :: DFA -> [((Int, Int), Char)] -> Either (Int, Int) ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
    runDFA (DFA q0 qfs deltas markeds pseudo_finals) = if XSet.null pseudo_finals then Right . XIdentity.runIdentity . runFast else runSlow where
        loop1 :: Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT (Maybe Int, [((Int, Int), Char)]) XIdentity.Identity [((Int, Int), Char)]
        loop1 q buffer [] = return buffer
        loop1 q buffer (ch : str) = do
            (latest, accepted) <- XState.get
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case XMap.lookup p qfs of
                    Nothing -> loop1 p (buffer ++ [ch]) str
                    latest' -> do
                        XState.put (latest', accepted ++ buffer ++ [ch])
                        loop1 p [] str
        loop2 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop2 qs q [] buffer = return buffer
        loop2 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop2 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        loop2 qs p str []
        loop3 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop3 qs q [] buffer = return buffer
        loop3 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop3 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        return str
        runFast :: [((Int, Int), Char)] -> XIdentity.Identity ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        runFast input = do
            (rest, (latest, accepted)) <- XState.runStateT (loop1 q0 [] input) (Nothing, [])
            case latest >>= flip XMap.lookup markeds of
                Nothing -> return ((latest, accepted), rest)
                Just (True, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop2 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
                Just (False, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop3 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
        runSlow :: [((Int, Int), Char)] -> Either (Int, Int) ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        runSlow = undefined
    addLoc :: Int -> Int -> String -> [((Int, Int), Char)]
    addLoc _ _ [] = []
    addLoc row col (ch : chs) = if ch == '\n' then ((row, col), ch) : addLoc (row + 1) 1 chs else ((row, col), ch) : addLoc row (col + 1) chs
    runAladdinLexer_this :: [((Int, Int), Char)] -> Either (Int, Int) [Token]
    runAladdinLexer_this [] = return []
    runAladdinLexer_this str0 = do
        let return_one my_token = return [my_token]
        dfa_output <- runDFA theDFA str0
        (str1, piece) <- case dfa_output of
            ((_, []), _) -> Left (fst (head str0))
            ((Just label, accepted), rest) -> return (rest, ((label, map snd accepted), (fst (head accepted), fst (head (reverse accepted)))))
            _ -> Left (fst (head str0))
        tokens1 <- case piece of
            ((1, this), ((row1, col1), (row2, col2))) -> return_one (T_dot (SLoc (row1, col1) (row2, col2)))
            ((2, this), ((row1, col1), (row2, col2))) -> return_one (T_arrow (SLoc (row1, col1) (row2, col2)))
            ((3, this), ((row1, col1), (row2, col2))) -> return_one (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((4, this), ((row1, col1), (row2, col2))) -> return_one (T_lparen (SLoc (row1, col1) (row2, col2)))
            ((5, this), ((row1, col1), (row2, col2))) -> return_one (T_rparen (SLoc (row1, col1) (row2, col2)))
            ((6, this), ((row1, col1), (row2, col2))) -> return_one (T_lbracket (SLoc (row1, col1) (row2, col2)))
            ((7, this), ((row1, col1), (row2, col2))) -> return_one (T_rbracket (SLoc (row1, col1) (row2, col2)))
            ((8, this), ((row1, col1), (row2, col2))) -> return_one (T_quest (SLoc (row1, col1) (row2, col2)))
            ((9, this), ((row1, col1), (row2, col2))) -> return_one (T_comma (SLoc (row1, col1) (row2, col2)))
            ((10, this), ((row1, col1), (row2, col2))) -> return_one (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((11, this), ((row1, col1), (row2, col2))) -> return_one (T_if (SLoc (row1, col1) (row2, col2)))
            ((12, this), ((row1, col1), (row2, col2))) -> return_one (T_Eq (SLoc (row1, col1) (row2, col2)))
            ((13, this), ((row1, col1), (row2, col2))) -> return_one (T_succ (SLoc (row1, col1) (row2, col2)))
            ((14, this), ((row1, col1), (row2, col2))) -> return_one (T_pi (SLoc (row1, col1) (row2, col2)))
            ((15, this), ((row1, col1), (row2, col2))) -> return_one (T_sigma (SLoc (row1, col1) (row2, col2)))
            ((16, this), ((row1, col1), (row2, col2))) -> return_one (T_semicolon (SLoc (row1, col1) (row2, col2)))
            ((17, this), ((row1, col1), (row2, col2))) -> return_one (T_cut (SLoc (row1, col1) (row2, col2)))
            ((18, this), ((row1, col1), (row2, col2))) -> return_one (T_true (SLoc (row1, col1) (row2, col2)))
            ((19, this), ((row1, col1), (row2, col2))) -> return_one (T_fail (SLoc (row1, col1) (row2, col2)))
            ((20, this), ((row1, col1), (row2, col2))) -> return_one (T_bslash (SLoc (row1, col1) (row2, col2)))
            ((21, this), ((row1, col1), (row2, col2))) -> return_one (T_cons (SLoc (row1, col1) (row2, col2)))
            ((22, this), ((row1, col1), (row2, col2))) -> return_one (T_kind (SLoc (row1, col1) (row2, col2)))
            ((23, this), ((row1, col1), (row2, col2))) -> return_one (T_type (SLoc (row1, col1) (row2, col2)))
            ((24, this), ((row1, col1), (row2, col2))) -> return_one (T_smallid (SLoc (row1, col1) (row2, col2)) this)
            ((25, this), ((row1, col1), (row2, col2))) -> return_one (T_largeid (SLoc (row1, col1) (row2, col2)) this)
            ((26, this), ((row1, col1), (row2, col2))) -> return_one (T_nat_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((27, this), ((row1, col1), (row2, col2))) -> return_one (T_str_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((28, this), ((row1, col1), (row2, col2))) -> return_one (T_chr_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((29, this), ((row1, col1), (row2, col2))) -> return []
            ((30, this), ((row1, col1), (row2, col2))) -> return []
            ((31, this), ((row1, col1), (row2, col2))) -> return []
        tokens2 <- runAladdinLexer_this str1
        return (tokens1 ++ tokens2)
