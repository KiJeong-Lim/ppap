module Aladdin.Front.Analyzer.Lexer where

import Aladdin.Front.Analyzer.Grammar
import Aladdin.Front.Header
import qualified Control.Monad.Trans.State.Strict as XState
import qualified Data.Functor.Identity as XIdentity
import qualified Data.Map.Strict as XMap
import qualified Data.Set as XSet

-- the following codes are generated by LGS.

data DFA
    = DFA
        { getInitialQOfDFA :: Int
        , getFinalQsOfDFA :: XMap.Map Int Int
        , getTransitionsOfDFA :: XMap.Map (Int, Char) Int
        , getMarkedQsOfDFA :: XMap.Map Int (Bool, XSet.Set Int)
        }
    deriving ()

runAladdinLexer :: String -> Either (Int, Int) [Token]
runAladdinLexer = doLexing . addLoc 1 1 where
    --  1: "\'\\"
    --  2: "\"" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])* "\\"
    --  3: "\'"
    --  4: "\"" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])*
    --  5: "\'" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])
    --  6: "?"
    --  7: ":"
    --  8: "-"
    --  9: ""
    -- 11: "."
    -- 12: "->"
    -- 13: "=>"
    -- 14: "("
    -- 15: ")"
    -- 16: "["
    -- 17: "]"
    -- 18: "?-"
    -- 19: ","
    -- 20: ":-"
    -- 21: "="
    -- 22: "s"
    -- 23: "pi"
    -- 24: "sigma"
    -- 25: ";"
    -- 26: "!"
    -- 27: "true"
    -- 28: "fail"
    -- 29: "\\"
    -- 30: "::"
    -- 31: "kind"
    -- 32: "type"
    -- 33: "p"
    -- 34: "sig"
    -- 35: "si"
    -- 36: "ki"
    -- 37: "k"
    -- 38: "tr"
    -- 39: "ty"
    -- 40: "t"
    -- 41: "fa"
    -- 42: "f"
    -- 43: ['a'-'e' 'g'-'j' 'l'-'o' 'q'-'r' 'u'-'z'] + "s" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) + "si" (['0'-'9' 'A'-'Z' '_' 'a'-'f' 'h'-'z'] + "g" ['0'-'9' 'A'-'Z' '_' 'a'-'l' 'n'-'z']) + "k" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'m' 'o'-'z']) + "t" (['0'-'9' 'A'-'Z' '_' 'a'-'q' 's'-'x' 'z'] + "r" ['0'-'9' 'A'-'Z' '_' 'a'-'t' 'v'-'z'] + "y" ['0'-'9' 'A'-'Z' '_' 'a'-'o' 'q'-'z']) + "f" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z']) + (['a'-'e' 'g'-'j' 'l'-'o' 'q'-'r' 'u'-'z'] + "s" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "p" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) + "si" (['0'-'9' 'A'-'Z' '_' 'a'-'f' 'h'-'z'] + "g" ['0'-'9' 'A'-'Z' '_' 'a'-'l' 'n'-'z']) + "k" (['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'] + "i" ['0'-'9' 'A'-'Z' '_' 'a'-'m' 'o'-'z']) + "t" (['0'-'9' 'A'-'Z' '_' 'a'-'q' 's'-'x' 'z'] + "r" ['0'-'9' 'A'-'Z' '_' 'a'-'t' 'v'-'z'] + "y" ['0'-'9' 'A'-'Z' '_' 'a'-'o' 'q'-'z']) + "f" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'h' 'j'-'z'])) ['0'-'9' 'A'-'Z' '_' 'a'-'z']* + "sigm" (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'b'-'z'] + "a" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "kin" (['0'-'9' 'A'-'Z' '_' 'a'-'c' 'e'-'z'] + "d" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'c' 'e'-'z'] + "d" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "tru" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "typ" (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'d' 'f'-'z'] + "e" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*) + "fai" (['0'-'9' 'A'-'Z' '_' 'a'-'k' 'm'-'z'] + "l" ['0'-'9' 'A'-'Z' '_' 'a'-'z'] + (['0'-'9' 'A'-'Z' '_' 'a'-'k' 'm'-'z'] + "l" ['0'-'9' 'A'-'Z' '_' 'a'-'z']) ['0'-'9' 'A'-'Z' '_' 'a'-'z']*)
    -- 44: "sigm"
    -- 45: "kin"
    -- 46: "tru"
    -- 47: "typ"
    -- 48: "fai"
    -- 49: "_"
    -- 50: ['A'-'Z'] ['0'-'9' 'A'-'Z' '_' 'a'-'z']*
    -- 51: ['0'-'9']+
    -- 52: "\"" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't'])* "\""
    -- 53: "\'" ([. \ '\\' \ '\"' \ '\n'] + "\\" ['\"' '\'' '\\' 'n' 't']) "\'"
    -- 54: ['\n' ' ']+
    -- 55: "%" [. \ '\n']*
    theDFA :: DFA
    theDFA = DFA
        { getInitialQOfDFA = 9
        , getFinalQsOfDFA = XMap.fromAscList [(11, 1), (12, 2), (13, 3), (14, 4), (15, 5), (16, 6), (17, 7), (18, 8), (19, 9), (20, 11), (21, 12), (22, 13), (23, 14), (24, 15), (25, 16), (26, 17), (27, 18), (28, 19), (29, 20), (30, 21), (31, 22), (32, 23), (33, 24), (34, 24), (35, 24), (36, 24), (37, 24), (38, 24), (39, 24), (40, 24), (41, 24), (42, 24), (43, 24), (44, 24), (45, 24), (46, 24), (47, 24), (48, 24), (49, 25), (50, 25), (51, 26), (52, 27), (53, 28), (54, 29), (55, 30)]
        , getTransitionsOfDFA = XMap.fromAscList 
            [ ((1, '"'), 5), ((1, '\''), 5), ((1, '\\'), 5), ((1, 'n'), 5), ((1, 't'), 5)
            , ((2, '"'), 4), ((2, '\''), 4), ((2, '\\'), 4), ((2, 'n'), 4), ((2, 't'), 4)
            , ((3, ' '), 5), ((3, '!'), 5), ((3, '#'), 5), ((3, '$'), 5), ((3, '%'), 5), ((3, '&'), 5), ((3, '\''), 5), ((3, '('), 5), ((3, ')'), 5), ((3, '*'), 5), ((3, '+'), 5), ((3, ','), 5), ((3, '-'), 5), ((3, '.'), 5), ((3, '/'), 5), ((3, '0'), 5), ((3, '1'), 5), ((3, '2'), 5), ((3, '3'), 5), ((3, '4'), 5), ((3, '5'), 5), ((3, '6'), 5), ((3, '7'), 5), ((3, '8'), 5), ((3, '9'), 5), ((3, ':'), 5), ((3, ';'), 5), ((3, '<'), 5), ((3, '='), 5), ((3, '>'), 5), ((3, '?'), 5), ((3, '@'), 5), ((3, 'A'), 5), ((3, 'B'), 5), ((3, 'C'), 5), ((3, 'D'), 5), ((3, 'E'), 5), ((3, 'F'), 5), ((3, 'G'), 5), ((3, 'H'), 5), ((3, 'I'), 5), ((3, 'J'), 5), ((3, 'K'), 5), ((3, 'L'), 5), ((3, 'M'), 5), ((3, 'N'), 5), ((3, 'O'), 5), ((3, 'P'), 5), ((3, 'Q'), 5), ((3, 'R'), 5), ((3, 'S'), 5), ((3, 'T'), 5), ((3, 'U'), 5), ((3, 'V'), 5), ((3, 'W'), 5), ((3, 'X'), 5), ((3, 'Y'), 5), ((3, 'Z'), 5), ((3, '['), 5), ((3, '\\'), 1), ((3, ']'), 5), ((3, '^'), 5), ((3, '_'), 5), ((3, '`'), 5), ((3, 'a'), 5), ((3, 'b'), 5), ((3, 'c'), 5), ((3, 'd'), 5), ((3, 'e'), 5), ((3, 'f'), 5), ((3, 'g'), 5), ((3, 'h'), 5), ((3, 'i'), 5), ((3, 'j'), 5), ((3, 'k'), 5), ((3, 'l'), 5), ((3, 'm'), 5), ((3, 'n'), 5), ((3, 'o'), 5), ((3, 'p'), 5), ((3, 'q'), 5), ((3, 'r'), 5), ((3, 's'), 5), ((3, 't'), 5), ((3, 'u'), 5), ((3, 'v'), 5), ((3, 'w'), 5), ((3, 'x'), 5), ((3, 'y'), 5), ((3, 'z'), 5), ((3, '{'), 5), ((3, '|'), 5), ((3, '}'), 5), ((3, '~'), 5)
            , ((4, ' '), 4), ((4, '!'), 4), ((4, '"'), 52), ((4, '#'), 4), ((4, '$'), 4), ((4, '%'), 4), ((4, '&'), 4), ((4, '\''), 4), ((4, '('), 4), ((4, ')'), 4), ((4, '*'), 4), ((4, '+'), 4), ((4, ','), 4), ((4, '-'), 4), ((4, '.'), 4), ((4, '/'), 4), ((4, '0'), 4), ((4, '1'), 4), ((4, '2'), 4), ((4, '3'), 4), ((4, '4'), 4), ((4, '5'), 4), ((4, '6'), 4), ((4, '7'), 4), ((4, '8'), 4), ((4, '9'), 4), ((4, ':'), 4), ((4, ';'), 4), ((4, '<'), 4), ((4, '='), 4), ((4, '>'), 4), ((4, '?'), 4), ((4, '@'), 4), ((4, 'A'), 4), ((4, 'B'), 4), ((4, 'C'), 4), ((4, 'D'), 4), ((4, 'E'), 4), ((4, 'F'), 4), ((4, 'G'), 4), ((4, 'H'), 4), ((4, 'I'), 4), ((4, 'J'), 4), ((4, 'K'), 4), ((4, 'L'), 4), ((4, 'M'), 4), ((4, 'N'), 4), ((4, 'O'), 4), ((4, 'P'), 4), ((4, 'Q'), 4), ((4, 'R'), 4), ((4, 'S'), 4), ((4, 'T'), 4), ((4, 'U'), 4), ((4, 'V'), 4), ((4, 'W'), 4), ((4, 'X'), 4), ((4, 'Y'), 4), ((4, 'Z'), 4), ((4, '['), 4), ((4, '\\'), 2), ((4, ']'), 4), ((4, '^'), 4), ((4, '_'), 4), ((4, '`'), 4), ((4, 'a'), 4), ((4, 'b'), 4), ((4, 'c'), 4), ((4, 'd'), 4), ((4, 'e'), 4), ((4, 'f'), 4), ((4, 'g'), 4), ((4, 'h'), 4), ((4, 'i'), 4), ((4, 'j'), 4), ((4, 'k'), 4), ((4, 'l'), 4), ((4, 'm'), 4), ((4, 'n'), 4), ((4, 'o'), 4), ((4, 'p'), 4), ((4, 'q'), 4), ((4, 'r'), 4), ((4, 's'), 4), ((4, 't'), 4), ((4, 'u'), 4), ((4, 'v'), 4), ((4, 'w'), 4), ((4, 'x'), 4), ((4, 'y'), 4), ((4, 'z'), 4), ((4, '{'), 4), ((4, '|'), 4), ((4, '}'), 4), ((4, '~'), 4)
            , ((5, '\''), 53)
            , ((6, '-'), 18)
            , ((7, '-'), 20), ((7, ':'), 30)
            , ((8, '>'), 12)
            , ((9, '\n'), 54), ((9, ' '), 54), ((9, '!'), 26), ((9, '"'), 4), ((9, '%'), 55), ((9, '\''), 3), ((9, '('), 14), ((9, ')'), 15), ((9, ','), 19), ((9, '-'), 8), ((9, '.'), 11), ((9, '0'), 51), ((9, '1'), 51), ((9, '2'), 51), ((9, '3'), 51), ((9, '4'), 51), ((9, '5'), 51), ((9, '6'), 51), ((9, '7'), 51), ((9, '8'), 51), ((9, '9'), 51), ((9, ':'), 7), ((9, ';'), 25), ((9, '='), 21), ((9, '?'), 6), ((9, 'A'), 50), ((9, 'B'), 50), ((9, 'C'), 50), ((9, 'D'), 50), ((9, 'E'), 50), ((9, 'F'), 50), ((9, 'G'), 50), ((9, 'H'), 50), ((9, 'I'), 50), ((9, 'J'), 50), ((9, 'K'), 50), ((9, 'L'), 50), ((9, 'M'), 50), ((9, 'N'), 50), ((9, 'O'), 50), ((9, 'P'), 50), ((9, 'Q'), 50), ((9, 'R'), 50), ((9, 'S'), 50), ((9, 'T'), 50), ((9, 'U'), 50), ((9, 'V'), 50), ((9, 'W'), 50), ((9, 'X'), 50), ((9, 'Y'), 50), ((9, 'Z'), 50), ((9, '['), 16), ((9, '\\'), 29), ((9, ']'), 17), ((9, '_'), 49), ((9, 'a'), 43), ((9, 'b'), 43), ((9, 'c'), 43), ((9, 'd'), 43), ((9, 'e'), 43), ((9, 'f'), 42), ((9, 'g'), 43), ((9, 'h'), 43), ((9, 'i'), 43), ((9, 'j'), 43), ((9, 'k'), 37), ((9, 'l'), 43), ((9, 'm'), 43), ((9, 'n'), 43), ((9, 'o'), 43), ((9, 'p'), 33), ((9, 'q'), 43), ((9, 'r'), 43), ((9, 's'), 22), ((9, 't'), 40), ((9, 'u'), 43), ((9, 'v'), 43), ((9, 'w'), 43), ((9, 'x'), 43), ((9, 'y'), 43), ((9, 'z'), 43)
            , ((21, '>'), 13)
            , ((22, '0'), 43), ((22, '1'), 43), ((22, '2'), 43), ((22, '3'), 43), ((22, '4'), 43), ((22, '5'), 43), ((22, '6'), 43), ((22, '7'), 43), ((22, '8'), 43), ((22, '9'), 43), ((22, 'A'), 43), ((22, 'B'), 43), ((22, 'C'), 43), ((22, 'D'), 43), ((22, 'E'), 43), ((22, 'F'), 43), ((22, 'G'), 43), ((22, 'H'), 43), ((22, 'I'), 43), ((22, 'J'), 43), ((22, 'K'), 43), ((22, 'L'), 43), ((22, 'M'), 43), ((22, 'N'), 43), ((22, 'O'), 43), ((22, 'P'), 43), ((22, 'Q'), 43), ((22, 'R'), 43), ((22, 'S'), 43), ((22, 'T'), 43), ((22, 'U'), 43), ((22, 'V'), 43), ((22, 'W'), 43), ((22, 'X'), 43), ((22, 'Y'), 43), ((22, 'Z'), 43), ((22, '_'), 43), ((22, 'a'), 43), ((22, 'b'), 43), ((22, 'c'), 43), ((22, 'd'), 43), ((22, 'e'), 43), ((22, 'f'), 43), ((22, 'g'), 43), ((22, 'h'), 43), ((22, 'i'), 35), ((22, 'j'), 43), ((22, 'k'), 43), ((22, 'l'), 43), ((22, 'm'), 43), ((22, 'n'), 43), ((22, 'o'), 43), ((22, 'p'), 43), ((22, 'q'), 43), ((22, 'r'), 43), ((22, 's'), 43), ((22, 't'), 43), ((22, 'u'), 43), ((22, 'v'), 43), ((22, 'w'), 43), ((22, 'x'), 43), ((22, 'y'), 43), ((22, 'z'), 43)
            , ((23, '0'), 43), ((23, '1'), 43), ((23, '2'), 43), ((23, '3'), 43), ((23, '4'), 43), ((23, '5'), 43), ((23, '6'), 43), ((23, '7'), 43), ((23, '8'), 43), ((23, '9'), 43), ((23, 'A'), 43), ((23, 'B'), 43), ((23, 'C'), 43), ((23, 'D'), 43), ((23, 'E'), 43), ((23, 'F'), 43), ((23, 'G'), 43), ((23, 'H'), 43), ((23, 'I'), 43), ((23, 'J'), 43), ((23, 'K'), 43), ((23, 'L'), 43), ((23, 'M'), 43), ((23, 'N'), 43), ((23, 'O'), 43), ((23, 'P'), 43), ((23, 'Q'), 43), ((23, 'R'), 43), ((23, 'S'), 43), ((23, 'T'), 43), ((23, 'U'), 43), ((23, 'V'), 43), ((23, 'W'), 43), ((23, 'X'), 43), ((23, 'Y'), 43), ((23, 'Z'), 43), ((23, '_'), 43), ((23, 'a'), 43), ((23, 'b'), 43), ((23, 'c'), 43), ((23, 'd'), 43), ((23, 'e'), 43), ((23, 'f'), 43), ((23, 'g'), 43), ((23, 'h'), 43), ((23, 'i'), 43), ((23, 'j'), 43), ((23, 'k'), 43), ((23, 'l'), 43), ((23, 'm'), 43), ((23, 'n'), 43), ((23, 'o'), 43), ((23, 'p'), 43), ((23, 'q'), 43), ((23, 'r'), 43), ((23, 's'), 43), ((23, 't'), 43), ((23, 'u'), 43), ((23, 'v'), 43), ((23, 'w'), 43), ((23, 'x'), 43), ((23, 'y'), 43), ((23, 'z'), 43)
            , ((24, '0'), 43), ((24, '1'), 43), ((24, '2'), 43), ((24, '3'), 43), ((24, '4'), 43), ((24, '5'), 43), ((24, '6'), 43), ((24, '7'), 43), ((24, '8'), 43), ((24, '9'), 43), ((24, 'A'), 43), ((24, 'B'), 43), ((24, 'C'), 43), ((24, 'D'), 43), ((24, 'E'), 43), ((24, 'F'), 43), ((24, 'G'), 43), ((24, 'H'), 43), ((24, 'I'), 43), ((24, 'J'), 43), ((24, 'K'), 43), ((24, 'L'), 43), ((24, 'M'), 43), ((24, 'N'), 43), ((24, 'O'), 43), ((24, 'P'), 43), ((24, 'Q'), 43), ((24, 'R'), 43), ((24, 'S'), 43), ((24, 'T'), 43), ((24, 'U'), 43), ((24, 'V'), 43), ((24, 'W'), 43), ((24, 'X'), 43), ((24, 'Y'), 43), ((24, 'Z'), 43), ((24, '_'), 43), ((24, 'a'), 43), ((24, 'b'), 43), ((24, 'c'), 43), ((24, 'd'), 43), ((24, 'e'), 43), ((24, 'f'), 43), ((24, 'g'), 43), ((24, 'h'), 43), ((24, 'i'), 43), ((24, 'j'), 43), ((24, 'k'), 43), ((24, 'l'), 43), ((24, 'm'), 43), ((24, 'n'), 43), ((24, 'o'), 43), ((24, 'p'), 43), ((24, 'q'), 43), ((24, 'r'), 43), ((24, 's'), 43), ((24, 't'), 43), ((24, 'u'), 43), ((24, 'v'), 43), ((24, 'w'), 43), ((24, 'x'), 43), ((24, 'y'), 43), ((24, 'z'), 43)
            , ((27, '0'), 43), ((27, '1'), 43), ((27, '2'), 43), ((27, '3'), 43), ((27, '4'), 43), ((27, '5'), 43), ((27, '6'), 43), ((27, '7'), 43), ((27, '8'), 43), ((27, '9'), 43), ((27, 'A'), 43), ((27, 'B'), 43), ((27, 'C'), 43), ((27, 'D'), 43), ((27, 'E'), 43), ((27, 'F'), 43), ((27, 'G'), 43), ((27, 'H'), 43), ((27, 'I'), 43), ((27, 'J'), 43), ((27, 'K'), 43), ((27, 'L'), 43), ((27, 'M'), 43), ((27, 'N'), 43), ((27, 'O'), 43), ((27, 'P'), 43), ((27, 'Q'), 43), ((27, 'R'), 43), ((27, 'S'), 43), ((27, 'T'), 43), ((27, 'U'), 43), ((27, 'V'), 43), ((27, 'W'), 43), ((27, 'X'), 43), ((27, 'Y'), 43), ((27, 'Z'), 43), ((27, '_'), 43), ((27, 'a'), 43), ((27, 'b'), 43), ((27, 'c'), 43), ((27, 'd'), 43), ((27, 'e'), 43), ((27, 'f'), 43), ((27, 'g'), 43), ((27, 'h'), 43), ((27, 'i'), 43), ((27, 'j'), 43), ((27, 'k'), 43), ((27, 'l'), 43), ((27, 'm'), 43), ((27, 'n'), 43), ((27, 'o'), 43), ((27, 'p'), 43), ((27, 'q'), 43), ((27, 'r'), 43), ((27, 's'), 43), ((27, 't'), 43), ((27, 'u'), 43), ((27, 'v'), 43), ((27, 'w'), 43), ((27, 'x'), 43), ((27, 'y'), 43), ((27, 'z'), 43)
            , ((28, '0'), 43), ((28, '1'), 43), ((28, '2'), 43), ((28, '3'), 43), ((28, '4'), 43), ((28, '5'), 43), ((28, '6'), 43), ((28, '7'), 43), ((28, '8'), 43), ((28, '9'), 43), ((28, 'A'), 43), ((28, 'B'), 43), ((28, 'C'), 43), ((28, 'D'), 43), ((28, 'E'), 43), ((28, 'F'), 43), ((28, 'G'), 43), ((28, 'H'), 43), ((28, 'I'), 43), ((28, 'J'), 43), ((28, 'K'), 43), ((28, 'L'), 43), ((28, 'M'), 43), ((28, 'N'), 43), ((28, 'O'), 43), ((28, 'P'), 43), ((28, 'Q'), 43), ((28, 'R'), 43), ((28, 'S'), 43), ((28, 'T'), 43), ((28, 'U'), 43), ((28, 'V'), 43), ((28, 'W'), 43), ((28, 'X'), 43), ((28, 'Y'), 43), ((28, 'Z'), 43), ((28, '_'), 43), ((28, 'a'), 43), ((28, 'b'), 43), ((28, 'c'), 43), ((28, 'd'), 43), ((28, 'e'), 43), ((28, 'f'), 43), ((28, 'g'), 43), ((28, 'h'), 43), ((28, 'i'), 43), ((28, 'j'), 43), ((28, 'k'), 43), ((28, 'l'), 43), ((28, 'm'), 43), ((28, 'n'), 43), ((28, 'o'), 43), ((28, 'p'), 43), ((28, 'q'), 43), ((28, 'r'), 43), ((28, 's'), 43), ((28, 't'), 43), ((28, 'u'), 43), ((28, 'v'), 43), ((28, 'w'), 43), ((28, 'x'), 43), ((28, 'y'), 43), ((28, 'z'), 43)
            , ((31, '0'), 43), ((31, '1'), 43), ((31, '2'), 43), ((31, '3'), 43), ((31, '4'), 43), ((31, '5'), 43), ((31, '6'), 43), ((31, '7'), 43), ((31, '8'), 43), ((31, '9'), 43), ((31, 'A'), 43), ((31, 'B'), 43), ((31, 'C'), 43), ((31, 'D'), 43), ((31, 'E'), 43), ((31, 'F'), 43), ((31, 'G'), 43), ((31, 'H'), 43), ((31, 'I'), 43), ((31, 'J'), 43), ((31, 'K'), 43), ((31, 'L'), 43), ((31, 'M'), 43), ((31, 'N'), 43), ((31, 'O'), 43), ((31, 'P'), 43), ((31, 'Q'), 43), ((31, 'R'), 43), ((31, 'S'), 43), ((31, 'T'), 43), ((31, 'U'), 43), ((31, 'V'), 43), ((31, 'W'), 43), ((31, 'X'), 43), ((31, 'Y'), 43), ((31, 'Z'), 43), ((31, '_'), 43), ((31, 'a'), 43), ((31, 'b'), 43), ((31, 'c'), 43), ((31, 'd'), 43), ((31, 'e'), 43), ((31, 'f'), 43), ((31, 'g'), 43), ((31, 'h'), 43), ((31, 'i'), 43), ((31, 'j'), 43), ((31, 'k'), 43), ((31, 'l'), 43), ((31, 'm'), 43), ((31, 'n'), 43), ((31, 'o'), 43), ((31, 'p'), 43), ((31, 'q'), 43), ((31, 'r'), 43), ((31, 's'), 43), ((31, 't'), 43), ((31, 'u'), 43), ((31, 'v'), 43), ((31, 'w'), 43), ((31, 'x'), 43), ((31, 'y'), 43), ((31, 'z'), 43)
            , ((32, '0'), 43), ((32, '1'), 43), ((32, '2'), 43), ((32, '3'), 43), ((32, '4'), 43), ((32, '5'), 43), ((32, '6'), 43), ((32, '7'), 43), ((32, '8'), 43), ((32, '9'), 43), ((32, 'A'), 43), ((32, 'B'), 43), ((32, 'C'), 43), ((32, 'D'), 43), ((32, 'E'), 43), ((32, 'F'), 43), ((32, 'G'), 43), ((32, 'H'), 43), ((32, 'I'), 43), ((32, 'J'), 43), ((32, 'K'), 43), ((32, 'L'), 43), ((32, 'M'), 43), ((32, 'N'), 43), ((32, 'O'), 43), ((32, 'P'), 43), ((32, 'Q'), 43), ((32, 'R'), 43), ((32, 'S'), 43), ((32, 'T'), 43), ((32, 'U'), 43), ((32, 'V'), 43), ((32, 'W'), 43), ((32, 'X'), 43), ((32, 'Y'), 43), ((32, 'Z'), 43), ((32, '_'), 43), ((32, 'a'), 43), ((32, 'b'), 43), ((32, 'c'), 43), ((32, 'd'), 43), ((32, 'e'), 43), ((32, 'f'), 43), ((32, 'g'), 43), ((32, 'h'), 43), ((32, 'i'), 43), ((32, 'j'), 43), ((32, 'k'), 43), ((32, 'l'), 43), ((32, 'm'), 43), ((32, 'n'), 43), ((32, 'o'), 43), ((32, 'p'), 43), ((32, 'q'), 43), ((32, 'r'), 43), ((32, 's'), 43), ((32, 't'), 43), ((32, 'u'), 43), ((32, 'v'), 43), ((32, 'w'), 43), ((32, 'x'), 43), ((32, 'y'), 43), ((32, 'z'), 43)
            , ((33, '0'), 43), ((33, '1'), 43), ((33, '2'), 43), ((33, '3'), 43), ((33, '4'), 43), ((33, '5'), 43), ((33, '6'), 43), ((33, '7'), 43), ((33, '8'), 43), ((33, '9'), 43), ((33, 'A'), 43), ((33, 'B'), 43), ((33, 'C'), 43), ((33, 'D'), 43), ((33, 'E'), 43), ((33, 'F'), 43), ((33, 'G'), 43), ((33, 'H'), 43), ((33, 'I'), 43), ((33, 'J'), 43), ((33, 'K'), 43), ((33, 'L'), 43), ((33, 'M'), 43), ((33, 'N'), 43), ((33, 'O'), 43), ((33, 'P'), 43), ((33, 'Q'), 43), ((33, 'R'), 43), ((33, 'S'), 43), ((33, 'T'), 43), ((33, 'U'), 43), ((33, 'V'), 43), ((33, 'W'), 43), ((33, 'X'), 43), ((33, 'Y'), 43), ((33, 'Z'), 43), ((33, '_'), 43), ((33, 'a'), 43), ((33, 'b'), 43), ((33, 'c'), 43), ((33, 'd'), 43), ((33, 'e'), 43), ((33, 'f'), 43), ((33, 'g'), 43), ((33, 'h'), 43), ((33, 'i'), 23), ((33, 'j'), 43), ((33, 'k'), 43), ((33, 'l'), 43), ((33, 'm'), 43), ((33, 'n'), 43), ((33, 'o'), 43), ((33, 'p'), 43), ((33, 'q'), 43), ((33, 'r'), 43), ((33, 's'), 43), ((33, 't'), 43), ((33, 'u'), 43), ((33, 'v'), 43), ((33, 'w'), 43), ((33, 'x'), 43), ((33, 'y'), 43), ((33, 'z'), 43)
            , ((34, '0'), 43), ((34, '1'), 43), ((34, '2'), 43), ((34, '3'), 43), ((34, '4'), 43), ((34, '5'), 43), ((34, '6'), 43), ((34, '7'), 43), ((34, '8'), 43), ((34, '9'), 43), ((34, 'A'), 43), ((34, 'B'), 43), ((34, 'C'), 43), ((34, 'D'), 43), ((34, 'E'), 43), ((34, 'F'), 43), ((34, 'G'), 43), ((34, 'H'), 43), ((34, 'I'), 43), ((34, 'J'), 43), ((34, 'K'), 43), ((34, 'L'), 43), ((34, 'M'), 43), ((34, 'N'), 43), ((34, 'O'), 43), ((34, 'P'), 43), ((34, 'Q'), 43), ((34, 'R'), 43), ((34, 'S'), 43), ((34, 'T'), 43), ((34, 'U'), 43), ((34, 'V'), 43), ((34, 'W'), 43), ((34, 'X'), 43), ((34, 'Y'), 43), ((34, 'Z'), 43), ((34, '_'), 43), ((34, 'a'), 43), ((34, 'b'), 43), ((34, 'c'), 43), ((34, 'd'), 43), ((34, 'e'), 43), ((34, 'f'), 43), ((34, 'g'), 43), ((34, 'h'), 43), ((34, 'i'), 43), ((34, 'j'), 43), ((34, 'k'), 43), ((34, 'l'), 43), ((34, 'm'), 44), ((34, 'n'), 43), ((34, 'o'), 43), ((34, 'p'), 43), ((34, 'q'), 43), ((34, 'r'), 43), ((34, 's'), 43), ((34, 't'), 43), ((34, 'u'), 43), ((34, 'v'), 43), ((34, 'w'), 43), ((34, 'x'), 43), ((34, 'y'), 43), ((34, 'z'), 43)
            , ((35, '0'), 43), ((35, '1'), 43), ((35, '2'), 43), ((35, '3'), 43), ((35, '4'), 43), ((35, '5'), 43), ((35, '6'), 43), ((35, '7'), 43), ((35, '8'), 43), ((35, '9'), 43), ((35, 'A'), 43), ((35, 'B'), 43), ((35, 'C'), 43), ((35, 'D'), 43), ((35, 'E'), 43), ((35, 'F'), 43), ((35, 'G'), 43), ((35, 'H'), 43), ((35, 'I'), 43), ((35, 'J'), 43), ((35, 'K'), 43), ((35, 'L'), 43), ((35, 'M'), 43), ((35, 'N'), 43), ((35, 'O'), 43), ((35, 'P'), 43), ((35, 'Q'), 43), ((35, 'R'), 43), ((35, 'S'), 43), ((35, 'T'), 43), ((35, 'U'), 43), ((35, 'V'), 43), ((35, 'W'), 43), ((35, 'X'), 43), ((35, 'Y'), 43), ((35, 'Z'), 43), ((35, '_'), 43), ((35, 'a'), 43), ((35, 'b'), 43), ((35, 'c'), 43), ((35, 'd'), 43), ((35, 'e'), 43), ((35, 'f'), 43), ((35, 'g'), 34), ((35, 'h'), 43), ((35, 'i'), 43), ((35, 'j'), 43), ((35, 'k'), 43), ((35, 'l'), 43), ((35, 'm'), 43), ((35, 'n'), 43), ((35, 'o'), 43), ((35, 'p'), 43), ((35, 'q'), 43), ((35, 'r'), 43), ((35, 's'), 43), ((35, 't'), 43), ((35, 'u'), 43), ((35, 'v'), 43), ((35, 'w'), 43), ((35, 'x'), 43), ((35, 'y'), 43), ((35, 'z'), 43)
            , ((36, '0'), 43), ((36, '1'), 43), ((36, '2'), 43), ((36, '3'), 43), ((36, '4'), 43), ((36, '5'), 43), ((36, '6'), 43), ((36, '7'), 43), ((36, '8'), 43), ((36, '9'), 43), ((36, 'A'), 43), ((36, 'B'), 43), ((36, 'C'), 43), ((36, 'D'), 43), ((36, 'E'), 43), ((36, 'F'), 43), ((36, 'G'), 43), ((36, 'H'), 43), ((36, 'I'), 43), ((36, 'J'), 43), ((36, 'K'), 43), ((36, 'L'), 43), ((36, 'M'), 43), ((36, 'N'), 43), ((36, 'O'), 43), ((36, 'P'), 43), ((36, 'Q'), 43), ((36, 'R'), 43), ((36, 'S'), 43), ((36, 'T'), 43), ((36, 'U'), 43), ((36, 'V'), 43), ((36, 'W'), 43), ((36, 'X'), 43), ((36, 'Y'), 43), ((36, 'Z'), 43), ((36, '_'), 43), ((36, 'a'), 43), ((36, 'b'), 43), ((36, 'c'), 43), ((36, 'd'), 43), ((36, 'e'), 43), ((36, 'f'), 43), ((36, 'g'), 43), ((36, 'h'), 43), ((36, 'i'), 43), ((36, 'j'), 43), ((36, 'k'), 43), ((36, 'l'), 43), ((36, 'm'), 43), ((36, 'n'), 45), ((36, 'o'), 43), ((36, 'p'), 43), ((36, 'q'), 43), ((36, 'r'), 43), ((36, 's'), 43), ((36, 't'), 43), ((36, 'u'), 43), ((36, 'v'), 43), ((36, 'w'), 43), ((36, 'x'), 43), ((36, 'y'), 43), ((36, 'z'), 43)
            , ((37, '0'), 43), ((37, '1'), 43), ((37, '2'), 43), ((37, '3'), 43), ((37, '4'), 43), ((37, '5'), 43), ((37, '6'), 43), ((37, '7'), 43), ((37, '8'), 43), ((37, '9'), 43), ((37, 'A'), 43), ((37, 'B'), 43), ((37, 'C'), 43), ((37, 'D'), 43), ((37, 'E'), 43), ((37, 'F'), 43), ((37, 'G'), 43), ((37, 'H'), 43), ((37, 'I'), 43), ((37, 'J'), 43), ((37, 'K'), 43), ((37, 'L'), 43), ((37, 'M'), 43), ((37, 'N'), 43), ((37, 'O'), 43), ((37, 'P'), 43), ((37, 'Q'), 43), ((37, 'R'), 43), ((37, 'S'), 43), ((37, 'T'), 43), ((37, 'U'), 43), ((37, 'V'), 43), ((37, 'W'), 43), ((37, 'X'), 43), ((37, 'Y'), 43), ((37, 'Z'), 43), ((37, '_'), 43), ((37, 'a'), 43), ((37, 'b'), 43), ((37, 'c'), 43), ((37, 'd'), 43), ((37, 'e'), 43), ((37, 'f'), 43), ((37, 'g'), 43), ((37, 'h'), 43), ((37, 'i'), 36), ((37, 'j'), 43), ((37, 'k'), 43), ((37, 'l'), 43), ((37, 'm'), 43), ((37, 'n'), 43), ((37, 'o'), 43), ((37, 'p'), 43), ((37, 'q'), 43), ((37, 'r'), 43), ((37, 's'), 43), ((37, 't'), 43), ((37, 'u'), 43), ((37, 'v'), 43), ((37, 'w'), 43), ((37, 'x'), 43), ((37, 'y'), 43), ((37, 'z'), 43)
            , ((38, '0'), 43), ((38, '1'), 43), ((38, '2'), 43), ((38, '3'), 43), ((38, '4'), 43), ((38, '5'), 43), ((38, '6'), 43), ((38, '7'), 43), ((38, '8'), 43), ((38, '9'), 43), ((38, 'A'), 43), ((38, 'B'), 43), ((38, 'C'), 43), ((38, 'D'), 43), ((38, 'E'), 43), ((38, 'F'), 43), ((38, 'G'), 43), ((38, 'H'), 43), ((38, 'I'), 43), ((38, 'J'), 43), ((38, 'K'), 43), ((38, 'L'), 43), ((38, 'M'), 43), ((38, 'N'), 43), ((38, 'O'), 43), ((38, 'P'), 43), ((38, 'Q'), 43), ((38, 'R'), 43), ((38, 'S'), 43), ((38, 'T'), 43), ((38, 'U'), 43), ((38, 'V'), 43), ((38, 'W'), 43), ((38, 'X'), 43), ((38, 'Y'), 43), ((38, 'Z'), 43), ((38, '_'), 43), ((38, 'a'), 43), ((38, 'b'), 43), ((38, 'c'), 43), ((38, 'd'), 43), ((38, 'e'), 43), ((38, 'f'), 43), ((38, 'g'), 43), ((38, 'h'), 43), ((38, 'i'), 43), ((38, 'j'), 43), ((38, 'k'), 43), ((38, 'l'), 43), ((38, 'm'), 43), ((38, 'n'), 43), ((38, 'o'), 43), ((38, 'p'), 43), ((38, 'q'), 43), ((38, 'r'), 43), ((38, 's'), 43), ((38, 't'), 43), ((38, 'u'), 46), ((38, 'v'), 43), ((38, 'w'), 43), ((38, 'x'), 43), ((38, 'y'), 43), ((38, 'z'), 43)
            , ((39, '0'), 43), ((39, '1'), 43), ((39, '2'), 43), ((39, '3'), 43), ((39, '4'), 43), ((39, '5'), 43), ((39, '6'), 43), ((39, '7'), 43), ((39, '8'), 43), ((39, '9'), 43), ((39, 'A'), 43), ((39, 'B'), 43), ((39, 'C'), 43), ((39, 'D'), 43), ((39, 'E'), 43), ((39, 'F'), 43), ((39, 'G'), 43), ((39, 'H'), 43), ((39, 'I'), 43), ((39, 'J'), 43), ((39, 'K'), 43), ((39, 'L'), 43), ((39, 'M'), 43), ((39, 'N'), 43), ((39, 'O'), 43), ((39, 'P'), 43), ((39, 'Q'), 43), ((39, 'R'), 43), ((39, 'S'), 43), ((39, 'T'), 43), ((39, 'U'), 43), ((39, 'V'), 43), ((39, 'W'), 43), ((39, 'X'), 43), ((39, 'Y'), 43), ((39, 'Z'), 43), ((39, '_'), 43), ((39, 'a'), 43), ((39, 'b'), 43), ((39, 'c'), 43), ((39, 'd'), 43), ((39, 'e'), 43), ((39, 'f'), 43), ((39, 'g'), 43), ((39, 'h'), 43), ((39, 'i'), 43), ((39, 'j'), 43), ((39, 'k'), 43), ((39, 'l'), 43), ((39, 'm'), 43), ((39, 'n'), 43), ((39, 'o'), 43), ((39, 'p'), 47), ((39, 'q'), 43), ((39, 'r'), 43), ((39, 's'), 43), ((39, 't'), 43), ((39, 'u'), 43), ((39, 'v'), 43), ((39, 'w'), 43), ((39, 'x'), 43), ((39, 'y'), 43), ((39, 'z'), 43)
            , ((40, '0'), 43), ((40, '1'), 43), ((40, '2'), 43), ((40, '3'), 43), ((40, '4'), 43), ((40, '5'), 43), ((40, '6'), 43), ((40, '7'), 43), ((40, '8'), 43), ((40, '9'), 43), ((40, 'A'), 43), ((40, 'B'), 43), ((40, 'C'), 43), ((40, 'D'), 43), ((40, 'E'), 43), ((40, 'F'), 43), ((40, 'G'), 43), ((40, 'H'), 43), ((40, 'I'), 43), ((40, 'J'), 43), ((40, 'K'), 43), ((40, 'L'), 43), ((40, 'M'), 43), ((40, 'N'), 43), ((40, 'O'), 43), ((40, 'P'), 43), ((40, 'Q'), 43), ((40, 'R'), 43), ((40, 'S'), 43), ((40, 'T'), 43), ((40, 'U'), 43), ((40, 'V'), 43), ((40, 'W'), 43), ((40, 'X'), 43), ((40, 'Y'), 43), ((40, 'Z'), 43), ((40, '_'), 43), ((40, 'a'), 43), ((40, 'b'), 43), ((40, 'c'), 43), ((40, 'd'), 43), ((40, 'e'), 43), ((40, 'f'), 43), ((40, 'g'), 43), ((40, 'h'), 43), ((40, 'i'), 43), ((40, 'j'), 43), ((40, 'k'), 43), ((40, 'l'), 43), ((40, 'm'), 43), ((40, 'n'), 43), ((40, 'o'), 43), ((40, 'p'), 43), ((40, 'q'), 43), ((40, 'r'), 38), ((40, 's'), 43), ((40, 't'), 43), ((40, 'u'), 43), ((40, 'v'), 43), ((40, 'w'), 43), ((40, 'x'), 43), ((40, 'y'), 39), ((40, 'z'), 43)
            , ((41, '0'), 43), ((41, '1'), 43), ((41, '2'), 43), ((41, '3'), 43), ((41, '4'), 43), ((41, '5'), 43), ((41, '6'), 43), ((41, '7'), 43), ((41, '8'), 43), ((41, '9'), 43), ((41, 'A'), 43), ((41, 'B'), 43), ((41, 'C'), 43), ((41, 'D'), 43), ((41, 'E'), 43), ((41, 'F'), 43), ((41, 'G'), 43), ((41, 'H'), 43), ((41, 'I'), 43), ((41, 'J'), 43), ((41, 'K'), 43), ((41, 'L'), 43), ((41, 'M'), 43), ((41, 'N'), 43), ((41, 'O'), 43), ((41, 'P'), 43), ((41, 'Q'), 43), ((41, 'R'), 43), ((41, 'S'), 43), ((41, 'T'), 43), ((41, 'U'), 43), ((41, 'V'), 43), ((41, 'W'), 43), ((41, 'X'), 43), ((41, 'Y'), 43), ((41, 'Z'), 43), ((41, '_'), 43), ((41, 'a'), 43), ((41, 'b'), 43), ((41, 'c'), 43), ((41, 'd'), 43), ((41, 'e'), 43), ((41, 'f'), 43), ((41, 'g'), 43), ((41, 'h'), 43), ((41, 'i'), 48), ((41, 'j'), 43), ((41, 'k'), 43), ((41, 'l'), 43), ((41, 'm'), 43), ((41, 'n'), 43), ((41, 'o'), 43), ((41, 'p'), 43), ((41, 'q'), 43), ((41, 'r'), 43), ((41, 's'), 43), ((41, 't'), 43), ((41, 'u'), 43), ((41, 'v'), 43), ((41, 'w'), 43), ((41, 'x'), 43), ((41, 'y'), 43), ((41, 'z'), 43)
            , ((42, '0'), 43), ((42, '1'), 43), ((42, '2'), 43), ((42, '3'), 43), ((42, '4'), 43), ((42, '5'), 43), ((42, '6'), 43), ((42, '7'), 43), ((42, '8'), 43), ((42, '9'), 43), ((42, 'A'), 43), ((42, 'B'), 43), ((42, 'C'), 43), ((42, 'D'), 43), ((42, 'E'), 43), ((42, 'F'), 43), ((42, 'G'), 43), ((42, 'H'), 43), ((42, 'I'), 43), ((42, 'J'), 43), ((42, 'K'), 43), ((42, 'L'), 43), ((42, 'M'), 43), ((42, 'N'), 43), ((42, 'O'), 43), ((42, 'P'), 43), ((42, 'Q'), 43), ((42, 'R'), 43), ((42, 'S'), 43), ((42, 'T'), 43), ((42, 'U'), 43), ((42, 'V'), 43), ((42, 'W'), 43), ((42, 'X'), 43), ((42, 'Y'), 43), ((42, 'Z'), 43), ((42, '_'), 43), ((42, 'a'), 41), ((42, 'b'), 43), ((42, 'c'), 43), ((42, 'd'), 43), ((42, 'e'), 43), ((42, 'f'), 43), ((42, 'g'), 43), ((42, 'h'), 43), ((42, 'i'), 43), ((42, 'j'), 43), ((42, 'k'), 43), ((42, 'l'), 43), ((42, 'm'), 43), ((42, 'n'), 43), ((42, 'o'), 43), ((42, 'p'), 43), ((42, 'q'), 43), ((42, 'r'), 43), ((42, 's'), 43), ((42, 't'), 43), ((42, 'u'), 43), ((42, 'v'), 43), ((42, 'w'), 43), ((42, 'x'), 43), ((42, 'y'), 43), ((42, 'z'), 43)
            , ((43, '0'), 43), ((43, '1'), 43), ((43, '2'), 43), ((43, '3'), 43), ((43, '4'), 43), ((43, '5'), 43), ((43, '6'), 43), ((43, '7'), 43), ((43, '8'), 43), ((43, '9'), 43), ((43, 'A'), 43), ((43, 'B'), 43), ((43, 'C'), 43), ((43, 'D'), 43), ((43, 'E'), 43), ((43, 'F'), 43), ((43, 'G'), 43), ((43, 'H'), 43), ((43, 'I'), 43), ((43, 'J'), 43), ((43, 'K'), 43), ((43, 'L'), 43), ((43, 'M'), 43), ((43, 'N'), 43), ((43, 'O'), 43), ((43, 'P'), 43), ((43, 'Q'), 43), ((43, 'R'), 43), ((43, 'S'), 43), ((43, 'T'), 43), ((43, 'U'), 43), ((43, 'V'), 43), ((43, 'W'), 43), ((43, 'X'), 43), ((43, 'Y'), 43), ((43, 'Z'), 43), ((43, '_'), 43), ((43, 'a'), 43), ((43, 'b'), 43), ((43, 'c'), 43), ((43, 'd'), 43), ((43, 'e'), 43), ((43, 'f'), 43), ((43, 'g'), 43), ((43, 'h'), 43), ((43, 'i'), 43), ((43, 'j'), 43), ((43, 'k'), 43), ((43, 'l'), 43), ((43, 'm'), 43), ((43, 'n'), 43), ((43, 'o'), 43), ((43, 'p'), 43), ((43, 'q'), 43), ((43, 'r'), 43), ((43, 's'), 43), ((43, 't'), 43), ((43, 'u'), 43), ((43, 'v'), 43), ((43, 'w'), 43), ((43, 'x'), 43), ((43, 'y'), 43), ((43, 'z'), 43)
            , ((44, '0'), 43), ((44, '1'), 43), ((44, '2'), 43), ((44, '3'), 43), ((44, '4'), 43), ((44, '5'), 43), ((44, '6'), 43), ((44, '7'), 43), ((44, '8'), 43), ((44, '9'), 43), ((44, 'A'), 43), ((44, 'B'), 43), ((44, 'C'), 43), ((44, 'D'), 43), ((44, 'E'), 43), ((44, 'F'), 43), ((44, 'G'), 43), ((44, 'H'), 43), ((44, 'I'), 43), ((44, 'J'), 43), ((44, 'K'), 43), ((44, 'L'), 43), ((44, 'M'), 43), ((44, 'N'), 43), ((44, 'O'), 43), ((44, 'P'), 43), ((44, 'Q'), 43), ((44, 'R'), 43), ((44, 'S'), 43), ((44, 'T'), 43), ((44, 'U'), 43), ((44, 'V'), 43), ((44, 'W'), 43), ((44, 'X'), 43), ((44, 'Y'), 43), ((44, 'Z'), 43), ((44, '_'), 43), ((44, 'a'), 24), ((44, 'b'), 43), ((44, 'c'), 43), ((44, 'd'), 43), ((44, 'e'), 43), ((44, 'f'), 43), ((44, 'g'), 43), ((44, 'h'), 43), ((44, 'i'), 43), ((44, 'j'), 43), ((44, 'k'), 43), ((44, 'l'), 43), ((44, 'm'), 43), ((44, 'n'), 43), ((44, 'o'), 43), ((44, 'p'), 43), ((44, 'q'), 43), ((44, 'r'), 43), ((44, 's'), 43), ((44, 't'), 43), ((44, 'u'), 43), ((44, 'v'), 43), ((44, 'w'), 43), ((44, 'x'), 43), ((44, 'y'), 43), ((44, 'z'), 43)
            , ((45, '0'), 43), ((45, '1'), 43), ((45, '2'), 43), ((45, '3'), 43), ((45, '4'), 43), ((45, '5'), 43), ((45, '6'), 43), ((45, '7'), 43), ((45, '8'), 43), ((45, '9'), 43), ((45, 'A'), 43), ((45, 'B'), 43), ((45, 'C'), 43), ((45, 'D'), 43), ((45, 'E'), 43), ((45, 'F'), 43), ((45, 'G'), 43), ((45, 'H'), 43), ((45, 'I'), 43), ((45, 'J'), 43), ((45, 'K'), 43), ((45, 'L'), 43), ((45, 'M'), 43), ((45, 'N'), 43), ((45, 'O'), 43), ((45, 'P'), 43), ((45, 'Q'), 43), ((45, 'R'), 43), ((45, 'S'), 43), ((45, 'T'), 43), ((45, 'U'), 43), ((45, 'V'), 43), ((45, 'W'), 43), ((45, 'X'), 43), ((45, 'Y'), 43), ((45, 'Z'), 43), ((45, '_'), 43), ((45, 'a'), 43), ((45, 'b'), 43), ((45, 'c'), 43), ((45, 'd'), 31), ((45, 'e'), 43), ((45, 'f'), 43), ((45, 'g'), 43), ((45, 'h'), 43), ((45, 'i'), 43), ((45, 'j'), 43), ((45, 'k'), 43), ((45, 'l'), 43), ((45, 'm'), 43), ((45, 'n'), 43), ((45, 'o'), 43), ((45, 'p'), 43), ((45, 'q'), 43), ((45, 'r'), 43), ((45, 's'), 43), ((45, 't'), 43), ((45, 'u'), 43), ((45, 'v'), 43), ((45, 'w'), 43), ((45, 'x'), 43), ((45, 'y'), 43), ((45, 'z'), 43)
            , ((46, '0'), 43), ((46, '1'), 43), ((46, '2'), 43), ((46, '3'), 43), ((46, '4'), 43), ((46, '5'), 43), ((46, '6'), 43), ((46, '7'), 43), ((46, '8'), 43), ((46, '9'), 43), ((46, 'A'), 43), ((46, 'B'), 43), ((46, 'C'), 43), ((46, 'D'), 43), ((46, 'E'), 43), ((46, 'F'), 43), ((46, 'G'), 43), ((46, 'H'), 43), ((46, 'I'), 43), ((46, 'J'), 43), ((46, 'K'), 43), ((46, 'L'), 43), ((46, 'M'), 43), ((46, 'N'), 43), ((46, 'O'), 43), ((46, 'P'), 43), ((46, 'Q'), 43), ((46, 'R'), 43), ((46, 'S'), 43), ((46, 'T'), 43), ((46, 'U'), 43), ((46, 'V'), 43), ((46, 'W'), 43), ((46, 'X'), 43), ((46, 'Y'), 43), ((46, 'Z'), 43), ((46, '_'), 43), ((46, 'a'), 43), ((46, 'b'), 43), ((46, 'c'), 43), ((46, 'd'), 43), ((46, 'e'), 27), ((46, 'f'), 43), ((46, 'g'), 43), ((46, 'h'), 43), ((46, 'i'), 43), ((46, 'j'), 43), ((46, 'k'), 43), ((46, 'l'), 43), ((46, 'm'), 43), ((46, 'n'), 43), ((46, 'o'), 43), ((46, 'p'), 43), ((46, 'q'), 43), ((46, 'r'), 43), ((46, 's'), 43), ((46, 't'), 43), ((46, 'u'), 43), ((46, 'v'), 43), ((46, 'w'), 43), ((46, 'x'), 43), ((46, 'y'), 43), ((46, 'z'), 43)
            , ((47, '0'), 43), ((47, '1'), 43), ((47, '2'), 43), ((47, '3'), 43), ((47, '4'), 43), ((47, '5'), 43), ((47, '6'), 43), ((47, '7'), 43), ((47, '8'), 43), ((47, '9'), 43), ((47, 'A'), 43), ((47, 'B'), 43), ((47, 'C'), 43), ((47, 'D'), 43), ((47, 'E'), 43), ((47, 'F'), 43), ((47, 'G'), 43), ((47, 'H'), 43), ((47, 'I'), 43), ((47, 'J'), 43), ((47, 'K'), 43), ((47, 'L'), 43), ((47, 'M'), 43), ((47, 'N'), 43), ((47, 'O'), 43), ((47, 'P'), 43), ((47, 'Q'), 43), ((47, 'R'), 43), ((47, 'S'), 43), ((47, 'T'), 43), ((47, 'U'), 43), ((47, 'V'), 43), ((47, 'W'), 43), ((47, 'X'), 43), ((47, 'Y'), 43), ((47, 'Z'), 43), ((47, '_'), 43), ((47, 'a'), 43), ((47, 'b'), 43), ((47, 'c'), 43), ((47, 'd'), 43), ((47, 'e'), 32), ((47, 'f'), 43), ((47, 'g'), 43), ((47, 'h'), 43), ((47, 'i'), 43), ((47, 'j'), 43), ((47, 'k'), 43), ((47, 'l'), 43), ((47, 'm'), 43), ((47, 'n'), 43), ((47, 'o'), 43), ((47, 'p'), 43), ((47, 'q'), 43), ((47, 'r'), 43), ((47, 's'), 43), ((47, 't'), 43), ((47, 'u'), 43), ((47, 'v'), 43), ((47, 'w'), 43), ((47, 'x'), 43), ((47, 'y'), 43), ((47, 'z'), 43)
            , ((48, '0'), 43), ((48, '1'), 43), ((48, '2'), 43), ((48, '3'), 43), ((48, '4'), 43), ((48, '5'), 43), ((48, '6'), 43), ((48, '7'), 43), ((48, '8'), 43), ((48, '9'), 43), ((48, 'A'), 43), ((48, 'B'), 43), ((48, 'C'), 43), ((48, 'D'), 43), ((48, 'E'), 43), ((48, 'F'), 43), ((48, 'G'), 43), ((48, 'H'), 43), ((48, 'I'), 43), ((48, 'J'), 43), ((48, 'K'), 43), ((48, 'L'), 43), ((48, 'M'), 43), ((48, 'N'), 43), ((48, 'O'), 43), ((48, 'P'), 43), ((48, 'Q'), 43), ((48, 'R'), 43), ((48, 'S'), 43), ((48, 'T'), 43), ((48, 'U'), 43), ((48, 'V'), 43), ((48, 'W'), 43), ((48, 'X'), 43), ((48, 'Y'), 43), ((48, 'Z'), 43), ((48, '_'), 43), ((48, 'a'), 43), ((48, 'b'), 43), ((48, 'c'), 43), ((48, 'd'), 43), ((48, 'e'), 43), ((48, 'f'), 43), ((48, 'g'), 43), ((48, 'h'), 43), ((48, 'i'), 43), ((48, 'j'), 43), ((48, 'k'), 43), ((48, 'l'), 28), ((48, 'm'), 43), ((48, 'n'), 43), ((48, 'o'), 43), ((48, 'p'), 43), ((48, 'q'), 43), ((48, 'r'), 43), ((48, 's'), 43), ((48, 't'), 43), ((48, 'u'), 43), ((48, 'v'), 43), ((48, 'w'), 43), ((48, 'x'), 43), ((48, 'y'), 43), ((48, 'z'), 43)
            , ((50, '0'), 50), ((50, '1'), 50), ((50, '2'), 50), ((50, '3'), 50), ((50, '4'), 50), ((50, '5'), 50), ((50, '6'), 50), ((50, '7'), 50), ((50, '8'), 50), ((50, '9'), 50), ((50, 'A'), 50), ((50, 'B'), 50), ((50, 'C'), 50), ((50, 'D'), 50), ((50, 'E'), 50), ((50, 'F'), 50), ((50, 'G'), 50), ((50, 'H'), 50), ((50, 'I'), 50), ((50, 'J'), 50), ((50, 'K'), 50), ((50, 'L'), 50), ((50, 'M'), 50), ((50, 'N'), 50), ((50, 'O'), 50), ((50, 'P'), 50), ((50, 'Q'), 50), ((50, 'R'), 50), ((50, 'S'), 50), ((50, 'T'), 50), ((50, 'U'), 50), ((50, 'V'), 50), ((50, 'W'), 50), ((50, 'X'), 50), ((50, 'Y'), 50), ((50, 'Z'), 50), ((50, '_'), 50), ((50, 'a'), 50), ((50, 'b'), 50), ((50, 'c'), 50), ((50, 'd'), 50), ((50, 'e'), 50), ((50, 'f'), 50), ((50, 'g'), 50), ((50, 'h'), 50), ((50, 'i'), 50), ((50, 'j'), 50), ((50, 'k'), 50), ((50, 'l'), 50), ((50, 'm'), 50), ((50, 'n'), 50), ((50, 'o'), 50), ((50, 'p'), 50), ((50, 'q'), 50), ((50, 'r'), 50), ((50, 's'), 50), ((50, 't'), 50), ((50, 'u'), 50), ((50, 'v'), 50), ((50, 'w'), 50), ((50, 'x'), 50), ((50, 'y'), 50), ((50, 'z'), 50)
            , ((51, '0'), 51), ((51, '1'), 51), ((51, '2'), 51), ((51, '3'), 51), ((51, '4'), 51), ((51, '5'), 51), ((51, '6'), 51), ((51, '7'), 51), ((51, '8'), 51), ((51, '9'), 51)
            , ((54, '\n'), 54), ((54, ' '), 54)
            , ((55, ' '), 55), ((55, '!'), 55), ((55, '"'), 55), ((55, '#'), 55), ((55, '$'), 55), ((55, '%'), 55), ((55, '&'), 55), ((55, '\''), 55), ((55, '('), 55), ((55, ')'), 55), ((55, '*'), 55), ((55, '+'), 55), ((55, ','), 55), ((55, '-'), 55), ((55, '.'), 55), ((55, '/'), 55), ((55, '0'), 55), ((55, '1'), 55), ((55, '2'), 55), ((55, '3'), 55), ((55, '4'), 55), ((55, '5'), 55), ((55, '6'), 55), ((55, '7'), 55), ((55, '8'), 55), ((55, '9'), 55), ((55, ':'), 55), ((55, ';'), 55), ((55, '<'), 55), ((55, '='), 55), ((55, '>'), 55), ((55, '?'), 55), ((55, '@'), 55), ((55, 'A'), 55), ((55, 'B'), 55), ((55, 'C'), 55), ((55, 'D'), 55), ((55, 'E'), 55), ((55, 'F'), 55), ((55, 'G'), 55), ((55, 'H'), 55), ((55, 'I'), 55), ((55, 'J'), 55), ((55, 'K'), 55), ((55, 'L'), 55), ((55, 'M'), 55), ((55, 'N'), 55), ((55, 'O'), 55), ((55, 'P'), 55), ((55, 'Q'), 55), ((55, 'R'), 55), ((55, 'S'), 55), ((55, 'T'), 55), ((55, 'U'), 55), ((55, 'V'), 55), ((55, 'W'), 55), ((55, 'X'), 55), ((55, 'Y'), 55), ((55, 'Z'), 55), ((55, '['), 55), ((55, '\\'), 55), ((55, ']'), 55), ((55, '^'), 55), ((55, '_'), 55), ((55, '`'), 55), ((55, 'a'), 55), ((55, 'b'), 55), ((55, 'c'), 55), ((55, 'd'), 55), ((55, 'e'), 55), ((55, 'f'), 55), ((55, 'g'), 55), ((55, 'h'), 55), ((55, 'i'), 55), ((55, 'j'), 55), ((55, 'k'), 55), ((55, 'l'), 55), ((55, 'm'), 55), ((55, 'n'), 55), ((55, 'o'), 55), ((55, 'p'), 55), ((55, 'q'), 55), ((55, 'r'), 55), ((55, 's'), 55), ((55, 't'), 55), ((55, 'u'), 55), ((55, 'v'), 55), ((55, 'w'), 55), ((55, 'x'), 55), ((55, 'y'), 55), ((55, 'z'), 55), ((55, '{'), 55), ((55, '|'), 55), ((55, '}'), 55), ((55, '~'), 55)
            ]
        , getMarkedQsOfDFA = XMap.fromAscList []
        }
    runDFA :: DFA -> [((Int, Int), Char)] -> ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
    runDFA (DFA q0 qfs deltas markeds) = XIdentity.runIdentity . go where
        loop1 :: Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT (Maybe Int, [((Int, Int), Char)]) XIdentity.Identity [((Int, Int), Char)]
        loop1 q buffer [] = return buffer
        loop1 q buffer (ch : str) = do
            (latest, accepted) <- XState.get
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case XMap.lookup p qfs of
                    Nothing -> loop1 p (buffer ++ [ch]) str
                    latest' -> do
                        XState.put (latest', accepted ++ buffer ++ [ch])
                        loop1 p [] str
        loop2 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop2 qs q [] buffer = return buffer
        loop2 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop2 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        loop2 qs p str []
        loop3 :: XSet.Set Int -> Int -> [((Int, Int), Char)] -> [((Int, Int), Char)] -> XState.StateT [((Int, Int), Char)] XIdentity.Identity [((Int, Int), Char)]
        loop3 qs q [] buffer = return buffer
        loop3 qs q (ch : str) buffer = do
            case XMap.lookup (q, snd ch) deltas of
                Nothing -> return (buffer ++ [ch] ++ str)
                Just p -> case p `XSet.member` qs of
                    False -> loop3 qs p str (buffer ++ [ch])
                    True -> do
                        accepted <- XState.get
                        XState.put (accepted ++ buffer ++ [ch])
                        return str
        go :: [((Int, Int), Char)] -> XIdentity.Identity ((Maybe Int, [((Int, Int), Char)]), [((Int, Int), Char)])
        go input = do
            (rest, (latest, accepted)) <- XState.runStateT (loop1 q0 [] input) (Nothing, [])
            case latest >>= flip XMap.lookup markeds of
                Nothing -> return ((latest, accepted), rest)
                Just (True, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop2 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
                Just (False, qs) -> do
                    (rest', accepted') <- XState.runStateT (loop3 qs q0 accepted []) []
                    return ((latest, accepted'), rest' ++ rest)
    addLoc :: Int -> Int -> String -> [((Int, Int), Char)]
    addLoc _ _ [] = []
    addLoc row col (ch : chs) = if ch == '\n' then ((row, col), ch) : addLoc (row + 1) 1 chs else ((row, col), ch) : addLoc row (col + 1) chs
    doLexing :: [((Int, Int), Char)] -> Either (Int, Int) [Token]
    doLexing [] = return []
    doLexing str0 = do
        let returnJust = return . Just
        (str1, piece) <- case runDFA theDFA str0 of
            ((_, []), _) -> Left (fst (head str0))
            ((Just label, accepted), rest) -> return (rest, ((label, map snd accepted), (fst (head accepted), fst (head (reverse accepted)))))
            _ -> Left (fst (head str0))
        maybe_token <- case piece of
            ((1, this), ((row1, col1), (row2, col2))) -> returnJust (T_dot (SLoc (row1, col1) (row2, col2)))
            ((2, this), ((row1, col1), (row2, col2))) -> returnJust (T_arrow (SLoc (row1, col1) (row2, col2)))
            ((3, this), ((row1, col1), (row2, col2))) -> returnJust (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((4, this), ((row1, col1), (row2, col2))) -> returnJust (T_lparen (SLoc (row1, col1) (row2, col2)))
            ((5, this), ((row1, col1), (row2, col2))) -> returnJust (T_rparen (SLoc (row1, col1) (row2, col2)))
            ((6, this), ((row1, col1), (row2, col2))) -> returnJust (T_lbracket (SLoc (row1, col1) (row2, col2)))
            ((7, this), ((row1, col1), (row2, col2))) -> returnJust (T_rbracket (SLoc (row1, col1) (row2, col2)))
            ((8, this), ((row1, col1), (row2, col2))) -> returnJust (T_quest (SLoc (row1, col1) (row2, col2)))
            ((9, this), ((row1, col1), (row2, col2))) -> returnJust (T_comma (SLoc (row1, col1) (row2, col2)))
            ((10, this), ((row1, col1), (row2, col2))) -> returnJust (T_fatarrow (SLoc (row1, col1) (row2, col2)))
            ((11, this), ((row1, col1), (row2, col2))) -> returnJust (T_if (SLoc (row1, col1) (row2, col2)))
            ((12, this), ((row1, col1), (row2, col2))) -> returnJust (T_Eq (SLoc (row1, col1) (row2, col2)))
            ((13, this), ((row1, col1), (row2, col2))) -> returnJust (T_succ (SLoc (row1, col1) (row2, col2)))
            ((14, this), ((row1, col1), (row2, col2))) -> returnJust (T_pi (SLoc (row1, col1) (row2, col2)))
            ((15, this), ((row1, col1), (row2, col2))) -> returnJust (T_sigma (SLoc (row1, col1) (row2, col2)))
            ((16, this), ((row1, col1), (row2, col2))) -> returnJust (T_semicolon (SLoc (row1, col1) (row2, col2)))
            ((17, this), ((row1, col1), (row2, col2))) -> returnJust (T_cut (SLoc (row1, col1) (row2, col2)))
            ((18, this), ((row1, col1), (row2, col2))) -> returnJust (T_true (SLoc (row1, col1) (row2, col2)))
            ((19, this), ((row1, col1), (row2, col2))) -> returnJust (T_fail (SLoc (row1, col1) (row2, col2)))
            ((20, this), ((row1, col1), (row2, col2))) -> returnJust (T_bslash (SLoc (row1, col1) (row2, col2)))
            ((21, this), ((row1, col1), (row2, col2))) -> returnJust (T_cons (SLoc (row1, col1) (row2, col2)))
            ((22, this), ((row1, col1), (row2, col2))) -> returnJust (T_kind (SLoc (row1, col1) (row2, col2)))
            ((23, this), ((row1, col1), (row2, col2))) -> returnJust (T_type (SLoc (row1, col1) (row2, col2)))
            ((24, this), ((row1, col1), (row2, col2))) -> returnJust (T_smallid (SLoc (row1, col1) (row2, col2)) this)
            ((25, this), ((row1, col1), (row2, col2))) -> returnJust (T_largeid (SLoc (row1, col1) (row2, col2)) this)
            ((26, this), ((row1, col1), (row2, col2))) -> returnJust (T_nat_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((27, this), ((row1, col1), (row2, col2))) -> returnJust (T_str_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((28, this), ((row1, col1), (row2, col2))) -> returnJust (T_chr_lit (SLoc (row1, col1) (row2, col2)) (read this))
            ((29, this), ((row1, col1), (row2, col2))) -> return Nothing
            ((30, this), ((row1, col1), (row2, col2))) -> return Nothing
        fmap (maybe id (:) maybe_token) (doLexing str1)
